{
	"id": "2680ebb4e7f3216c34c6b2110a7aba78",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/worksystems/Parameters.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.0;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n@title Parameters  v0.1\r\n@author Mathias Dail\r\n*/\r\ncontract Parameters is Ownable {\r\n    // Default values\r\n    //////////////// GENERAL SYSTEM PARAMTERS\r\n    uint256 public MAX_TOTAL_WORKERS = 1000;\r\n    uint256 public VOTE_QUORUM  = 50;   \r\n    uint256 public MAX_UPDATE_ITERATIONS  = 50;   \r\n    uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000;   \r\n    //////////////// SPOTTING RELATED PARAMETERS\r\n    uint256 public SPOT_DATA_BATCH_SIZE = 1;\r\n    uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2;   \r\n    uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4;\r\n    uint256 public SPOT_COMMIT_ROUND_DURATION = 180;\r\n    uint256 public SPOT_REVEAL_ROUND_DURATION = 180;       \r\n    uint256 public SPOT_MIN_REWARD_Data = 2 * (10 ** 18);\r\n    uint256 public SPOT_MIN_REP_Data  = 40 * (10 ** 18);\r\n    // SPOT DATA LIMITATIONS\r\n    uint256 public SPOT_INTER_ALLOCATION_DURATION = 400;\r\n    bool public SPOT_TOGGLE_ENABLED = true;\r\n    uint256 public SPOT_TIMEFRAME_DURATION  = 15*60; //15 minutes\r\n    uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000;\r\n    uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25;\r\n    uint256 public SPOT_NB_TIMEFRAMES = 4;\r\n    uint256 public MAX_SUCCEEDING_NOVOTES  = 3;    \r\n    uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600;    // in seconds\r\n    //////////////// FORMATTING RELATED PARAMETERS\r\n    uint256 public FORMAT_DATA_BATCH_SIZE = 1; \r\n    uint256 public FORMAT_MIN_CONSENSUS_WORKER_COUNT  = 2; \r\n    uint256 public FORMAT_MAX_CONSENSUS_WORKER_COUNT  = 4;   \r\n    uint256 public FORMAT_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public FORMAT_COMMIT_ROUND_DURATION = 400;\r\n    uint256 public FORMAT_REVEAL_ROUND_DURATION = 180;  \r\n    uint256 public FORMAT_MIN_REWARD_Data = 3 * (10 ** 18);\r\n    uint256 public FORMAT_MIN_REP_Data  = 50 * (10 ** 18);\r\n    //////////////// CONTRACTS\r\n    address public token;\r\n    address public StakeManager;\r\n    address public RepManager;\r\n    address public RewardManager;\r\n    address public AddressManager;\r\n    address public SpottingSystem;\r\n    address public FormattingSystem;\r\n    address public sFuel;\r\n\r\n    \r\n// for other contracts\r\n// interface IParametersManager {\r\n//       // -------------- GETTERS : GENERAL --------------------\r\n//     function getMaxTotalWorkers() external view returns(uint256);\r\n//     function getVoteQuorum() external view returns(uint256);\r\n//     function get_MAX_UPDATE_ITERATIONS() external view returns(uint256);\r\n//     function get_MAX_CONTRACT_STORED_BATCHES() external view returns(uint256);\r\n//     function get_MAX_SUCCEEDING_NOVOTES() external view returns(uint256);\r\n//     function get_NOVOTE_REGISTRATION_WAIT_DURATION() external view returns(uint256);\r\n//     // -------------- GETTERS : ADDRESSES --------------------    \r\n//     function getStakeManager() external view returns(address);\r\n//     function getRepManager() external view returns(address);\r\n//     function getRewardManager() external view returns(address);\r\n//     function getSpottingSystem() external view returns(address);\r\n//     function getFormattingSystem() external view returns(address);\r\n//     function getsFuelSystem() external view returns(address);\r\n//     function getExordeToken() external view returns(address);\r\n//     // -------------- GETTERS : SPOTTING --------------------\r\n//     function get_SPOT_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_SPOT_MIN_STAKE() external view returns(uint256);\r\n//     function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_SPOT_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_SPOT_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_SPOT_MIN_REP_Data() external view returns(uint256);\r\n//     function get_SPOT_MIN_REWARD_Data() external view returns(uint256);\r\n//     function get_SPOT_INTER_ALLOCATION_DURATION() external view returns(uint256);\r\n//     function get_SPOT_TOGGLE_ENABLED() external view returns(bool);\r\n//     function get_SPOT_TIMEFRAME_DURATION() external view returns(uint256);\r\n//     function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() external view returns(uint256);\r\n//     function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() external view returns(uint256);\r\n//     function get_SPOT_NB_TIMEFRAMES() external view returns(uint256);\r\n//     // -------------- GETTERS : FORMATTING --------------------\r\n//     function get_FORMAT_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_FORMAT_MIN_STAKE() external view returns(uint256);\r\n//     function get_FORMAT_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_FORMAT_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_FORMAT_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_FORMAT_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_FORMAT_MIN_REWARD_Data() external view returns(uint256);\r\n//     function get_FORMAT_MIN_REP_Data() external view returns(uint256);\r\n// }\r\n    \r\n    function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            MAX_TOTAL_WORKERS = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            VOTE_QUORUM  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            MAX_UPDATE_ITERATIONS  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            MAX_CONTRACT_STORED_BATCHES  = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    function updateContractsAddresses(address StakeManager_, address RepManager_, address RewardManager_, address AddressManager_,\r\n                                      address SpottingSystem_, address FormattingSystem_, address sFuel_, address token_) public  onlyOwner {\r\n        if(StakeManager_ != address(0)){\r\n            StakeManager = StakeManager_;\r\n        }\r\n        if(RepManager_ != address(0)){\r\n            RepManager = RepManager_;\r\n        }\r\n        if(RewardManager_ != address(0)){\r\n            RewardManager = RewardManager_;\r\n        }\r\n        if(AddressManager_ != address(0)){\r\n            AddressManager = AddressManager_;\r\n        }\r\n        if(SpottingSystem_ != address(0)){\r\n            SpottingSystem = SpottingSystem_;\r\n        }\r\n        if(FormattingSystem_ != address(0)){\r\n            FormattingSystem = FormattingSystem_;\r\n        }\r\n        if(sFuel_ != address(0)){\r\n            sFuel = sFuel_;\r\n        }\r\n        if(token_ != address(0)){\r\n            token = token_;\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            SPOT_DATA_BATCH_SIZE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            SPOT_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            SPOT_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            SPOT_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            SPOT_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            SPOT_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            SPOT_MIN_REWARD_Data  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            SPOT_MIN_REP_Data  = uintValue;\r\n        }\r\n        // Spotting DataInput Management system\r\n        if(ParameterIndex == 9){\r\n            SPOT_INTER_ALLOCATION_DURATION = uintValue;\r\n        }\r\n        if(ParameterIndex == 10){\r\n            SPOT_TOGGLE_ENABLED = boolValue;\r\n        }\r\n        if(ParameterIndex == 11){\r\n            SPOT_TIMEFRAME_DURATION = uintValue;\r\n        }\r\n        if(ParameterIndex == 12){\r\n            SPOT_GLOBAL_MAX_SPOT_PER_PERIOD = uintValue;\r\n        }\r\n        if(ParameterIndex == 13){\r\n            SPOT_MAX_SPOT_PER_USER_PER_PERIOD = uintValue;\r\n        }\r\n        if(ParameterIndex == 14){\r\n            SPOT_NB_TIMEFRAMES = uintValue;\r\n        }\r\n        if(ParameterIndex == 15){\r\n            MAX_SUCCEEDING_NOVOTES = uintValue;\r\n        }\r\n        if(ParameterIndex == 16){\r\n            NOVOTE_REGISTRATION_WAIT_DURATION = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    function updateFormattingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            FORMAT_DATA_BATCH_SIZE = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            FORMAT_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            FORMAT_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            FORMAT_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            FORMAT_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            FORMAT_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            FORMAT_MIN_REWARD_Data  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            FORMAT_MIN_REP_Data  = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    // -------------- GETTERS : GENERAL --------------------\r\n    function getMaxTotalWorkers() public view returns(uint256){\r\n        return MAX_TOTAL_WORKERS;\r\n    }\r\n    function getVoteQuorum() public view returns(uint256){\r\n        return VOTE_QUORUM;\r\n    }\r\n    function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r\n        return MAX_UPDATE_ITERATIONS;\r\n    }\r\n    function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r\n        return MAX_CONTRACT_STORED_BATCHES;\r\n    }\r\n\r\n    // -------------- GETTERS : ADDRESSES --------------------    \r\n    function getStakeManager() public view returns(address){\r\n        return StakeManager;\r\n    }\r\n    function getRepManager() public view returns(address){\r\n        return RepManager;\r\n    }\r\n    function getRewardManager() public view returns(address){\r\n        return RewardManager;\r\n    }    \r\n    function getSpottingSystem() public view returns(address){\r\n        return SpottingSystem;\r\n    }\r\n    function getFormattingSystem() public view returns(address){\r\n        return FormattingSystem;\r\n    }\r\n    function getsFuelSystem() public view returns(address){\r\n        return sFuel;\r\n    }\r\n    function getExordeToken() public view returns(address){\r\n        return token;\r\n    }\r\n\r\n    // -------------- GETTERS : SPOTTING --------------------\r\n    function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return SPOT_DATA_BATCH_SIZE;\r\n    }\r\n    function get_SPOT_MIN_STAKE() public view returns(uint256){\r\n        return SPOT_MIN_STAKE;\r\n    }\r\n    function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return SPOT_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return SPOT_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return SPOT_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return SPOT_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_SPOT_MIN_REP_Data() public view returns(uint256){\r\n        return SPOT_MIN_REP_Data;\r\n    }\r\n    function get_SPOT_MIN_REWARD_Data() public view returns(uint256){\r\n        return SPOT_MIN_REWARD_Data;\r\n    }\r\n    function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r\n        return SPOT_INTER_ALLOCATION_DURATION;\r\n    }\r\n    function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r\n        return SPOT_TOGGLE_ENABLED;\r\n    }    \r\n    function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r\n        return SPOT_TIMEFRAME_DURATION;\r\n    }    \r\n    function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r\n        return SPOT_GLOBAL_MAX_SPOT_PER_PERIOD;\r\n    }    \r\n    function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r\n        return SPOT_MAX_SPOT_PER_USER_PER_PERIOD;\r\n    }\r\n    function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r\n        return SPOT_NB_TIMEFRAMES;\r\n    }\r\n    function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r\n        return MAX_SUCCEEDING_NOVOTES;\r\n    }\r\n    function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r\n        return NOVOTE_REGISTRATION_WAIT_DURATION;\r\n    }\r\n\r\n    // -------------- GETTERS : FORMATTING --------------------\r\n    function get_FORMAT_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return FORMAT_DATA_BATCH_SIZE;\r\n    }\r\n    function get_FORMAT_MIN_STAKE() public view returns(uint256){\r\n        return FORMAT_MIN_STAKE;\r\n    }\r\n    function get_FORMAT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return FORMAT_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_FORMAT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return FORMAT_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_FORMAT_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return FORMAT_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_FORMAT_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return FORMAT_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_FORMAT_MIN_REWARD_Data() public view returns(uint256){\r\n        return FORMAT_MIN_REWARD_Data;\r\n    }\r\n    function get_FORMAT_MIN_REP_Data() public view returns(uint256){\r\n        return FORMAT_MIN_REP_Data;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity 0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/Math.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity 0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":187:1211  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":187:1211  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122049552ebdffb27539b9d296ca7b93a66d13487d9c49a496ed72fc7f207d5a5ef464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049552ebdffb27539b9d296ca7b93a66d13487d9c49a496ed72fc7f207d5a5ef464736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SSTORE 0x2E 0xBD SELFDESTRUCT 0xB2 PUSH22 0x39B9D296CA7B93A66D13487D9C49A496ED72FC7F207D GAS 0x5E DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "187:1024:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:1024:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122049552ebdffb27539b9d296ca7b93a66d13487d9c49a496ed72fc7f207d5a5ef464736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SSTORE 0x2E 0xBD SELFDESTRUCT 0xB2 PUSH22 0x39B9D296CA7B93A66D13487D9C49A496ED72FC7F207D GAS 0x5E DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "187:1024:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 187,
									"end": 1211,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122049552ebdffb27539b9d296ca7b93a66d13487d9c49a496ed72fc7f207d5a5ef464736f6c63430008000033",
									".code": [
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 1211,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe936fc79332de2ca7b1c06a70f81345aa2466958aab00f463e312ca0585e85cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1308706a315fce707f34bb974e08c8e8f8a5674123890d5c67f495be4e539081\",\"dweb:/ipfs/QmTk2mgRyHkq238Qm75Uc3EF3s76yG3kSsxdgTJWgLjitE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d108eea9296b6e6ade7552e86c8276b7b31e101be48a5fec73d74e0a1f9e1ff164736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d108eea9296b6e6ade7552e86c8276b7b31e101be48a5fec73d74e0a1f9e1ff164736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 ADDMOD 0xEE 0xA9 0x29 PUSH12 0x6E6ADE7552E86C8276B7B31E LT SHL 0xE4 DUP11 0x5F 0xEC PUSH20 0xD74E0A1F9E1FF164736F6C634300080000330000 ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d108eea9296b6e6ade7552e86c8276b7b31e101be48a5fec73d74e0a1f9e1ff164736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 ADDMOD 0xEE 0xA9 0x29 PUSH12 0x6E6ADE7552E86C8276B7B31E LT SHL 0xE4 DUP11 0x5F 0xEC PUSH20 0xD74E0A1F9E1FF164736F6C634300080000330000 ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d108eea9296b6e6ade7552e86c8276b7b31e101be48a5fec73d74e0a1f9e1ff164736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/worksystems/Parameters.sol": {
				"Parameters": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AddressManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_MIN_REP_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_MIN_REWARD_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FORMAT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FormattingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_CONTRACT_STORED_BATCHES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUCCEEDING_NOVOTES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TOTAL_WORKERS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_UPDATE_ITERATIONS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RepManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RewardManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_INTER_ALLOCATION_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REP_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REWARD_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_NB_TIMEFRAMES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_TIMEFRAME_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_TOGGLE_ENABLED",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SpottingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VOTE_QUORUM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getExordeToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFormattingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTotalWorkers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRepManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSpottingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVoteQuorum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_MIN_REP_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_MIN_REWARD_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_FORMAT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_CONTRACT_STORED_BATCHES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_SUCCEEDING_NOVOTES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_UPDATE_ITERATIONS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_NOVOTE_REGISTRATION_WAIT_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_INTER_ALLOCATION_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REP_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REWARD_Data",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_NB_TIMEFRAMES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_TIMEFRAME_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_TOGGLE_ENABLED",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getsFuelSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sFuel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "StakeManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "RepManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "RewardManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "AddressManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "SpottingSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "FormattingSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sFuel_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								}
							],
							"name": "updateContractsAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateFormattingParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateGeneralParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "boolValue",
									"type": "bool"
								}
							],
							"name": "updateSpottingParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Mathias Dail",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Parameters  v0.1",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/worksystems/Parameters.sol\":351:14137  contract Parameters is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/worksystems/Parameters.sol\":494:498  1000 */\n  0x03e8\n    /* \"contracts/worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n  0x01\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":535:537  50 */\n  0x32\n    /* \"contracts/worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n  0x02\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":587:589  50 */\n  0x32\n    /* \"contracts/worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n  0x03\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":645:651  200000 */\n  0x030d40\n    /* \"contracts/worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n  0x04\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":749:750  1 */\n  0x01\n    /* \"contracts/worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n  0x05\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":789:804  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"contracts/worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n  0x06\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":862:863  2 */\n  0x02\n    /* \"contracts/worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x07\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":923:924  4 */\n  0x04\n    /* \"contracts/worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x08\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":975:978  180 */\n  0xb4\n    /* \"contracts/worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n  0x09\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1029:1032  180 */\n  0xb4\n    /* \"contracts/worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n  0x0a\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1084:1098  2 * (10 ** 18) */\n  0x1bc16d674ec80000\n    /* \"contracts/worksystems/Parameters.sol\":1046:1098  uint256 public SPOT_MIN_REWARD_Data = 2 * (10 ** 18) */\n  0x0b\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1141:1156  40 * (10 ** 18) */\n  0x022b1c8c1227a00000\n    /* \"contracts/worksystems/Parameters.sol\":1105:1156  uint256 public SPOT_MIN_REP_Data  = 40 * (10 ** 18) */\n  0x0c\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1241:1244  400 */\n  0x0190\n    /* \"contracts/worksystems/Parameters.sol\":1193:1244  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n  0x0d\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1285:1289  true */\n  0x01\n    /* \"contracts/worksystems/Parameters.sol\":1251:1289  bool public SPOT_TOGGLE_ENABLED = true */\n  0x0e\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/worksystems/Parameters.sol\":1338:1343  15*60 */\n  0x0384\n    /* \"contracts/worksystems/Parameters.sol\":1296:1343  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n  0x0f\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1413:1417  1000 */\n  0x03e8\n    /* \"contracts/worksystems/Parameters.sol\":1363:1417  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n  0x10\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1476:1478  25 */\n  0x19\n    /* \"contracts/worksystems/Parameters.sol\":1424:1478  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n  0x11\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1521:1522  4 */\n  0x04\n    /* \"contracts/worksystems/Parameters.sol\":1485:1522  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n  0x12\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1570:1571  3 */\n  0x03\n    /* \"contracts/worksystems/Parameters.sol\":1529:1571  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n  0x13\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1634:1638  3600 */\n  0x0e10\n    /* \"contracts/worksystems/Parameters.sol\":1582:1638  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n  0x14\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1754:1755  1 */\n  0x01\n    /* \"contracts/worksystems/Parameters.sol\":1714:1755  uint256 public FORMAT_DATA_BATCH_SIZE = 1 */\n  0x15\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1815:1816  2 */\n  0x02\n    /* \"contracts/worksystems/Parameters.sol\":1763:1816  uint256 public FORMAT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x16\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1876:1877  4 */\n  0x04\n    /* \"contracts/worksystems/Parameters.sol\":1824:1877  uint256 public FORMAT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x17\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1921:1936  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"contracts/worksystems/Parameters.sol\":1887:1936  uint256 public FORMAT_MIN_STAKE = 25 * (10 ** 18) */\n  0x18\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":1990:1993  400 */\n  0x0190\n    /* \"contracts/worksystems/Parameters.sol\":1944:1993  uint256 public FORMAT_COMMIT_ROUND_DURATION = 400 */\n  0x19\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":2046:2049  180 */\n  0xb4\n    /* \"contracts/worksystems/Parameters.sol\":2000:2049  uint256 public FORMAT_REVEAL_ROUND_DURATION = 180 */\n  0x1a\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":2098:2112  3 * (10 ** 18) */\n  0x29a2241af62c0000\n    /* \"contracts/worksystems/Parameters.sol\":2058:2112  uint256 public FORMAT_MIN_REWARD_Data = 3 * (10 ** 18) */\n  0x1b\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":2157:2172  50 * (10 ** 18) */\n  0x02b5e3af16b1880000\n    /* \"contracts/worksystems/Parameters.sol\":2119:2172  uint256 public FORMAT_MIN_REP_Data  = 50 * (10 ** 18) */\n  0x1c\n  sstore\n    /* \"contracts/worksystems/Parameters.sol\":351:14137  contract Parameters is Ownable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"contracts/worksystems/Parameters.sol\":351:14137  contract Parameters is Ownable {\r... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/worksystems/Parameters.sol\":351:14137  contract Parameters is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/worksystems/Parameters.sol\":351:14137  contract Parameters is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9d1f2ada\n      gt\n      tag_81\n      jumpi\n      dup1\n      0xca820e9b\n      gt\n      tag_82\n      jumpi\n      dup1\n      0xe6fdd4c0\n      gt\n      tag_83\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_84\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xfb50a473\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xfe722749\n      eq\n      tag_79\n      jumpi\n      dup1\n      0xff622dda\n      eq\n      tag_80\n      jumpi\n      jump(tag_2)\n    tag_84:\n      dup1\n      0xe6fdd4c0\n      eq\n      tag_71\n      jumpi\n      dup1\n      0xea19733c\n      eq\n      tag_72\n      jumpi\n      dup1\n      0xea663ed9\n      eq\n      tag_73\n      jumpi\n      dup1\n      0xee37f4a6\n      eq\n      tag_74\n      jumpi\n      dup1\n      0xf250ae2d\n      eq\n      tag_75\n      jumpi\n      jump(tag_2)\n    tag_83:\n      dup1\n      0xe0de3d7c\n      gt\n      tag_85\n      jumpi\n      dup1\n      0xe0de3d7c\n      eq\n      tag_66\n      jumpi\n      dup1\n      0xe28fdeec\n      eq\n      tag_67\n      jumpi\n      dup1\n      0xe3115d3c\n      eq\n      tag_68\n      jumpi\n      dup1\n      0xe5f14824\n      eq\n      tag_69\n      jumpi\n      dup1\n      0xe66d543a\n      eq\n      tag_70\n      jumpi\n      jump(tag_2)\n    tag_85:\n      dup1\n      0xca820e9b\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xd0eed967\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xd4efd2ba\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xd8645d37\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xdfeceed7\n      eq\n      tag_65\n      jumpi\n      jump(tag_2)\n    tag_82:\n      dup1\n      0xb45d9d8d\n      gt\n      tag_86\n      jumpi\n      dup1\n      0xbf09ff70\n      gt\n      tag_87\n      jumpi\n      dup1\n      0xbf09ff70\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xc4a306f8\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xc6eacbfe\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xc7761fab\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xca64f9e7\n      eq\n      tag_60\n      jumpi\n      jump(tag_2)\n    tag_87:\n      dup1\n      0xb45d9d8d\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xb5c92a3f\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xb6118450\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xbd40ef4c\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xbe250988\n      eq\n      tag_55\n      jumpi\n      jump(tag_2)\n    tag_86:\n      dup1\n      0xa35b3b09\n      gt\n      tag_88\n      jumpi\n      dup1\n      0xa35b3b09\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xab43e78d\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xacbe4f3e\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xb368b928\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xb38e885e\n      eq\n      tag_50\n      jumpi\n      jump(tag_2)\n    tag_88:\n      dup1\n      0x9d1f2ada\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x9fb491f6\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xa02f9914\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xa327181b\n      eq\n      tag_45\n      jumpi\n      jump(tag_2)\n    tag_81:\n      dup1\n      0x544037a5\n      gt\n      tag_89\n      jumpi\n      dup1\n      0x72e54030\n      gt\n      tag_90\n      jumpi\n      dup1\n      0x87ce6311\n      gt\n      tag_91\n      jumpi\n      dup1\n      0x87ce6311\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x8d289f8f\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x90d10b6e\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x98a54e2b\n      eq\n      tag_41\n      jumpi\n      jump(tag_2)\n    tag_91:\n      dup1\n      0x72e54030\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x77ad500c\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x7a34da67\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x7d630cb0\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x83cc6ef2\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_90:\n      dup1\n      0x62c11afa\n      gt\n      tag_92\n      jumpi\n      dup1\n      0x62c11afa\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x68bd3615\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x6b13edc1\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x70d29bdf\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_92:\n      dup1\n      0x544037a5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x557c1abe\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x57716b7f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x5e481a18\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x61879075\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_89:\n      dup1\n      0x23aea691\n      gt\n      tag_93\n      jumpi\n      dup1\n      0x3692616a\n      gt\n      tag_94\n      jumpi\n      dup1\n      0x3692616a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x36fc43fc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x4e5638f5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x4e87c5a8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x51912f29\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_94:\n      dup1\n      0x23aea691\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x29a47bc7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2c1480c0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2c658ec0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x2e2f93f3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_93:\n      dup1\n      0x0f1f0ffe\n      gt\n      tag_95\n      jumpi\n      dup1\n      0x0f1f0ffe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0f78cc76\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x134667be\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x166ff4c7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x1d0fb88e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_95:\n      dup1\n      0x653ff8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02c5a49f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x04e76c8f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0855d151\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_3:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/worksystems/Parameters.sol\":13774:13900  function get_FORMAT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_4:\n      tag_96\n      tag_101\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10488:10583  function getRewardManager() public view returns(address){\r... */\n    tag_5:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10393:10482  function getRepManager() public view returns(address){\r... */\n    tag_6:\n      tag_103\n      tag_108\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12921:13057  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n    tag_7:\n      tag_96\n      tag_111\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12279:12395  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n    tag_8:\n      tag_96\n      tag_114\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2119:2172  uint256 public FORMAT_MIN_REP_Data  = 50 * (10 ** 18) */\n    tag_9:\n      tag_96\n      tag_117\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13358:13494  function get_FORMAT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_10:\n      tag_96\n      tag_120\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n    tag_11:\n      tag_96\n      tag_123\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13250:13352  function get_FORMAT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_12:\n      tag_96\n      tag_126\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2272:2297  address public RepManager */\n    tag_13:\n      tag_103\n      tag_129\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11912:12022  function get_SPOT_MIN_REWARD_Data() public view returns(uint256){\r... */\n    tag_14:\n      tag_96\n      tag_132\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1887:1936  uint256 public FORMAT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_15:\n      tag_96\n      tag_135\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10894:10979  function getExordeToken() public view returns(address){\r... */\n    tag_16:\n      tag_103\n      tag_138\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11546:11668  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_17:\n      tag_96\n      tag_141\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1251:1289  bool public SPOT_TOGGLE_ENABLED = true */\n    tag_18:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n    tag_19:\n      tag_96\n      tag_148\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12164:12269  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n    tag_20:\n      tag_143\n      tag_151\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2304:2332  address public RewardManager */\n    tag_21:\n      tag_103\n      tag_154\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1763:1816  uint256 public FORMAT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_22:\n      tag_96\n      tag_157\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10803:10888  function getsFuelSystem() public view returns(address){\r... */\n    tag_23:\n      tag_103\n      tag_160\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13130:13244  function get_FORMAT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_24:\n      tag_96\n      tag_163\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":6016:7039  function updateContractsAddresses(address StakeManager_, address RepManager_, address RewardManager_, address AddressManager_,\r... */\n    tag_25:\n      tag_165\n      tag_166\n      calldatasize\n      0x04\n      tag_167\n      jump\t// in\n    tag_166:\n      tag_168\n      jump\t// in\n    tag_165:\n      stop\n        /* \"contracts/worksystems/Parameters.sol\":5530:6006  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_26:\n      tag_165\n      tag_170\n      calldatasize\n      0x04\n      tag_171\n      jump\t// in\n    tag_170:\n      tag_172\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2000:2049  uint256 public FORMAT_REVEAL_ROUND_DURATION = 180 */\n    tag_27:\n      tag_96\n      tag_174\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10696:10797  function getFormattingSystem() public view returns(address){\r... */\n    tag_28:\n      tag_103\n      tag_177\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":8805:9701  function updateFormattingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_29:\n      tag_165\n      tag_180\n      calldatasize\n      0x04\n      tag_171\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13500:13636  function get_FORMAT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_30:\n      tag_96\n      tag_183\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n      tag_165\n      tag_186\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11674:11796  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_32:\n      tag_96\n      tag_188\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13906:14020  function get_FORMAT_MIN_REWARD_Data() public view returns(uint256){\r... */\n    tag_33:\n      tag_96\n      tag_191\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2339:2368  address public AddressManager */\n    tag_34:\n      tag_103\n      tag_194\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":9976:10088  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n    tag_35:\n      tag_96\n      tag_197\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2238:2265  address public StakeManager */\n    tag_36:\n      tag_103\n      tag_200\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1296:1343  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n    tag_37:\n      tag_96\n      tag_203\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2411:2442  address public FormattingSystem */\n    tag_38:\n      tag_103\n      tag_206\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_39:\n      tag_103\n      tag_209\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n    tag_40:\n      tag_96\n      tag_212\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":9773:9874  function getMaxTotalWorkers() public view returns(uint256){\r... */\n    tag_41:\n      tag_96\n      tag_215\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11050:11160  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_42:\n      tag_96\n      tag_218\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12801:12915  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n    tag_43:\n      tag_96\n      tag_221\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":13642:13768  function get_FORMAT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_44:\n      tag_96\n      tag_224\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n    tag_45:\n      tag_96\n      tag_227\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_46:\n      tag_96\n      tag_230\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2449:2469  address public sFuel */\n    tag_47:\n      tag_103\n      tag_233\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11802:11906  function get_SPOT_MIN_REP_Data() public view returns(uint256){\r... */\n    tag_48:\n      tag_96\n      tag_236\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1944:1993  uint256 public FORMAT_COMMIT_ROUND_DURATION = 400 */\n    tag_49:\n      tag_96\n      tag_239\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12405:12537  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n    tag_50:\n      tag_96\n      tag_242\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10593:10690  function getSpottingSystem() public view returns(address){\r... */\n    tag_51:\n      tag_103\n      tag_245\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1105:1156  uint256 public SPOT_MIN_REP_Data  = 40 * (10 ** 18) */\n    tag_52:\n      tag_96\n      tag_248\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1485:1522  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n    tag_53:\n      tag_96\n      tag_251\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11270:11402  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_54:\n      tag_96\n      tag_254\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12547:12683  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n    tag_55:\n      tag_96\n      tag_257\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1424:1478  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n    tag_56:\n      tag_96\n      tag_260\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12028:12158  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n    tag_57:\n      tag_96\n      tag_263\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n    tag_58:\n      tag_96\n      tag_266\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n    tag_59:\n      tag_96\n      tag_269\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10294:10387  function getStakeManager() public view returns(address){\r... */\n    tag_60:\n      tag_103\n      tag_272\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2058:2112  uint256 public FORMAT_MIN_REWARD_Data = 3 * (10 ** 18) */\n    tag_61:\n      tag_96\n      tag_275\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1582:1638  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n    tag_62:\n      tag_96\n      tag_278\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1529:1571  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n    tag_63:\n      tag_96\n      tag_281\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2375:2404  address public SpottingSystem */\n    tag_64:\n      tag_103\n      tag_284\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11408:11540  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_65:\n      tag_96\n      tag_287\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1363:1417  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n    tag_66:\n      tag_96\n      tag_290\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1824:1877  uint256 public FORMAT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_67:\n      tag_96\n      tag_293\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":10094:10218  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n    tag_68:\n      tag_96\n      tag_296\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1193:1244  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n    tag_69:\n      tag_96\n      tag_299\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":12689:12795  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n    tag_70:\n      tag_96\n      tag_302\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n    tag_71:\n      tag_96\n      tag_305\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":9880:9970  function getVoteQuorum() public view returns(uint256){\r... */\n    tag_72:\n      tag_96\n      tag_308\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1714:1755  uint256 public FORMAT_DATA_BATCH_SIZE = 1 */\n    tag_73:\n      tag_96\n      tag_311\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":7059:8795  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n    tag_74:\n      tag_165\n      tag_314\n      calldatasize\n      0x04\n      tag_315\n      jump\t// in\n    tag_314:\n      tag_316\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":14026:14134  function get_FORMAT_MIN_REP_Data() public view returns(uint256){\r... */\n    tag_75:\n      tag_96\n      tag_318\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n      tag_165\n      tag_321\n      calldatasize\n      0x04\n      tag_322\n      jump\t// in\n    tag_321:\n      tag_323\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_77:\n      tag_96\n      tag_325\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":2211:2231  address public token */\n    tag_78:\n      tag_103\n      tag_328\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":1046:1098  uint256 public SPOT_MIN_REWARD_Data = 2 * (10 ** 18) */\n    tag_79:\n      tag_96\n      tag_331\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":11166:11264  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_80:\n      tag_96\n      tag_334\n      jump\t// in\n        /* \"contracts/worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_97:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13774:13900  function get_FORMAT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_101:\n        /* \"contracts/worksystems/Parameters.sol\":13864:13892  FORMAT_REVEAL_ROUND_DURATION */\n      sload(0x1a)\n        /* \"contracts/worksystems/Parameters.sol\":13774:13900  function get_FORMAT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10488:10583  function getRewardManager() public view returns(address){\r... */\n    tag_104:\n        /* \"contracts/worksystems/Parameters.sol\":10562:10575  RewardManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x20))\n        /* \"contracts/worksystems/Parameters.sol\":10488:10583  function getRewardManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10393:10482  function getRepManager() public view returns(address){\r... */\n    tag_108:\n        /* \"contracts/worksystems/Parameters.sol\":10464:10474  RepManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1f))\n        /* \"contracts/worksystems/Parameters.sol\":10393:10482  function getRepManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12921:13057  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n    tag_111:\n        /* \"contracts/worksystems/Parameters.sol\":13016:13049  NOVOTE_REGISTRATION_WAIT_DURATION */\n      sload(0x14)\n        /* \"contracts/worksystems/Parameters.sol\":12921:13057  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12279:12395  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n    tag_114:\n        /* \"contracts/worksystems/Parameters.sol\":12364:12387  SPOT_TIMEFRAME_DURATION */\n      sload(0x0f)\n        /* \"contracts/worksystems/Parameters.sol\":12279:12395  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2119:2172  uint256 public FORMAT_MIN_REP_Data  = 50 * (10 ** 18) */\n    tag_117:\n      sload(0x1c)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13358:13494  function get_FORMAT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_120:\n        /* \"contracts/worksystems/Parameters.sol\":13453:13486  FORMAT_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x16)\n        /* \"contracts/worksystems/Parameters.sol\":13358:13494  function get_FORMAT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n    tag_123:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13250:13352  function get_FORMAT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_126:\n        /* \"contracts/worksystems/Parameters.sol\":13328:13344  FORMAT_MIN_STAKE */\n      sload(0x18)\n        /* \"contracts/worksystems/Parameters.sol\":13250:13352  function get_FORMAT_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2272:2297  address public RepManager */\n    tag_129:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1f))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11912:12022  function get_SPOT_MIN_REWARD_Data() public view returns(uint256){\r... */\n    tag_132:\n        /* \"contracts/worksystems/Parameters.sol\":11994:12014  SPOT_MIN_REWARD_Data */\n      sload(0x0b)\n        /* \"contracts/worksystems/Parameters.sol\":11912:12022  function get_SPOT_MIN_REWARD_Data() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1887:1936  uint256 public FORMAT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_135:\n      sload(0x18)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10894:10979  function getExordeToken() public view returns(address){\r... */\n    tag_138:\n        /* \"contracts/worksystems/Parameters.sol\":10966:10971  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1d))\n        /* \"contracts/worksystems/Parameters.sol\":10894:10979  function getExordeToken() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11546:11668  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_141:\n        /* \"contracts/worksystems/Parameters.sol\":11634:11660  SPOT_COMMIT_ROUND_DURATION */\n      sload(0x09)\n        /* \"contracts/worksystems/Parameters.sol\":11546:11668  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1251:1289  bool public SPOT_TOGGLE_ENABLED = true */\n    tag_144:\n      and(0xff, sload(0x0e))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n    tag_148:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12164:12269  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n    tag_151:\n        /* \"contracts/worksystems/Parameters.sol\":12242:12261  SPOT_TOGGLE_ENABLED */\n      and(0xff, sload(0x0e))\n        /* \"contracts/worksystems/Parameters.sol\":12164:12269  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2304:2332  address public RewardManager */\n    tag_154:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x20))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1763:1816  uint256 public FORMAT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_157:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10803:10888  function getsFuelSystem() public view returns(address){\r... */\n    tag_160:\n        /* \"contracts/worksystems/Parameters.sol\":10875:10880  sFuel */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x24))\n        /* \"contracts/worksystems/Parameters.sol\":10803:10888  function getsFuelSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13130:13244  function get_FORMAT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_163:\n        /* \"contracts/worksystems/Parameters.sol\":13214:13236  FORMAT_DATA_BATCH_SIZE */\n      sload(0x15)\n        /* \"contracts/worksystems/Parameters.sol\":13130:13244  function get_FORMAT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":6016:7039  function updateContractsAddresses(address StakeManager_, address RepManager_, address RewardManager_, address AddressManager_,\r... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_350\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_352\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6298:6325  StakeManager_ != address(0) */\n      dup9\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6295:6381  if(StakeManager_ != address(0)){\r... */\n      tag_357\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6341:6353  StakeManager */\n      0x1e\n        /* \"contracts/worksystems/Parameters.sol\":6341:6369  StakeManager = StakeManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6295:6381  if(StakeManager_ != address(0)){\r... */\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6394:6419  RepManager_ != address(0) */\n      dup8\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6391:6471  if(RepManager_ != address(0)){\r... */\n      tag_358\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6435:6445  RepManager */\n      0x1f\n        /* \"contracts/worksystems/Parameters.sol\":6435:6459  RepManager = RepManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6391:6471  if(RepManager_ != address(0)){\r... */\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6484:6512  RewardManager_ != address(0) */\n      dup7\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6481:6570  if(RewardManager_ != address(0)){\r... */\n      tag_359\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6528:6541  RewardManager */\n      0x20\n        /* \"contracts/worksystems/Parameters.sol\":6528:6558  RewardManager = RewardManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6481:6570  if(RewardManager_ != address(0)){\r... */\n    tag_359:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6583:6612  AddressManager_ != address(0) */\n      dup6\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6580:6672  if(AddressManager_ != address(0)){\r... */\n      tag_360\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6628:6642  AddressManager */\n      0x21\n        /* \"contracts/worksystems/Parameters.sol\":6628:6660  AddressManager = AddressManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6580:6672  if(AddressManager_ != address(0)){\r... */\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6685:6714  SpottingSystem_ != address(0) */\n      dup5\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6682:6774  if(SpottingSystem_ != address(0)){\r... */\n      tag_361\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6730:6744  SpottingSystem */\n      0x22\n        /* \"contracts/worksystems/Parameters.sol\":6730:6762  SpottingSystem = SpottingSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6682:6774  if(SpottingSystem_ != address(0)){\r... */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6787:6818  FormattingSystem_ != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6784:6882  if(FormattingSystem_ != address(0)){\r... */\n      tag_362\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6834:6850  FormattingSystem */\n      0x23\n        /* \"contracts/worksystems/Parameters.sol\":6834:6870  FormattingSystem = FormattingSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6784:6882  if(FormattingSystem_ != address(0)){\r... */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6895:6915  sFuel_ != address(0) */\n      dup3\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6892:6957  if(sFuel_ != address(0)){\r... */\n      tag_363\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":6931:6936  sFuel */\n      0x24\n        /* \"contracts/worksystems/Parameters.sol\":6931:6945  sFuel = sFuel_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6892:6957  if(sFuel_ != address(0)){\r... */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/worksystems/Parameters.sol\":6970:6990  token_ != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/worksystems/Parameters.sol\":6967:7032  if(token_ != address(0)){\r... */\n      tag_364\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7006:7011  token */\n      0x1d\n        /* \"contracts/worksystems/Parameters.sol\":7006:7020  token = token_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":6967:7032  if(token_ != address(0)){\r... */\n    tag_364:\n        /* \"contracts/worksystems/Parameters.sol\":6016:7039  function updateContractsAddresses(address StakeManager_, address RepManager_, address RewardManager_, address AddressManager_,\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":5530:6006  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_366\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_366:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_368:\n        /* \"contracts/worksystems/Parameters.sol\":5645:5659  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":5663:5664  1 */\n      0x01\n        /* \"contracts/worksystems/Parameters.sol\":5645:5664  ParameterIndex == 1 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":5642:5721  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_371\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":5680:5697  MAX_TOTAL_WORKERS */\n      0x01\n        /* \"contracts/worksystems/Parameters.sol\":5680:5709  MAX_TOTAL_WORKERS = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":5642:5721  if(ParameterIndex == 1){\r... */\n    tag_371:\n        /* \"contracts/worksystems/Parameters.sol\":5734:5748  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":5752:5753  2 */\n      0x02\n        /* \"contracts/worksystems/Parameters.sol\":5734:5753  ParameterIndex == 2 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":5731:5805  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_372\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":5769:5780  VOTE_QUORUM */\n      0x02\n        /* \"contracts/worksystems/Parameters.sol\":5769:5793  VOTE_QUORUM  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":5731:5805  if(ParameterIndex == 2){\r... */\n    tag_372:\n        /* \"contracts/worksystems/Parameters.sol\":5818:5832  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":5836:5837  3 */\n      0x03\n        /* \"contracts/worksystems/Parameters.sol\":5818:5837  ParameterIndex == 3 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":5815:5899  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_373\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":5853:5874  MAX_UPDATE_ITERATIONS */\n      0x03\n        /* \"contracts/worksystems/Parameters.sol\":5853:5887  MAX_UPDATE_ITERATIONS  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":5815:5899  if(ParameterIndex == 3){\r... */\n    tag_373:\n        /* \"contracts/worksystems/Parameters.sol\":5912:5926  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":5930:5931  4 */\n      0x04\n        /* \"contracts/worksystems/Parameters.sol\":5912:5931  ParameterIndex == 4 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":5909:5999  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_374\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":5947:5974  MAX_CONTRACT_STORED_BATCHES */\n      0x04\n        /* \"contracts/worksystems/Parameters.sol\":5947:5987  MAX_CONTRACT_STORED_BATCHES  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":5909:5999  if(ParameterIndex == 4){\r... */\n    tag_374:\n        /* \"contracts/worksystems/Parameters.sol\":5530:6006  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2000:2049  uint256 public FORMAT_REVEAL_ROUND_DURATION = 180 */\n    tag_174:\n      sload(0x1a)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10696:10797  function getFormattingSystem() public view returns(address){\r... */\n    tag_177:\n        /* \"contracts/worksystems/Parameters.sol\":10773:10789  FormattingSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x23))\n        /* \"contracts/worksystems/Parameters.sol\":10696:10797  function getFormattingSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":8805:9701  function updateFormattingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_377\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_378\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_378:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_379:\n        /* \"contracts/worksystems/Parameters.sol\":8923:8937  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":8941:8942  1 */\n      0x01\n        /* \"contracts/worksystems/Parameters.sol\":8923:8942  ParameterIndex == 1 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8920:9004  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_382\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8958:8980  FORMAT_DATA_BATCH_SIZE */\n      0x15\n        /* \"contracts/worksystems/Parameters.sol\":8958:8992  FORMAT_DATA_BATCH_SIZE = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8920:9004  if(ParameterIndex == 1){\r... */\n    tag_382:\n        /* \"contracts/worksystems/Parameters.sol\":9017:9031  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9035:9036  2 */\n      0x02\n        /* \"contracts/worksystems/Parameters.sol\":9017:9036  ParameterIndex == 2 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9014:9093  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_383\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9052:9068  FORMAT_MIN_STAKE */\n      0x18\n        /* \"contracts/worksystems/Parameters.sol\":9052:9081  FORMAT_MIN_STAKE  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9014:9093  if(ParameterIndex == 2){\r... */\n    tag_383:\n        /* \"contracts/worksystems/Parameters.sol\":9106:9120  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9124:9125  3 */\n      0x03\n        /* \"contracts/worksystems/Parameters.sol\":9106:9125  ParameterIndex == 3 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9103:9199  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_384\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9141:9174  FORMAT_MIN_CONSENSUS_WORKER_COUNT */\n      0x16\n        /* \"contracts/worksystems/Parameters.sol\":9141:9187  FORMAT_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9103:9199  if(ParameterIndex == 3){\r... */\n    tag_384:\n        /* \"contracts/worksystems/Parameters.sol\":9212:9226  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9230:9231  4 */\n      0x04\n        /* \"contracts/worksystems/Parameters.sol\":9212:9231  ParameterIndex == 4 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9209:9305  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_385\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9247:9280  FORMAT_MAX_CONSENSUS_WORKER_COUNT */\n      0x17\n        /* \"contracts/worksystems/Parameters.sol\":9247:9293  FORMAT_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9209:9305  if(ParameterIndex == 4){\r... */\n    tag_385:\n        /* \"contracts/worksystems/Parameters.sol\":9318:9332  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9336:9337  5 */\n      0x05\n        /* \"contracts/worksystems/Parameters.sol\":9318:9337  ParameterIndex == 5 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9315:9406  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_386\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9353:9381  FORMAT_COMMIT_ROUND_DURATION */\n      0x19\n        /* \"contracts/worksystems/Parameters.sol\":9353:9394  FORMAT_COMMIT_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9315:9406  if(ParameterIndex == 5){\r... */\n    tag_386:\n        /* \"contracts/worksystems/Parameters.sol\":9419:9433  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9437:9438  6 */\n      0x06\n        /* \"contracts/worksystems/Parameters.sol\":9419:9438  ParameterIndex == 6 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9416:9507  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_387\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9454:9482  FORMAT_REVEAL_ROUND_DURATION */\n      0x1a\n        /* \"contracts/worksystems/Parameters.sol\":9454:9495  FORMAT_REVEAL_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9416:9507  if(ParameterIndex == 6){\r... */\n    tag_387:\n        /* \"contracts/worksystems/Parameters.sol\":9520:9534  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9538:9539  7 */\n      0x07\n        /* \"contracts/worksystems/Parameters.sol\":9520:9539  ParameterIndex == 7 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9517:9602  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_388\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9555:9577  FORMAT_MIN_REWARD_Data */\n      0x1b\n        /* \"contracts/worksystems/Parameters.sol\":9555:9590  FORMAT_MIN_REWARD_Data  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":9517:9602  if(ParameterIndex == 7){\r... */\n    tag_388:\n        /* \"contracts/worksystems/Parameters.sol\":9615:9629  ParameterIndex */\n      dup2\n        /* \"contracts/worksystems/Parameters.sol\":9633:9634  8 */\n      0x08\n        /* \"contracts/worksystems/Parameters.sol\":9615:9634  ParameterIndex == 8 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":9612:9694  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_374\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":9650:9669  FORMAT_MIN_REP_Data */\n      0x1c\n        /* \"contracts/worksystems/Parameters.sol\":9650:9682  FORMAT_MIN_REP_Data  = uintValue */\n      sstore\n      pop\n        /* \"contracts/worksystems/Parameters.sol\":8805:9701  function updateFormattingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13500:13636  function get_FORMAT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_183:\n        /* \"contracts/worksystems/Parameters.sol\":13595:13628  FORMAT_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x17)\n        /* \"contracts/worksystems/Parameters.sol\":13500:13636  function get_FORMAT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_392\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_393\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_397\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_398\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11674:11796  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_188:\n        /* \"contracts/worksystems/Parameters.sol\":11762:11788  SPOT_REVEAL_ROUND_DURATION */\n      sload(0x0a)\n        /* \"contracts/worksystems/Parameters.sol\":11674:11796  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13906:14020  function get_FORMAT_MIN_REWARD_Data() public view returns(uint256){\r... */\n    tag_191:\n        /* \"contracts/worksystems/Parameters.sol\":13990:14012  FORMAT_MIN_REWARD_Data */\n      sload(0x1b)\n        /* \"contracts/worksystems/Parameters.sol\":13906:14020  function get_FORMAT_MIN_REWARD_Data() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2339:2368  address public AddressManager */\n    tag_194:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x21))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":9976:10088  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n    tag_197:\n        /* \"contracts/worksystems/Parameters.sol\":10059:10080  MAX_UPDATE_ITERATIONS */\n      sload(0x03)\n        /* \"contracts/worksystems/Parameters.sol\":9976:10088  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2238:2265  address public StakeManager */\n    tag_200:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1e))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1296:1343  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n    tag_203:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2411:2442  address public FormattingSystem */\n    tag_206:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x23))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n    tag_212:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":9773:9874  function getMaxTotalWorkers() public view returns(uint256){\r... */\n    tag_215:\n        /* \"contracts/worksystems/Parameters.sol\":9849:9866  MAX_TOTAL_WORKERS */\n      sload(0x01)\n        /* \"contracts/worksystems/Parameters.sol\":9773:9874  function getMaxTotalWorkers() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11050:11160  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_218:\n        /* \"contracts/worksystems/Parameters.sol\":11132:11152  SPOT_DATA_BATCH_SIZE */\n      sload(0x05)\n        /* \"contracts/worksystems/Parameters.sol\":11050:11160  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12801:12915  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n    tag_221:\n        /* \"contracts/worksystems/Parameters.sol\":12885:12907  MAX_SUCCEEDING_NOVOTES */\n      sload(0x13)\n        /* \"contracts/worksystems/Parameters.sol\":12801:12915  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":13642:13768  function get_FORMAT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_224:\n        /* \"contracts/worksystems/Parameters.sol\":13732:13760  FORMAT_COMMIT_ROUND_DURATION */\n      sload(0x19)\n        /* \"contracts/worksystems/Parameters.sol\":13642:13768  function get_FORMAT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n    tag_227:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_230:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2449:2469  address public sFuel */\n    tag_233:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x24))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11802:11906  function get_SPOT_MIN_REP_Data() public view returns(uint256){\r... */\n    tag_236:\n        /* \"contracts/worksystems/Parameters.sol\":11881:11898  SPOT_MIN_REP_Data */\n      sload(0x0c)\n        /* \"contracts/worksystems/Parameters.sol\":11802:11906  function get_SPOT_MIN_REP_Data() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1944:1993  uint256 public FORMAT_COMMIT_ROUND_DURATION = 400 */\n    tag_239:\n      sload(0x19)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12405:12537  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n    tag_242:\n        /* \"contracts/worksystems/Parameters.sol\":12498:12529  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD */\n      sload(0x10)\n        /* \"contracts/worksystems/Parameters.sol\":12405:12537  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10593:10690  function getSpottingSystem() public view returns(address){\r... */\n    tag_245:\n        /* \"contracts/worksystems/Parameters.sol\":10668:10682  SpottingSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x22))\n        /* \"contracts/worksystems/Parameters.sol\":10593:10690  function getSpottingSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1105:1156  uint256 public SPOT_MIN_REP_Data  = 40 * (10 ** 18) */\n    tag_248:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1485:1522  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n    tag_251:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11270:11402  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_254:\n        /* \"contracts/worksystems/Parameters.sol\":11363:11394  SPOT_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x07)\n        /* \"contracts/worksystems/Parameters.sol\":11270:11402  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12547:12683  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n    tag_257:\n        /* \"contracts/worksystems/Parameters.sol\":12642:12675  SPOT_MAX_SPOT_PER_USER_PER_PERIOD */\n      sload(0x11)\n        /* \"contracts/worksystems/Parameters.sol\":12547:12683  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1424:1478  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n    tag_260:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12028:12158  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n    tag_263:\n        /* \"contracts/worksystems/Parameters.sol\":12120:12150  SPOT_INTER_ALLOCATION_DURATION */\n      sload(0x0d)\n        /* \"contracts/worksystems/Parameters.sol\":12028:12158  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n    tag_266:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n    tag_269:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10294:10387  function getStakeManager() public view returns(address){\r... */\n    tag_272:\n        /* \"contracts/worksystems/Parameters.sol\":10367:10379  StakeManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1e))\n        /* \"contracts/worksystems/Parameters.sol\":10294:10387  function getStakeManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2058:2112  uint256 public FORMAT_MIN_REWARD_Data = 3 * (10 ** 18) */\n    tag_275:\n      sload(0x1b)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1582:1638  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n    tag_278:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1529:1571  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n    tag_281:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2375:2404  address public SpottingSystem */\n    tag_284:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x22))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11408:11540  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_287:\n        /* \"contracts/worksystems/Parameters.sol\":11501:11532  SPOT_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x08)\n        /* \"contracts/worksystems/Parameters.sol\":11408:11540  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1363:1417  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n    tag_290:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1824:1877  uint256 public FORMAT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_293:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":10094:10218  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n    tag_296:\n        /* \"contracts/worksystems/Parameters.sol\":10183:10210  MAX_CONTRACT_STORED_BATCHES */\n      sload(0x04)\n        /* \"contracts/worksystems/Parameters.sol\":10094:10218  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1193:1244  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n    tag_299:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":12689:12795  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n    tag_302:\n        /* \"contracts/worksystems/Parameters.sol\":12769:12787  SPOT_NB_TIMEFRAMES */\n      sload(0x12)\n        /* \"contracts/worksystems/Parameters.sol\":12689:12795  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n    tag_305:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":9880:9970  function getVoteQuorum() public view returns(uint256){\r... */\n    tag_308:\n        /* \"contracts/worksystems/Parameters.sol\":9951:9962  VOTE_QUORUM */\n      sload(0x02)\n        /* \"contracts/worksystems/Parameters.sol\":9880:9970  function getVoteQuorum() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1714:1755  uint256 public FORMAT_DATA_BATCH_SIZE = 1 */\n    tag_311:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":7059:8795  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n    tag_316:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_419\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_419:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_420\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_421:\n        /* \"contracts/worksystems/Parameters.sol\":7191:7205  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7209:7210  1 */\n      0x01\n        /* \"contracts/worksystems/Parameters.sol\":7191:7210  ParameterIndex == 1 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7188:7271  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_424\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7226:7246  SPOT_DATA_BATCH_SIZE */\n      0x05\n        /* \"contracts/worksystems/Parameters.sol\":7226:7259  SPOT_DATA_BATCH_SIZE  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7188:7271  if(ParameterIndex == 1){\r... */\n    tag_424:\n        /* \"contracts/worksystems/Parameters.sol\":7284:7298  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7302:7303  2 */\n      0x02\n        /* \"contracts/worksystems/Parameters.sol\":7284:7303  ParameterIndex == 2 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7281:7358  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_425\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7319:7333  SPOT_MIN_STAKE */\n      0x06\n        /* \"contracts/worksystems/Parameters.sol\":7319:7346  SPOT_MIN_STAKE  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7281:7358  if(ParameterIndex == 2){\r... */\n    tag_425:\n        /* \"contracts/worksystems/Parameters.sol\":7371:7385  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7389:7390  3 */\n      0x03\n        /* \"contracts/worksystems/Parameters.sol\":7371:7390  ParameterIndex == 3 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7368:7462  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_426\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7406:7437  SPOT_MIN_CONSENSUS_WORKER_COUNT */\n      0x07\n        /* \"contracts/worksystems/Parameters.sol\":7406:7450  SPOT_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7368:7462  if(ParameterIndex == 3){\r... */\n    tag_426:\n        /* \"contracts/worksystems/Parameters.sol\":7475:7489  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7493:7494  4 */\n      0x04\n        /* \"contracts/worksystems/Parameters.sol\":7475:7494  ParameterIndex == 4 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7472:7566  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_427\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7510:7541  SPOT_MAX_CONSENSUS_WORKER_COUNT */\n      0x08\n        /* \"contracts/worksystems/Parameters.sol\":7510:7554  SPOT_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7472:7566  if(ParameterIndex == 4){\r... */\n    tag_427:\n        /* \"contracts/worksystems/Parameters.sol\":7579:7593  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7597:7598  5 */\n      0x05\n        /* \"contracts/worksystems/Parameters.sol\":7579:7598  ParameterIndex == 5 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7576:7665  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_428\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7614:7640  SPOT_COMMIT_ROUND_DURATION */\n      0x09\n        /* \"contracts/worksystems/Parameters.sol\":7614:7653  SPOT_COMMIT_ROUND_DURATION  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7576:7665  if(ParameterIndex == 5){\r... */\n    tag_428:\n        /* \"contracts/worksystems/Parameters.sol\":7678:7692  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7696:7697  6 */\n      0x06\n        /* \"contracts/worksystems/Parameters.sol\":7678:7697  ParameterIndex == 6 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7675:7764  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_429\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7713:7739  SPOT_REVEAL_ROUND_DURATION */\n      0x0a\n        /* \"contracts/worksystems/Parameters.sol\":7713:7752  SPOT_REVEAL_ROUND_DURATION  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7675:7764  if(ParameterIndex == 6){\r... */\n    tag_429:\n        /* \"contracts/worksystems/Parameters.sol\":7777:7791  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7795:7796  7 */\n      0x07\n        /* \"contracts/worksystems/Parameters.sol\":7777:7796  ParameterIndex == 7 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7774:7857  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_430\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7812:7832  SPOT_MIN_REWARD_Data */\n      0x0b\n        /* \"contracts/worksystems/Parameters.sol\":7812:7845  SPOT_MIN_REWARD_Data  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7774:7857  if(ParameterIndex == 7){\r... */\n    tag_430:\n        /* \"contracts/worksystems/Parameters.sol\":7870:7884  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":7888:7889  8 */\n      0x08\n        /* \"contracts/worksystems/Parameters.sol\":7870:7889  ParameterIndex == 8 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":7867:7947  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_431\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":7905:7922  SPOT_MIN_REP_Data */\n      0x0c\n        /* \"contracts/worksystems/Parameters.sol\":7905:7935  SPOT_MIN_REP_Data  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":7867:7947  if(ParameterIndex == 8){\r... */\n    tag_431:\n        /* \"contracts/worksystems/Parameters.sol\":8009:8023  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8027:8028  9 */\n      0x09\n        /* \"contracts/worksystems/Parameters.sol\":8009:8028  ParameterIndex == 9 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8006:8098  if(ParameterIndex == 9){\r... */\n      iszero\n      tag_432\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8044:8074  SPOT_INTER_ALLOCATION_DURATION */\n      0x0d\n        /* \"contracts/worksystems/Parameters.sol\":8044:8086  SPOT_INTER_ALLOCATION_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8006:8098  if(ParameterIndex == 9){\r... */\n    tag_432:\n        /* \"contracts/worksystems/Parameters.sol\":8111:8125  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8129:8131  10 */\n      0x0a\n        /* \"contracts/worksystems/Parameters.sol\":8111:8131  ParameterIndex == 10 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8108:8190  if(ParameterIndex == 10){\r... */\n      iszero\n      tag_433\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8147:8166  SPOT_TOGGLE_ENABLED */\n      0x0e\n        /* \"contracts/worksystems/Parameters.sol\":8147:8178  SPOT_TOGGLE_ENABLED = boolValue */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8108:8190  if(ParameterIndex == 10){\r... */\n    tag_433:\n        /* \"contracts/worksystems/Parameters.sol\":8203:8217  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8221:8223  11 */\n      0x0b\n        /* \"contracts/worksystems/Parameters.sol\":8203:8223  ParameterIndex == 11 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8200:8286  if(ParameterIndex == 11){\r... */\n      iszero\n      tag_434\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8239:8262  SPOT_TIMEFRAME_DURATION */\n      0x0f\n        /* \"contracts/worksystems/Parameters.sol\":8239:8274  SPOT_TIMEFRAME_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8200:8286  if(ParameterIndex == 11){\r... */\n    tag_434:\n        /* \"contracts/worksystems/Parameters.sol\":8299:8313  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8317:8319  12 */\n      0x0c\n        /* \"contracts/worksystems/Parameters.sol\":8299:8319  ParameterIndex == 12 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8296:8390  if(ParameterIndex == 12){\r... */\n      iszero\n      tag_435\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8335:8366  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD */\n      0x10\n        /* \"contracts/worksystems/Parameters.sol\":8335:8378  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8296:8390  if(ParameterIndex == 12){\r... */\n    tag_435:\n        /* \"contracts/worksystems/Parameters.sol\":8403:8417  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8421:8423  13 */\n      0x0d\n        /* \"contracts/worksystems/Parameters.sol\":8403:8423  ParameterIndex == 13 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8400:8496  if(ParameterIndex == 13){\r... */\n      iszero\n      tag_436\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8439:8472  SPOT_MAX_SPOT_PER_USER_PER_PERIOD */\n      0x11\n        /* \"contracts/worksystems/Parameters.sol\":8439:8484  SPOT_MAX_SPOT_PER_USER_PER_PERIOD = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8400:8496  if(ParameterIndex == 13){\r... */\n    tag_436:\n        /* \"contracts/worksystems/Parameters.sol\":8509:8523  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8527:8529  14 */\n      0x0e\n        /* \"contracts/worksystems/Parameters.sol\":8509:8529  ParameterIndex == 14 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8506:8587  if(ParameterIndex == 14){\r... */\n      iszero\n      tag_437\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8545:8563  SPOT_NB_TIMEFRAMES */\n      0x12\n        /* \"contracts/worksystems/Parameters.sol\":8545:8575  SPOT_NB_TIMEFRAMES = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8506:8587  if(ParameterIndex == 14){\r... */\n    tag_437:\n        /* \"contracts/worksystems/Parameters.sol\":8600:8614  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8618:8620  15 */\n      0x0f\n        /* \"contracts/worksystems/Parameters.sol\":8600:8620  ParameterIndex == 15 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8597:8682  if(ParameterIndex == 15){\r... */\n      iszero\n      tag_438\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8636:8658  MAX_SUCCEEDING_NOVOTES */\n      0x13\n        /* \"contracts/worksystems/Parameters.sol\":8636:8670  MAX_SUCCEEDING_NOVOTES = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8597:8682  if(ParameterIndex == 15){\r... */\n    tag_438:\n        /* \"contracts/worksystems/Parameters.sol\":8695:8709  ParameterIndex */\n      dup3\n        /* \"contracts/worksystems/Parameters.sol\":8713:8715  16 */\n      0x10\n        /* \"contracts/worksystems/Parameters.sol\":8695:8715  ParameterIndex == 16 */\n      eq\n        /* \"contracts/worksystems/Parameters.sol\":8692:8788  if(ParameterIndex == 16){\r... */\n      iszero\n      tag_439\n      jumpi\n        /* \"contracts/worksystems/Parameters.sol\":8731:8764  NOVOTE_REGISTRATION_WAIT_DURATION */\n      0x14\n        /* \"contracts/worksystems/Parameters.sol\":8731:8776  NOVOTE_REGISTRATION_WAIT_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/worksystems/Parameters.sol\":8692:8788  if(ParameterIndex == 16){\r... */\n    tag_439:\n        /* \"contracts/worksystems/Parameters.sol\":7059:8795  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":14026:14134  function get_FORMAT_MIN_REP_Data() public view returns(uint256){\r... */\n    tag_318:\n        /* \"contracts/worksystems/Parameters.sol\":14107:14126  FORMAT_MIN_REP_Data */\n      sload(0x1c)\n        /* \"contracts/worksystems/Parameters.sol\":14026:14134  function get_FORMAT_MIN_REP_Data() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_442\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_442:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_443\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_443:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_444:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_447\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_449\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_450\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_398\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_325:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":2211:2231  address public token */\n    tag_328:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x1d))\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":1046:1098  uint256 public SPOT_MIN_REWARD_Data = 2 * (10 ** 18) */\n    tag_331:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/worksystems/Parameters.sol\":11166:11264  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_334:\n        /* \"contracts/worksystems/Parameters.sol\":11242:11256  SPOT_MIN_STAKE */\n      sload(0x06)\n        /* \"contracts/worksystems/Parameters.sol\":11166:11264  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_455:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_457:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_322:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_459:\n        /* \"#utility.yul\":355:386   */\n      tag_460\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_455\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:1132   */\n    tag_167:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":628:631   */\n      0x0100\n        /* \"#utility.yul\":616:625   */\n      dup10\n        /* \"#utility.yul\":607:614   */\n      dup12\n        /* \"#utility.yul\":603:626   */\n      sub\n        /* \"#utility.yul\":599:632   */\n      slt\n        /* \"#utility.yul\":596:598   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":650:656   */\n      dup4\n        /* \"#utility.yul\":642:648   */\n      dup5\n        /* \"#utility.yul\":635:657   */\n      revert\n        /* \"#utility.yul\":596:598   */\n    tag_462:\n        /* \"#utility.yul\":678:709   */\n      tag_463\n        /* \"#utility.yul\":699:708   */\n      dup10\n        /* \"#utility.yul\":678:709   */\n      tag_455\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":668:709   */\n      swap8\n      pop\n        /* \"#utility.yul\":728:768   */\n      tag_464\n        /* \"#utility.yul\":764:766   */\n      0x20\n        /* \"#utility.yul\":753:762   */\n      dup11\n        /* \"#utility.yul\":749:767   */\n      add\n        /* \"#utility.yul\":728:768   */\n      tag_455\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":718:768   */\n      swap7\n      pop\n        /* \"#utility.yul\":787:827   */\n      tag_465\n        /* \"#utility.yul\":823:825   */\n      0x40\n        /* \"#utility.yul\":812:821   */\n      dup11\n        /* \"#utility.yul\":808:826   */\n      add\n        /* \"#utility.yul\":787:827   */\n      tag_455\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":777:827   */\n      swap6\n      pop\n        /* \"#utility.yul\":846:886   */\n      tag_466\n        /* \"#utility.yul\":882:884   */\n      0x60\n        /* \"#utility.yul\":871:880   */\n      dup11\n        /* \"#utility.yul\":867:885   */\n      add\n        /* \"#utility.yul\":846:886   */\n      tag_455\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":836:886   */\n      swap5\n      pop\n        /* \"#utility.yul\":905:946   */\n      tag_467\n        /* \"#utility.yul\":941:944   */\n      0x80\n        /* \"#utility.yul\":930:939   */\n      dup11\n        /* \"#utility.yul\":926:945   */\n      add\n        /* \"#utility.yul\":905:946   */\n      tag_455\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":895:946   */\n      swap4\n      pop\n        /* \"#utility.yul\":965:1006   */\n      tag_468\n        /* \"#utility.yul\":1001:1004   */\n      0xa0\n        /* \"#utility.yul\":990:999   */\n      dup11\n        /* \"#utility.yul\":986:1005   */\n      add\n        /* \"#utility.yul\":965:1006   */\n      tag_455\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":955:1006   */\n      swap3\n      pop\n        /* \"#utility.yul\":1025:1066   */\n      tag_469\n        /* \"#utility.yul\":1061:1064   */\n      0xc0\n        /* \"#utility.yul\":1050:1059   */\n      dup11\n        /* \"#utility.yul\":1046:1065   */\n      add\n        /* \"#utility.yul\":1025:1066   */\n      tag_455\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":1015:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":1085:1126   */\n      tag_470\n        /* \"#utility.yul\":1121:1124   */\n      0xe0\n        /* \"#utility.yul\":1110:1119   */\n      dup11\n        /* \"#utility.yul\":1106:1125   */\n      add\n        /* \"#utility.yul\":1085:1126   */\n      tag_455\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":1075:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":586:1132   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1395   */\n    tag_171:\n      0x00\n      dup1\n        /* \"#utility.yul\":1266:1268   */\n      0x40\n        /* \"#utility.yul\":1254:1263   */\n      dup4\n        /* \"#utility.yul\":1245:1252   */\n      dup6\n        /* \"#utility.yul\":1241:1264   */\n      sub\n        /* \"#utility.yul\":1237:1269   */\n      slt\n        /* \"#utility.yul\":1234:1236   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":1287:1293   */\n      dup2\n        /* \"#utility.yul\":1279:1285   */\n      dup3\n        /* \"#utility.yul\":1272:1294   */\n      revert\n        /* \"#utility.yul\":1234:1236   */\n    tag_472:\n      pop\n      pop\n        /* \"#utility.yul\":1315:1338   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1385:1387   */\n      0x20\n        /* \"#utility.yul\":1370:1388   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1357:1389   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1224:1395   */\n      jump\t// out\n        /* \"#utility.yul\":1400:1829   */\n    tag_315:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1543:1545   */\n      0x60\n        /* \"#utility.yul\":1531:1540   */\n      dup5\n        /* \"#utility.yul\":1522:1529   */\n      dup7\n        /* \"#utility.yul\":1518:1541   */\n      sub\n        /* \"#utility.yul\":1514:1546   */\n      slt\n        /* \"#utility.yul\":1511:1513   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":1564:1570   */\n      dup3\n        /* \"#utility.yul\":1556:1562   */\n      dup4\n        /* \"#utility.yul\":1549:1571   */\n      revert\n        /* \"#utility.yul\":1511:1513   */\n    tag_474:\n        /* \"#utility.yul\":1605:1614   */\n      dup4\n        /* \"#utility.yul\":1592:1615   */\n      calldataload\n        /* \"#utility.yul\":1582:1615   */\n      swap3\n      pop\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1651:1660   */\n      dup5\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"#utility.yul\":1634:1666   */\n      calldataload\n        /* \"#utility.yul\":1624:1666   */\n      swap2\n      pop\n        /* \"#utility.yul\":1716:1718   */\n      0x40\n        /* \"#utility.yul\":1705:1714   */\n      dup5\n        /* \"#utility.yul\":1701:1719   */\n      add\n        /* \"#utility.yul\":1688:1720   */\n      calldataload\n        /* \"#utility.yul\":1763:1768   */\n      dup1\n        /* \"#utility.yul\":1756:1769   */\n      iszero\n        /* \"#utility.yul\":1749:1770   */\n      iszero\n        /* \"#utility.yul\":1742:1747   */\n      dup2\n        /* \"#utility.yul\":1739:1771   */\n      eq\n        /* \"#utility.yul\":1729:1731   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":1790:1796   */\n      dup2\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1775:1797   */\n      revert\n        /* \"#utility.yul\":1729:1731   */\n    tag_475:\n        /* \"#utility.yul\":1818:1823   */\n      dup1\n        /* \"#utility.yul\":1808:1823   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1501:1829   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1834:2037   */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1998:2030   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1980:2031   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1968:1970   */\n      0x20\n        /* \"#utility.yul\":1953:1971   */\n      add\n      swap1\n        /* \"#utility.yul\":1935:2037   */\n      jump\t// out\n        /* \"#utility.yul\":2042:2229   */\n    tag_146:\n        /* \"#utility.yul\":2207:2221   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2200:2222   */\n      iszero\n        /* \"#utility.yul\":2182:2223   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2170:2172   */\n      0x20\n        /* \"#utility.yul\":2155:2173   */\n      add\n      swap1\n        /* \"#utility.yul\":2137:2229   */\n      jump\t// out\n        /* \"#utility.yul\":2234:2636   */\n    tag_449:\n        /* \"#utility.yul\":2436:2438   */\n      0x20\n        /* \"#utility.yul\":2418:2439   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2475:2477   */\n      0x26\n        /* \"#utility.yul\":2455:2473   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2448:2478   */\n      mstore\n        /* \"#utility.yul\":2514:2548   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2509:2511   */\n      0x40\n        /* \"#utility.yul\":2494:2512   */\n      dup3\n      add\n        /* \"#utility.yul\":2487:2549   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2580:2582   */\n      0x60\n        /* \"#utility.yul\":2565:2583   */\n      dup3\n      add\n        /* \"#utility.yul\":2558:2594   */\n      mstore\n        /* \"#utility.yul\":2626:2629   */\n      0x80\n        /* \"#utility.yul\":2611:2630   */\n      add\n      swap1\n        /* \"#utility.yul\":2408:2636   */\n      jump\t// out\n        /* \"#utility.yul\":2641:2997   */\n    tag_355:\n        /* \"#utility.yul\":2843:2845   */\n      0x20\n        /* \"#utility.yul\":2825:2846   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2862:2880   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2855:2885   */\n      mstore\n        /* \"#utility.yul\":2921:2955   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2916:2918   */\n      0x40\n        /* \"#utility.yul\":2901:2919   */\n      dup3\n      add\n        /* \"#utility.yul\":2894:2956   */\n      mstore\n        /* \"#utility.yul\":2988:2990   */\n      0x60\n        /* \"#utility.yul\":2973:2991   */\n      add\n      swap1\n        /* \"#utility.yul\":2815:2997   */\n      jump\t// out\n        /* \"#utility.yul\":3002:3179   */\n    tag_99:\n        /* \"#utility.yul\":3148:3173   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3136:3138   */\n      0x20\n        /* \"#utility.yul\":3121:3139   */\n      add\n      swap1\n        /* \"#utility.yul\":3103:3179   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f61811b67c8f0288e8aaadd2497b77318abaa176010335b6e27ba71e5cf1ead464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526103e86001556032600255603260035562030d40600455600160055568015af1d78b58c400006006556002600755600460085560b460095560b4600a55671bc16d674ec80000600b5568022b1c8c1227a00000600c55610190600d556001600e60006101000a81548160ff021916908315150217905550610384600f556103e8601055601960115560046012556003601355610e1060145560016015556002601655600460175568015af1d78b58c4000060185561019060195560b4601a556729a2241af62c0000601b556802b5e3af16b1880000601c553480156100e857600080fd5b506100f96100f46100fe565b610102565b610152565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6110c3806101616000396000f3fe608060405234801561001057600080fd5b50600436106104695760003560e01c80639d1f2ada1161024c578063ca820e9b11610146578063e6fdd4c0116100c3578063f2fde38b11610087578063f2fde38b14610714578063fb50a47314610727578063fc0c546a1461072f578063fe72274914610737578063ff622dda1461073f57610469565b8063e6fdd4c0146106e1578063ea19733c146106e9578063ea663ed9146106f1578063ee37f4a6146106f9578063f250ae2d1461070c57610469565b8063e0de3d7c1161010a578063e0de3d7c146106b9578063e28fdeec146106c1578063e3115d3c146106c9578063e5f14824146106d1578063e66d543a146106d957610469565b8063ca820e9b14610691578063d0eed96714610699578063d4efd2ba146106a1578063d8645d37146106a9578063dfeceed7146106b157610469565b8063b45d9d8d116101d4578063bf09ff7011610198578063bf09ff7014610669578063c4a306f814610671578063c6eacbfe14610679578063c7761fab14610681578063ca64f9e71461068957610469565b8063b45d9d8d14610641578063b5c92a3f14610649578063b611845014610651578063bd40ef4c14610659578063be2509881461066157610469565b8063a35b3b091161021b578063a35b3b0914610619578063ab43e78d14610621578063acbe4f3e14610629578063b368b92814610631578063b38e885e1461063957610469565b80639d1f2ada146105f95780639fb491f614610601578063a02f991414610609578063a327181b1461061157610469565b8063544037a51161036857806372e54030116102e557806387ce6311116102a957806387ce6311146105d15780638d289f8f146105d95780638da5cb5b146105e157806390d10b6e146105e957806398a54e2b146105f157610469565b806372e54030146105a957806377ad500c146105b15780637a34da67146105b95780637d630cb0146105c157806383cc6ef2146105c957610469565b806362c11afa1161032c57806362c11afa1461057657806368bd36151461057e5780636b13edc11461058657806370d29bdf14610599578063715018a6146105a157610469565b8063544037a514610536578063557c1abe1461053e57806357716b7f146105465780635e481a181461054e578063618790751461056357610469565b806323aea691116103f65780633692616a116103ba5780633692616a1461050157806336fc43fc146105095780634e5638f51461051e5780634e87c5a81461052657806351912f291461052e57610469565b806323aea691146104d957806329a47bc7146104e15780632c1480c0146104e95780632c658ec0146104f15780632e2f93f3146104f957610469565b80630f1f0ffe1161043d5780630f1f0ffe146104b15780630f78cc76146104b9578063134667be146104c1578063166ff4c7146104c95780631d0fb88e146104d157610469565b8062653ff81461046e57806302c5a49f1461048c57806304e76c8f146104945780630855d151146104a9575b600080fd5b610476610747565b6040516104839190611084565b60405180910390f35b61047661074d565b61049c610753565b6040516104839190610fea565b61049c610762565b610476610771565b610476610777565b61047661077d565b610476610783565b610476610789565b61047661078f565b61049c610795565b6104766107a4565b6104766107aa565b61049c6107b0565b6104766107bf565b6105116107c5565b6040516104839190610ffe565b6104766107ce565b6105116107d4565b61049c6107dd565b6104766107ec565b61049c6107f2565b610476610801565b61056161055c366004610ef7565b610807565b005b610561610571366004610f8d565b6109b1565b610476610a30565b61049c610a36565b610561610594366004610f8d565b610a45565b610476610afc565b610561610b02565b610476610b4d565b610476610b53565b61049c610b59565b610476610b68565b61049c610b6e565b610476610b7d565b61049c610b83565b61049c610b92565b610476610ba1565b610476610ba7565b610476610bad565b610476610bb3565b610476610bb9565b610476610bbf565b610476610bc5565b61049c610bcb565b610476610bda565b610476610be0565b610476610be6565b61049c610bec565b610476610bfb565b610476610c01565b610476610c07565b610476610c0d565b610476610c13565b610476610c19565b610476610c1f565b610476610c25565b61049c610c2b565b610476610c3a565b610476610c40565b610476610c46565b61049c610c4c565b610476610c5b565b610476610c61565b610476610c67565b610476610c6d565b610476610c73565b610476610c79565b610476610c7f565b610476610c85565b610476610c8b565b610561610707366004610fae565b610c91565b610476610dce565b610561610722366004610ed6565b610dd4565b610476610e45565b61049c610e4b565b610476610e5a565b610476610e60565b60065481565b601a5490565b6020546001600160a01b031690565b601f546001600160a01b031690565b60145490565b600f5490565b601c5481565b60165490565b600a5481565b60185490565b601f546001600160a01b031681565b600b5490565b60185481565b601d546001600160a01b031690565b60095490565b600e5460ff1681565b60045481565b600e5460ff1690565b6020546001600160a01b031681565b60165481565b6024546001600160a01b031690565b60155490565b61080f610e66565b6001600160a01b0316610820610b92565b6001600160a01b03161461084f5760405162461bcd60e51b81526004016108469061104f565b60405180910390fd5b6001600160a01b0388161561087a57601e80546001600160a01b0319166001600160a01b038a161790555b6001600160a01b038716156108a557601f80546001600160a01b0319166001600160a01b0389161790555b6001600160a01b038616156108d057602080546001600160a01b0319166001600160a01b0388161790555b6001600160a01b038516156108fb57602180546001600160a01b0319166001600160a01b0387161790555b6001600160a01b0384161561092657602280546001600160a01b0319166001600160a01b0386161790555b6001600160a01b0383161561095157602380546001600160a01b0319166001600160a01b0385161790555b6001600160a01b0382161561097c57602480546001600160a01b0319166001600160a01b0384161790555b6001600160a01b038116156109a757601d80546001600160a01b0319166001600160a01b0383161790555b5050505050505050565b6109b9610e66565b6001600160a01b03166109ca610b92565b6001600160a01b0316146109f05760405162461bcd60e51b81526004016108469061104f565b81600114156109ff5760018190555b8160021415610a0e5760028190555b8160031415610a1d5760038190555b8160041415610a2c5760048190555b5050565b601a5481565b6023546001600160a01b031690565b610a4d610e66565b6001600160a01b0316610a5e610b92565b6001600160a01b031614610a845760405162461bcd60e51b81526004016108469061104f565b8160011415610a935760158190555b8160021415610aa25760188190555b8160031415610ab15760168190555b8160041415610ac05760178190555b8160051415610acf5760198190555b8160061415610ade57601a8190555b8160071415610aed57601b8190555b8160081415610a2c57601c5550565b60175490565b610b0a610e66565b6001600160a01b0316610b1b610b92565b6001600160a01b031614610b415760405162461bcd60e51b81526004016108469061104f565b610b4b6000610e6a565b565b600a5490565b601b5490565b6021546001600160a01b031681565b60035490565b601e546001600160a01b031681565b600f5481565b6023546001600160a01b031681565b6000546001600160a01b031690565b60035481565b60015490565b60055490565b60135490565b60195490565b60015481565b60085481565b6024546001600160a01b031681565b600c5490565b60195481565b60105490565b6022546001600160a01b031690565b600c5481565b60125481565b60075490565b60115490565b60115481565b600d5490565b60055481565b60025481565b601e546001600160a01b031690565b601b5481565b60145481565b60135481565b6022546001600160a01b031681565b60085490565b60105481565b60175481565b60045490565b600d5481565b60125490565b60095481565b60025490565b60155481565b610c99610e66565b6001600160a01b0316610caa610b92565b6001600160a01b031614610cd05760405162461bcd60e51b81526004016108469061104f565b8260011415610cdf5760058290555b8260021415610cee5760068290555b8260031415610cfd5760078290555b8260041415610d0c5760088290555b8260051415610d1b5760098290555b8260061415610d2a57600a8290555b8260071415610d3957600b8290555b8260081415610d4857600c8290555b8260091415610d5757600d8290555b82600a1415610d6f57600e805460ff19168215151790555b82600b1415610d7e57600f8290555b82600c1415610d8d5760108290555b82600d1415610d9c5760118290555b82600e1415610dab5760128290555b82600f1415610dba5760138290555b8260101415610dc95760148290555b505050565b601c5490565b610ddc610e66565b6001600160a01b0316610ded610b92565b6001600160a01b031614610e135760405162461bcd60e51b81526004016108469061104f565b6001600160a01b038116610e395760405162461bcd60e51b815260040161084690611009565b610e4281610e6a565b50565b60075481565b601d546001600160a01b031681565b600b5481565b60065490565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610ed157600080fd5b919050565b600060208284031215610ee7578081fd5b610ef082610eba565b9392505050565b600080600080600080600080610100898b031215610f13578384fd5b610f1c89610eba565b9750610f2a60208a01610eba565b9650610f3860408a01610eba565b9550610f4660608a01610eba565b9450610f5460808a01610eba565b9350610f6260a08a01610eba565b9250610f7060c08a01610eba565b9150610f7e60e08a01610eba565b90509295985092959890939650565b60008060408385031215610f9f578182fd5b50508035926020909101359150565b600080600060608486031215610fc2578283fd5b833592506020840135915060408401358015158114610fdf578182fd5b809150509250925092565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b9081526020019056fea2646970667358221220f61811b67c8f0288e8aaadd2497b77318abaa176010335b6e27ba71e5cf1ead464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x1 SSTORE PUSH1 0x32 PUSH1 0x2 SSTORE PUSH1 0x32 PUSH1 0x3 SSTORE PUSH3 0x30D40 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x6 SSTORE PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x4 PUSH1 0x8 SSTORE PUSH1 0xB4 PUSH1 0x9 SSTORE PUSH1 0xB4 PUSH1 0xA SSTORE PUSH8 0x1BC16D674EC80000 PUSH1 0xB SSTORE PUSH9 0x22B1C8C1227A00000 PUSH1 0xC SSTORE PUSH2 0x190 PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0xE PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x384 PUSH1 0xF SSTORE PUSH2 0x3E8 PUSH1 0x10 SSTORE PUSH1 0x19 PUSH1 0x11 SSTORE PUSH1 0x4 PUSH1 0x12 SSTORE PUSH1 0x3 PUSH1 0x13 SSTORE PUSH2 0xE10 PUSH1 0x14 SSTORE PUSH1 0x1 PUSH1 0x15 SSTORE PUSH1 0x2 PUSH1 0x16 SSTORE PUSH1 0x4 PUSH1 0x17 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x18 SSTORE PUSH2 0x190 PUSH1 0x19 SSTORE PUSH1 0xB4 PUSH1 0x1A SSTORE PUSH8 0x29A2241AF62C0000 PUSH1 0x1B SSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x1C SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH2 0xF4 PUSH2 0xFE JUMP JUMPDEST PUSH2 0x102 JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x10C3 DUP1 PUSH2 0x161 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x469 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D1F2ADA GT PUSH2 0x24C JUMPI DUP1 PUSH4 0xCA820E9B GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xE6FDD4C0 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xFB50A473 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xFE722749 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xFF622DDA EQ PUSH2 0x73F JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xE6FDD4C0 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xEA19733C EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xEA663ED9 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xEE37F4A6 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0xF250AE2D EQ PUSH2 0x70C JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xE0DE3D7C GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xE0DE3D7C EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE28FDEEC EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE3115D3C EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0xE5F14824 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0xE66D543A EQ PUSH2 0x6D9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xCA820E9B EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xD0EED967 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xD4EFD2BA EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xD8645D37 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0xDFECEED7 EQ PUSH2 0x6B1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xBF09FF70 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0xBF09FF70 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC4A306F8 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xC6EACBFE EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xC7761FAB EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xCA64F9E7 EQ PUSH2 0x689 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xB5C92A3F EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xB6118450 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xBD40EF4C EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xBE250988 EQ PUSH2 0x661 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xA35B3B09 GT PUSH2 0x21B JUMPI DUP1 PUSH4 0xA35B3B09 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xAB43E78D EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xACBE4F3E EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xB368B928 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xB38E885E EQ PUSH2 0x639 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x9D1F2ADA EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0x9FB491F6 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xA02F9914 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xA327181B EQ PUSH2 0x611 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x544037A5 GT PUSH2 0x368 JUMPI DUP1 PUSH4 0x72E54030 GT PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x87CE6311 GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x87CE6311 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8D289F8F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x90D10B6E EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0x98A54E2B EQ PUSH2 0x5F1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x72E54030 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x77AD500C EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0x7A34DA67 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x7D630CB0 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x83CC6EF2 EQ PUSH2 0x5C9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x62C11AFA GT PUSH2 0x32C JUMPI DUP1 PUSH4 0x62C11AFA EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x68BD3615 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x6B13EDC1 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x70D29BDF EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5A1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x544037A5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x557C1ABE EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x57716B7F EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x5E481A18 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x61879075 EQ PUSH2 0x563 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x23AEA691 GT PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x3692616A GT PUSH2 0x3BA JUMPI DUP1 PUSH4 0x3692616A EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x36FC43FC EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x4E5638F5 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x4E87C5A8 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x51912F29 EQ PUSH2 0x52E JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x23AEA691 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x29A47BC7 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x2C1480C0 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x2C658EC0 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x2E2F93F3 EQ PUSH2 0x4F9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xF1F0FFE GT PUSH2 0x43D JUMPI DUP1 PUSH4 0xF1F0FFE EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF78CC76 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x134667BE EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x166FF4C7 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x1D0FB88E EQ PUSH2 0x4D1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH3 0x653FF8 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x2C5A49F EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x4E76C8F EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x855D151 EQ PUSH2 0x4A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x476 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x49C PUSH2 0x753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x49C PUSH2 0x762 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x476 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x789 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x49C PUSH2 0x795 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x511 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x511 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x561 PUSH2 0x571 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x594 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x561 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x561 PUSH2 0x707 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x561 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE45 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x80F PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x87A JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x1F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x20 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8FB JUMPI PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x926 JUMPI PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x951 JUMPI PUSH1 0x23 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x97C JUMPI PUSH1 0x24 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x1D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CA PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x9FF JUMPI PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xA0E JUMPI PUSH1 0x2 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xA1D JUMPI PUSH1 0x3 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x4 DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5E PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xA93 JUMPI PUSH1 0x15 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x18 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x16 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x17 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0xACF JUMPI PUSH1 0x19 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x1A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0xAED JUMPI PUSH1 0x1B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x1C SSTORE POP JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB0A PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1B PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x0 PUSH2 0xE6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC99 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAA PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0xCDF JUMPI PUSH1 0x5 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0xCEE JUMPI PUSH1 0x6 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x3 EQ ISZERO PUSH2 0xCFD JUMPI PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x4 EQ ISZERO PUSH2 0xD0C JUMPI PUSH1 0x8 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x5 EQ ISZERO PUSH2 0xD1B JUMPI PUSH1 0x9 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x6 EQ ISZERO PUSH2 0xD2A JUMPI PUSH1 0xA DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x7 EQ ISZERO PUSH2 0xD39 JUMPI PUSH1 0xB DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x8 EQ ISZERO PUSH2 0xD48 JUMPI PUSH1 0xC DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x9 EQ ISZERO PUSH2 0xD57 JUMPI PUSH1 0xD DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA EQ ISZERO PUSH2 0xD6F JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xB EQ ISZERO PUSH2 0xD7E JUMPI PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xC EQ ISZERO PUSH2 0xD8D JUMPI PUSH1 0x10 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xD EQ ISZERO PUSH2 0xD9C JUMPI PUSH1 0x11 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xE EQ ISZERO PUSH2 0xDAB JUMPI PUSH1 0x12 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xF EQ ISZERO PUSH2 0xDBA JUMPI PUSH1 0x13 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x10 EQ ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x14 DUP3 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDDC PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDED PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEF0 DUP3 PUSH2 0xEBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xF13 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xF1C DUP10 PUSH2 0xEBA JUMP JUMPDEST SWAP8 POP PUSH2 0xF2A PUSH1 0x20 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP7 POP PUSH2 0xF38 PUSH1 0x40 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP6 POP PUSH2 0xF46 PUSH1 0x60 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP5 POP PUSH2 0xF54 PUSH1 0x80 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP4 POP PUSH2 0xF62 PUSH1 0xA0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP PUSH2 0xF70 PUSH1 0xC0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP PUSH2 0xF7E PUSH1 0xE0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9F JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFDF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 XOR GT 0xB6 PUSH29 0x8F0288E8AAADD2497B77318ABAA176010335B6E27BA71E5CF1EAD46473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "351:13786:5:-:0;;;494:4;459:39;;535:2;505:32;;587:2;547:42;;645:6;599:52;;749:1;711:39;;789:15;757:47;;862:1;812:51;;923:1;873:51;;975:3;931:47;;1029:3;985:47;;1084:14;1046:52;;1141:15;1105:51;;1241:3;1193:51;;1285:4;1251:38;;;;;;;;;;;;;;;;;;;;1338:5;1296:47;;1413:4;1363:54;;1476:2;1424:54;;1521:1;1485:37;;1570:1;1529:42;;1634:4;1582:56;;1754:1;1714:41;;1815:1;1763:53;;1876:1;1824:53;;1921:15;1887:49;;1990:3;1944:49;;2046:3;2000:49;;2098:14;2058:54;;2157:15;2119:53;;351:13786;;;;;;;;;-1:-1:-1;921:32:0;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;351:13786:5;;640:96:2;719:10;640:96;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;351:13786:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3181:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "586:546:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "633:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "642:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "650:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "635:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "607:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:3:6",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "599:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:33:6"
															},
															"nodeType": "YulIf",
															"src": "596:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "668:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "699:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "678:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "668:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "718:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "753:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "764:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "728:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "718:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "777:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "787:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:40:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "836:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "871:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "882:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "867:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "867:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "846:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:40:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "836:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "905:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:41:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "955:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "990:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1001:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "986:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "965:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:41:6"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1015:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1050:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1061:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1025:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:41:6"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1015:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1075:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1110:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1121:3:6",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1106:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1106:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1085:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:41:6"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "1075:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "496:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "507:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "519:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "527:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "535:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "543:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "551:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "559:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "567:6:6",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													}
												],
												"src": "397:735:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1224:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1270:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1279:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1287:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1272:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1272:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1272:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1245:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1241:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1266:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1237:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:6"
															},
															"nodeType": "YulIf",
															"src": "1234:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1305:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1328:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1315:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1347:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1374:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1385:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1347:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1182:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1193:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1205:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1213:6:6",
														"type": ""
													}
												],
												"src": "1137:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1501:328:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1547:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1556:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1564:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1549:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1549:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1549:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1522:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1531:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1543:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1514:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:32:6"
															},
															"nodeType": "YulIf",
															"src": "1511:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1582:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1592:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1624:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1662:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1675:45:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1705:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1716:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1701:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1701:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1688:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:32:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1679:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1773:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1782:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1790:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1775:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1775:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1775:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1742:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1763:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1756:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1756:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1749:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1749:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1739:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1739:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1732:40:6"
															},
															"nodeType": "YulIf",
															"src": "1729:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1808:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1818:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1462:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1474:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1482:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1490:6:6",
														"type": ""
													}
												],
												"src": "1400:429:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1935:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1945:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1957:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1968:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1945:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1987:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2002:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2018:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2023:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2014:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2014:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2027:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2010:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1904:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1915:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1926:4:6",
														"type": ""
													}
												],
												"src": "1834:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2137:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2147:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2159:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2147:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2214:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2207:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2207:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2200:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2200:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2106:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2117:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2128:4:6",
														"type": ""
													}
												],
												"src": "2042:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2408:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2418:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2459:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2470:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2455:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2475:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2448:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2498:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2509:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2494:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2494:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2514:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2569:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2580:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2565:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2565:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2585:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2558:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2603:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2615:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2626:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2603:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2385:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2399:4:6",
														"type": ""
													}
												],
												"src": "2234:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2815:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2832:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2843:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2825:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2877:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2862:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2862:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2882:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2855:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2855:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2855:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2905:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2916:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2921:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2965:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2977:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2988:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2973:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2973:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2965:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2792:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2806:4:6",
														"type": ""
													}
												],
												"src": "2641:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3103:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3113:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3125:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3136:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3113:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3166:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3148:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3148:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3072:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3083:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3094:4:6",
														"type": ""
													}
												],
												"src": "3002:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n        value6 := abi_decode_t_address(add(headStart, 192))\n        value7 := abi_decode_t_address(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x469 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D1F2ADA GT PUSH2 0x24C JUMPI DUP1 PUSH4 0xCA820E9B GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xE6FDD4C0 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x714 JUMPI DUP1 PUSH4 0xFB50A473 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xFE722749 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0xFF622DDA EQ PUSH2 0x73F JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xE6FDD4C0 EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xEA19733C EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xEA663ED9 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xEE37F4A6 EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0xF250AE2D EQ PUSH2 0x70C JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xE0DE3D7C GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xE0DE3D7C EQ PUSH2 0x6B9 JUMPI DUP1 PUSH4 0xE28FDEEC EQ PUSH2 0x6C1 JUMPI DUP1 PUSH4 0xE3115D3C EQ PUSH2 0x6C9 JUMPI DUP1 PUSH4 0xE5F14824 EQ PUSH2 0x6D1 JUMPI DUP1 PUSH4 0xE66D543A EQ PUSH2 0x6D9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xCA820E9B EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xD0EED967 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0xD4EFD2BA EQ PUSH2 0x6A1 JUMPI DUP1 PUSH4 0xD8645D37 EQ PUSH2 0x6A9 JUMPI DUP1 PUSH4 0xDFECEED7 EQ PUSH2 0x6B1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xBF09FF70 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0xBF09FF70 EQ PUSH2 0x669 JUMPI DUP1 PUSH4 0xC4A306F8 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xC6EACBFE EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xC7761FAB EQ PUSH2 0x681 JUMPI DUP1 PUSH4 0xCA64F9E7 EQ PUSH2 0x689 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D EQ PUSH2 0x641 JUMPI DUP1 PUSH4 0xB5C92A3F EQ PUSH2 0x649 JUMPI DUP1 PUSH4 0xB6118450 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xBD40EF4C EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0xBE250988 EQ PUSH2 0x661 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xA35B3B09 GT PUSH2 0x21B JUMPI DUP1 PUSH4 0xA35B3B09 EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xAB43E78D EQ PUSH2 0x621 JUMPI DUP1 PUSH4 0xACBE4F3E EQ PUSH2 0x629 JUMPI DUP1 PUSH4 0xB368B928 EQ PUSH2 0x631 JUMPI DUP1 PUSH4 0xB38E885E EQ PUSH2 0x639 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x9D1F2ADA EQ PUSH2 0x5F9 JUMPI DUP1 PUSH4 0x9FB491F6 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xA02F9914 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xA327181B EQ PUSH2 0x611 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x544037A5 GT PUSH2 0x368 JUMPI DUP1 PUSH4 0x72E54030 GT PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x87CE6311 GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x87CE6311 EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8D289F8F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x90D10B6E EQ PUSH2 0x5E9 JUMPI DUP1 PUSH4 0x98A54E2B EQ PUSH2 0x5F1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x72E54030 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x77AD500C EQ PUSH2 0x5B1 JUMPI DUP1 PUSH4 0x7A34DA67 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x7D630CB0 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0x83CC6EF2 EQ PUSH2 0x5C9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x62C11AFA GT PUSH2 0x32C JUMPI DUP1 PUSH4 0x62C11AFA EQ PUSH2 0x576 JUMPI DUP1 PUSH4 0x68BD3615 EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0x6B13EDC1 EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0x70D29BDF EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5A1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x544037A5 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x557C1ABE EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x57716B7F EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x5E481A18 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x61879075 EQ PUSH2 0x563 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x23AEA691 GT PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x3692616A GT PUSH2 0x3BA JUMPI DUP1 PUSH4 0x3692616A EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x36FC43FC EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x4E5638F5 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x4E87C5A8 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x51912F29 EQ PUSH2 0x52E JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0x23AEA691 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x29A47BC7 EQ PUSH2 0x4E1 JUMPI DUP1 PUSH4 0x2C1480C0 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x2C658EC0 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x2E2F93F3 EQ PUSH2 0x4F9 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH4 0xF1F0FFE GT PUSH2 0x43D JUMPI DUP1 PUSH4 0xF1F0FFE EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xF78CC76 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x134667BE EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0x166FF4C7 EQ PUSH2 0x4C9 JUMPI DUP1 PUSH4 0x1D0FB88E EQ PUSH2 0x4D1 JUMPI PUSH2 0x469 JUMP JUMPDEST DUP1 PUSH3 0x653FF8 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x2C5A49F EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x4E76C8F EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x855D151 EQ PUSH2 0x4A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x476 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x476 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x49C PUSH2 0x753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH2 0x49C PUSH2 0x762 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x777 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x476 PUSH2 0x783 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x789 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x78F JUMP JUMPDEST PUSH2 0x49C PUSH2 0x795 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x511 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x511 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x476 PUSH2 0x7EC JUMP JUMPDEST PUSH2 0x49C PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x55C CALLDATASIZE PUSH1 0x4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x807 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x561 PUSH2 0x571 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xA36 JUMP JUMPDEST PUSH2 0x561 PUSH2 0x594 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x561 PUSH2 0xB02 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB53 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB59 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x476 PUSH2 0xB7D JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBAD JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBB3 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBDA JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBE0 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x476 PUSH2 0xBFB JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC01 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC0D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC13 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC1F JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC2B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC40 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC5B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC73 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x561 PUSH2 0x707 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x561 PUSH2 0x722 CALLDATASIZE PUSH1 0x4 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE45 JUMP JUMPDEST PUSH2 0x49C PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x476 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x80F PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x87A JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x1F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x20 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x8FB JUMPI PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x926 JUMPI PUSH1 0x22 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x951 JUMPI PUSH1 0x23 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x97C JUMPI PUSH1 0x24 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x1D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9CA PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x9FF JUMPI PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xA0E JUMPI PUSH1 0x2 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xA1D JUMPI PUSH1 0x3 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x4 DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA5E PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xA93 JUMPI PUSH1 0x15 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x18 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xAB1 JUMPI PUSH1 0x16 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x17 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0xACF JUMPI PUSH1 0x19 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x1A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0xAED JUMPI PUSH1 0x1B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xA2C JUMPI PUSH1 0x1C SSTORE POP JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB0A PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1B PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x0 PUSH2 0xE6A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC99 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCAA PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0xCDF JUMPI PUSH1 0x5 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0xCEE JUMPI PUSH1 0x6 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x3 EQ ISZERO PUSH2 0xCFD JUMPI PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x4 EQ ISZERO PUSH2 0xD0C JUMPI PUSH1 0x8 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x5 EQ ISZERO PUSH2 0xD1B JUMPI PUSH1 0x9 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x6 EQ ISZERO PUSH2 0xD2A JUMPI PUSH1 0xA DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x7 EQ ISZERO PUSH2 0xD39 JUMPI PUSH1 0xB DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x8 EQ ISZERO PUSH2 0xD48 JUMPI PUSH1 0xC DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x9 EQ ISZERO PUSH2 0xD57 JUMPI PUSH1 0xD DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA EQ ISZERO PUSH2 0xD6F JUMPI PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xB EQ ISZERO PUSH2 0xD7E JUMPI PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xC EQ ISZERO PUSH2 0xD8D JUMPI PUSH1 0x10 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xD EQ ISZERO PUSH2 0xD9C JUMPI PUSH1 0x11 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xE EQ ISZERO PUSH2 0xDAB JUMPI PUSH1 0x12 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xF EQ ISZERO PUSH2 0xDBA JUMPI PUSH1 0x13 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x10 EQ ISZERO PUSH2 0xDC9 JUMPI PUSH1 0x14 DUP3 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDDC PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDED PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE6A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE7 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEF0 DUP3 PUSH2 0xEBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xF13 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xF1C DUP10 PUSH2 0xEBA JUMP JUMPDEST SWAP8 POP PUSH2 0xF2A PUSH1 0x20 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP7 POP PUSH2 0xF38 PUSH1 0x40 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP6 POP PUSH2 0xF46 PUSH1 0x60 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP5 POP PUSH2 0xF54 PUSH1 0x80 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP4 POP PUSH2 0xF62 PUSH1 0xA0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP PUSH2 0xF70 PUSH1 0xC0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP PUSH2 0xF7E PUSH1 0xE0 DUP11 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9F JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC2 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFDF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 XOR GT 0xB6 PUSH29 0x8F0288E8AAADD2497B77318ABAA176010335B6E27BA71E5CF1EAD46473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;13774:126;;;:::i;10488:95::-;;;:::i;:::-;;;;;;;:::i;10393:89::-;;;:::i;12921:136::-;;;:::i;12279:116::-;;;:::i;2119:53::-;;;:::i;13358:136::-;;;:::i;985:47::-;;;:::i;13250:102::-;;;:::i;2272:25::-;;;:::i;11912:110::-;;;:::i;1887:49::-;;;:::i;10894:85::-;;;:::i;11546:122::-;;;:::i;1251:38::-;;;:::i;:::-;;;;;;;:::i;599:52::-;;;:::i;12164:105::-;;;:::i;2304:28::-;;;:::i;1763:53::-;;;:::i;10803:85::-;;;:::i;13130:114::-;;;:::i;6016:1023::-;;;;;;:::i;:::-;;:::i;:::-;;5530:476;;;;;;:::i;:::-;;:::i;2000:49::-;;;:::i;10696:101::-;;;:::i;8805:896::-;;;;;;:::i;:::-;;:::i;13500:136::-;;;:::i;1668:101:0:-;;;:::i;11674:122:5:-;;;:::i;13906:114::-;;;:::i;2339:29::-;;;:::i;9976:112::-;;;:::i;2238:27::-;;;:::i;1296:47::-;;;:::i;2411:31::-;;;:::i;1036:85:0:-;;;:::i;547:42:5:-;;;:::i;9773:101::-;;;:::i;11050:110::-;;;:::i;12801:114::-;;;:::i;13642:126::-;;;:::i;459:39::-;;;:::i;873:51::-;;;:::i;2449:20::-;;;:::i;11802:104::-;;;:::i;1944:49::-;;;:::i;12405:132::-;;;:::i;10593:97::-;;;:::i;1105:51::-;;;:::i;1485:37::-;;;:::i;11270:132::-;;;:::i;12547:136::-;;;:::i;1424:54::-;;;:::i;12028:130::-;;;:::i;711:39::-;;;:::i;505:32::-;;;:::i;10294:93::-;;;:::i;2058:54::-;;;:::i;1582:56::-;;;:::i;1529:42::-;;;:::i;2375:29::-;;;:::i;11408:132::-;;;:::i;1363:54::-;;;:::i;1824:53::-;;;:::i;10094:124::-;;;:::i;1193:51::-;;;:::i;12689:106::-;;;:::i;931:47::-;;;:::i;9880:90::-;;;:::i;1714:41::-;;;:::i;7059:1736::-;;;;;;:::i;:::-;;:::i;14026:108::-;;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;812:51:5:-;;;:::i;2211:20::-;;;:::i;1046:52::-;;;:::i;11166:98::-;;;:::i;757:47::-;;;;:::o;13774:126::-;13864:28;;13774:126;:::o;10488:95::-;10562:13;;-1:-1:-1;;;;;10562:13:5;10488:95;:::o;10393:89::-;10464:10;;-1:-1:-1;;;;;10464:10:5;10393:89;:::o;12921:136::-;13016:33;;12921:136;:::o;12279:116::-;12364:23;;12279:116;:::o;2119:53::-;;;;:::o;13358:136::-;13453:33;;13358:136;:::o;985:47::-;;;;:::o;13250:102::-;13328:16;;13250:102;:::o;2272:25::-;;;-1:-1:-1;;;;;2272:25:5;;:::o;11912:110::-;11994:20;;11912:110;:::o;1887:49::-;;;;:::o;10894:85::-;10966:5;;-1:-1:-1;;;;;10966:5:5;10894:85;:::o;11546:122::-;11634:26;;11546:122;:::o;1251:38::-;;;;;;:::o;599:52::-;;;;:::o;12164:105::-;12242:19;;;;12164:105;:::o;2304:28::-;;;-1:-1:-1;;;;;2304:28:5;;:::o;1763:53::-;;;;:::o;10803:85::-;10875:5;;-1:-1:-1;;;;;10875:5:5;10803:85;:::o;13130:114::-;13214:22;;13130:114;:::o;6016:1023::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;6298:27:5;::::1;::::0;6295:86:::1;;6341:12;:28:::0;;-1:-1:-1;;;;;;6341:28:5::1;-1:-1:-1::0;;;;;6341:28:5;::::1;;::::0;;6295:86:::1;-1:-1:-1::0;;;;;6394:25:5;::::1;::::0;6391:80:::1;;6435:10;:24:::0;;-1:-1:-1;;;;;;6435:24:5::1;-1:-1:-1::0;;;;;6435:24:5;::::1;;::::0;;6391:80:::1;-1:-1:-1::0;;;;;6484:28:5;::::1;::::0;6481:89:::1;;6528:13;:30:::0;;-1:-1:-1;;;;;;6528:30:5::1;-1:-1:-1::0;;;;;6528:30:5;::::1;;::::0;;6481:89:::1;-1:-1:-1::0;;;;;6583:29:5;::::1;::::0;6580:92:::1;;6628:14;:32:::0;;-1:-1:-1;;;;;;6628:32:5::1;-1:-1:-1::0;;;;;6628:32:5;::::1;;::::0;;6580:92:::1;-1:-1:-1::0;;;;;6685:29:5;::::1;::::0;6682:92:::1;;6730:14;:32:::0;;-1:-1:-1;;;;;;6730:32:5::1;-1:-1:-1::0;;;;;6730:32:5;::::1;;::::0;;6682:92:::1;-1:-1:-1::0;;;;;6787:31:5;::::1;::::0;6784:98:::1;;6834:16;:36:::0;;-1:-1:-1;;;;;;6834:36:5::1;-1:-1:-1::0;;;;;6834:36:5;::::1;;::::0;;6784:98:::1;-1:-1:-1::0;;;;;6895:20:5;::::1;::::0;6892:65:::1;;6931:5;:14:::0;;-1:-1:-1;;;;;;6931:14:5::1;-1:-1:-1::0;;;;;6931:14:5;::::1;;::::0;;6892:65:::1;-1:-1:-1::0;;;;;6970:20:5;::::1;::::0;6967:65:::1;;7006:5;:14:::0;;-1:-1:-1;;;;;;7006:14:5::1;-1:-1:-1::0;;;;;7006:14:5;::::1;;::::0;;6967:65:::1;6016:1023:::0;;;;;;;;:::o;5530:476::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5645:14:5::1;5663:1;5645:19;5642:79;;;5680:17;:29:::0;;;5642:79:::1;5734:14;5752:1;5734:19;5731:74;;;5769:11;:24:::0;;;5731:74:::1;5818:14;5836:1;5818:19;5815:84;;;5853:21;:34:::0;;;5815:84:::1;5912:14;5930:1;5912:19;5909:90;;;5947:27;:40:::0;;;5909:90:::1;5530:476:::0;;:::o;2000:49::-;;;;:::o;10696:101::-;10773:16;;-1:-1:-1;;;;;10773:16:5;10696:101;:::o;8805:896::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;8923:14:5::1;8941:1;8923:19;8920:84;;;8958:22;:34:::0;;;8920:84:::1;9017:14;9035:1;9017:19;9014:79;;;9052:16;:29:::0;;;9014:79:::1;9106:14;9124:1;9106:19;9103:96;;;9141:33;:46:::0;;;9103:96:::1;9212:14;9230:1;9212:19;9209:96;;;9247:33;:46:::0;;;9209:96:::1;9318:14;9336:1;9318:19;9315:91;;;9353:28;:41:::0;;;9315:91:::1;9419:14;9437:1;9419:19;9416:91;;;9454:28;:41:::0;;;9416:91:::1;9520:14;9538:1;9520:19;9517:85;;;9555:22;:35:::0;;;9517:85:::1;9615:14;9633:1;9615:19;9612:82;;;9650:19;:32:::0;-1:-1:-1;8805:896:5:o;13500:136::-;13595:33;;13500:136;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;11674:122:5:-;11762:26;;11674:122;:::o;13906:114::-;13990:22;;13906:114;:::o;2339:29::-;;;-1:-1:-1;;;;;2339:29:5;;:::o;9976:112::-;10059:21;;9976:112;:::o;2238:27::-;;;-1:-1:-1;;;;;2238:27:5;;:::o;1296:47::-;;;;:::o;2411:31::-;;;-1:-1:-1;;;;;2411:31:5;;:::o;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;:::o;547:42:5:-;;;;:::o;9773:101::-;9849:17;;9773:101;:::o;11050:110::-;11132:20;;11050:110;:::o;12801:114::-;12885:22;;12801:114;:::o;13642:126::-;13732:28;;13642:126;:::o;459:39::-;;;;:::o;873:51::-;;;;:::o;2449:20::-;;;-1:-1:-1;;;;;2449:20:5;;:::o;11802:104::-;11881:17;;11802:104;:::o;1944:49::-;;;;:::o;12405:132::-;12498:31;;12405:132;:::o;10593:97::-;10668:14;;-1:-1:-1;;;;;10668:14:5;10593:97;:::o;1105:51::-;;;;:::o;1485:37::-;;;;:::o;11270:132::-;11363:31;;11270:132;:::o;12547:136::-;12642:33;;12547:136;:::o;1424:54::-;;;;:::o;12028:130::-;12120:30;;12028:130;:::o;711:39::-;;;;:::o;505:32::-;;;;:::o;10294:93::-;10367:12;;-1:-1:-1;;;;;10367:12:5;10294:93;:::o;2058:54::-;;;;:::o;1582:56::-;;;;:::o;1529:42::-;;;;:::o;2375:29::-;;;-1:-1:-1;;;;;2375:29:5;;:::o;11408:132::-;11501:31;;11408:132;:::o;1363:54::-;;;;:::o;1824:53::-;;;;:::o;10094:124::-;10183:27;;10094:124;:::o;1193:51::-;;;;:::o;12689:106::-;12769:18;;12689:106;:::o;931:47::-;;;;:::o;9880:90::-;9951:11;;9880:90;:::o;1714:41::-;;;;:::o;7059:1736::-;1259:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;7191:14:5::1;7209:1;7191:19;7188:83;;;7226:20;:33:::0;;;7188:83:::1;7284:14;7302:1;7284:19;7281:77;;;7319:14;:27:::0;;;7281:77:::1;7371:14;7389:1;7371:19;7368:94;;;7406:31;:44:::0;;;7368:94:::1;7475:14;7493:1;7475:19;7472:94;;;7510:31;:44:::0;;;7472:94:::1;7579:14;7597:1;7579:19;7576:89;;;7614:26;:39:::0;;;7576:89:::1;7678:14;7696:1;7678:19;7675:89;;;7713:26;:39:::0;;;7675:89:::1;7777:14;7795:1;7777:19;7774:83;;;7812:20;:33:::0;;;7774:83:::1;7870:14;7888:1;7870:19;7867:80;;;7905:17;:30:::0;;;7867:80:::1;8009:14;8027:1;8009:19;8006:92;;;8044:30;:42:::0;;;8006:92:::1;8111:14;8129:2;8111:20;8108:82;;;8147:19;:31:::0;;-1:-1:-1;;8147:31:5::1;::::0;::::1;;;::::0;;8108:82:::1;8203:14;8221:2;8203:20;8200:86;;;8239:23;:35:::0;;;8200:86:::1;8299:14;8317:2;8299:20;8296:94;;;8335:31;:43:::0;;;8296:94:::1;8403:14;8421:2;8403:20;8400:96;;;8439:33;:45:::0;;;8400:96:::1;8509:14;8527:2;8509:20;8506:81;;;8545:18;:30:::0;;;8506:81:::1;8600:14;8618:2;8600:20;8597:85;;;8636:22;:34:::0;;;8597:85:::1;8695:14;8713:2;8695:20;8692:96;;;8731:33;:45:::0;;;8692:96:::1;7059:1736:::0;;;:::o;14026:108::-;14107:19;;14026:108;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:0::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;812:51:5:-;;;;:::o;2211:20::-;;;-1:-1:-1;;;;;2211:20:5;;:::o;1046:52::-;;;;:::o;11166:98::-;11242:14;;11166:98;:::o;640:96:2:-;719:10;640:96;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:735::-;;;;;;;;;628:3;616:9;607:7;603:23;599:33;596:2;;;650:6;642;635:22;596:2;678:31;699:9;678:31;:::i;:::-;668:41;;728:40;764:2;753:9;749:18;728:40;:::i;:::-;718:50;;787:40;823:2;812:9;808:18;787:40;:::i;:::-;777:50;;846:40;882:2;871:9;867:18;846:40;:::i;:::-;836:50;;905:41;941:3;930:9;926:19;905:41;:::i;:::-;895:51;;965:41;1001:3;990:9;986:19;965:41;:::i;:::-;955:51;;1025:41;1061:3;1050:9;1046:19;1025:41;:::i;:::-;1015:51;;1085:41;1121:3;1110:9;1106:19;1085:41;:::i;:::-;1075:51;;586:546;;;;;;;;;;;:::o;1137:258::-;;;1266:2;1254:9;1245:7;1241:23;1237:32;1234:2;;;1287:6;1279;1272:22;1234:2;-1:-1:-1;;1315:23:6;;;1385:2;1370:18;;;1357:32;;-1:-1:-1;1224:171:6:o;1400:429::-;;;;1543:2;1531:9;1522:7;1518:23;1514:32;1511:2;;;1564:6;1556;1549:22;1511:2;1605:9;1592:23;1582:33;;1662:2;1651:9;1647:18;1634:32;1624:42;;1716:2;1705:9;1701:18;1688:32;1763:5;1756:13;1749:21;1742:5;1739:32;1729:2;;1790:6;1782;1775:22;1729:2;1818:5;1808:15;;;1501:328;;;;;:::o;1834:203::-;-1:-1:-1;;;;;1998:32:6;;;;1980:51;;1968:2;1953:18;;1935:102::o;2042:187::-;2207:14;;2200:22;2182:41;;2170:2;2155:18;;2137:92::o;2234:402::-;2436:2;2418:21;;;2475:2;2455:18;;;2448:30;2514:34;2509:2;2494:18;;2487:62;-1:-1:-1;;;2580:2:6;2565:18;;2558:36;2626:3;2611:19;;2408:228::o;2641:356::-;2843:2;2825:21;;;2862:18;;;2855:30;2921:34;2916:2;2901:18;;2894:62;2988:2;2973:18;;2815:182::o;3002:177::-;3148:25;;;3136:2;3121:18;;3103:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "858200",
								"executionCost": "584393",
								"totalCost": "1442593"
							},
							"external": {
								"AddressManager()": "1182",
								"FORMAT_COMMIT_ROUND_DURATION()": "1162",
								"FORMAT_DATA_BATCH_SIZE()": "1139",
								"FORMAT_MAX_CONSENSUS_WORKER_COUNT()": "1117",
								"FORMAT_MIN_CONSENSUS_WORKER_COUNT()": "1097",
								"FORMAT_MIN_REP_Data()": "1141",
								"FORMAT_MIN_REWARD_Data()": "1096",
								"FORMAT_MIN_STAKE()": "1163",
								"FORMAT_REVEAL_ROUND_DURATION()": "1096",
								"FormattingSystem()": "1159",
								"MAX_CONTRACT_STORED_BATCHES()": "1140",
								"MAX_SUCCEEDING_NOVOTES()": "1140",
								"MAX_TOTAL_WORKERS()": "1163",
								"MAX_UPDATE_ITERATIONS()": "1161",
								"NOVOTE_REGISTRATION_WAIT_DURATION()": "1118",
								"RepManager()": "1161",
								"RewardManager()": "1226",
								"SPOT_COMMIT_ROUND_DURATION()": "1095",
								"SPOT_DATA_BATCH_SIZE()": "1139",
								"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "1095",
								"SPOT_INTER_ALLOCATION_DURATION()": "1161",
								"SPOT_MAX_CONSENSUS_WORKER_COUNT()": "1096",
								"SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "1095",
								"SPOT_MIN_CONSENSUS_WORKER_COUNT()": "1116",
								"SPOT_MIN_REP_Data()": "1118",
								"SPOT_MIN_REWARD_Data()": "1160",
								"SPOT_MIN_STAKE()": "1098",
								"SPOT_NB_TIMEFRAMES()": "1140",
								"SPOT_REVEAL_ROUND_DURATION()": "1185",
								"SPOT_TIMEFRAME_DURATION()": "1095",
								"SPOT_TOGGLE_ENABLED()": "1130",
								"SpottingSystem()": "1204",
								"StakeManager()": "1226",
								"VOTE_QUORUM()": "1161",
								"getExordeToken()": "1227",
								"getFormattingSystem()": "1160",
								"getMaxTotalWorkers()": "1183",
								"getRepManager()": "1206",
								"getRewardManager()": "1184",
								"getSpottingSystem()": "1138",
								"getStakeManager()": "1225",
								"getVoteQuorum()": "1117",
								"get_FORMAT_COMMIT_ROUND_DURATION()": "1141",
								"get_FORMAT_DATA_BATCH_SIZE()": "1141",
								"get_FORMAT_MAX_CONSENSUS_WORKER_COUNT()": "1162",
								"get_FORMAT_MIN_CONSENSUS_WORKER_COUNT()": "1163",
								"get_FORMAT_MIN_REP_Data()": "1183",
								"get_FORMAT_MIN_REWARD_Data()": "1118",
								"get_FORMAT_MIN_STAKE()": "1097",
								"get_FORMAT_REVEAL_ROUND_DURATION()": "1120",
								"get_MAX_CONTRACT_STORED_BATCHES()": "1139",
								"get_MAX_SUCCEEDING_NOVOTES()": "1119",
								"get_MAX_UPDATE_ITERATIONS()": "1162",
								"get_NOVOTE_REGISTRATION_WAIT_DURATION()": "1097",
								"get_SPOT_COMMIT_ROUND_DURATION()": "1096",
								"get_SPOT_DATA_BATCH_SIZE()": "1097",
								"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "1184",
								"get_SPOT_INTER_ALLOCATION_DURATION()": "1117",
								"get_SPOT_MAX_CONSENSUS_WORKER_COUNT()": "1184",
								"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "1184",
								"get_SPOT_MIN_CONSENSUS_WORKER_COUNT()": "1162",
								"get_SPOT_MIN_REP_Data()": "1140",
								"get_SPOT_MIN_REWARD_Data()": "1141",
								"get_SPOT_MIN_STAKE()": "1182",
								"get_SPOT_NB_TIMEFRAMES()": "1183",
								"get_SPOT_REVEAL_ROUND_DURATION()": "1096",
								"get_SPOT_TIMEFRAME_DURATION()": "1119",
								"get_SPOT_TOGGLE_ENABLED()": "1174",
								"getsFuelSystem()": "1161",
								"owner()": "1181",
								"renounceOwnership()": "23660",
								"sFuel()": "1160",
								"token()": "1180",
								"transferOwnership(address)": "23765",
								"updateContractsAddresses(address,address,address,address,address,address,address,address)": "infinite",
								"updateFormattingParameters(uint256,uint256)": "161561",
								"updateGeneralParameters(uint256,uint256)": "81475",
								"updateSpottingParameters(uint256,uint256,bool)": "322756"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 494,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 459,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 498,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 535,
									"end": 537,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 505,
									"end": 537,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 505,
									"end": 537,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 589,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 547,
									"end": 589,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 547,
									"end": 589,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "30D40"
								},
								{
									"begin": 599,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 599,
									"end": 651,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 711,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 711,
									"end": 750,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 757,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 757,
									"end": 804,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 812,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 812,
									"end": 863,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 873,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 873,
									"end": 924,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 975,
									"end": 978,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 931,
									"end": 978,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 931,
									"end": 978,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1029,
									"end": 1032,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 985,
									"end": 1032,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 985,
									"end": 1032,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1084,
									"end": 1098,
									"name": "PUSH",
									"source": 5,
									"value": "1BC16D674EC80000"
								},
								{
									"begin": 1046,
									"end": 1098,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1046,
									"end": 1098,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1141,
									"end": 1156,
									"name": "PUSH",
									"source": 5,
									"value": "22B1C8C1227A00000"
								},
								{
									"begin": 1105,
									"end": 1156,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1105,
									"end": 1156,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1241,
									"end": 1244,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 1193,
									"end": 1244,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 1193,
									"end": 1244,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1285,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1289,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "384"
								},
								{
									"begin": 1296,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1296,
									"end": 1343,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1413,
									"end": 1417,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 1363,
									"end": 1417,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1363,
									"end": 1417,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1476,
									"end": 1478,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1424,
									"end": 1478,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1424,
									"end": 1478,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1485,
									"end": 1522,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1485,
									"end": 1522,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1570,
									"end": 1571,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1529,
									"end": 1571,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1529,
									"end": 1571,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1638,
									"name": "PUSH",
									"source": 5,
									"value": "E10"
								},
								{
									"begin": 1582,
									"end": 1638,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1582,
									"end": 1638,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1754,
									"end": 1755,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1714,
									"end": 1755,
									"name": "PUSH",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1714,
									"end": 1755,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1763,
									"end": 1816,
									"name": "PUSH",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1763,
									"end": 1816,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1876,
									"end": 1877,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1824,
									"end": 1877,
									"name": "PUSH",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1824,
									"end": 1877,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1921,
									"end": 1936,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 1887,
									"end": 1936,
									"name": "PUSH",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1887,
									"end": 1936,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1990,
									"end": 1993,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 1944,
									"end": 1993,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1944,
									"end": 1993,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2046,
									"end": 2049,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 2000,
									"end": 2049,
									"name": "PUSH",
									"source": 5,
									"value": "1A"
								},
								{
									"begin": 2000,
									"end": 2049,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2098,
									"end": 2112,
									"name": "PUSH",
									"source": 5,
									"value": "29A2241AF62C0000"
								},
								{
									"begin": 2058,
									"end": 2112,
									"name": "PUSH",
									"source": 5,
									"value": "1B"
								},
								{
									"begin": 2058,
									"end": 2112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2157,
									"end": 2172,
									"name": "PUSH",
									"source": 5,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 2119,
									"end": 2172,
									"name": "PUSH",
									"source": 5,
									"value": "1C"
								},
								{
									"begin": 2119,
									"end": 2172,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 14137,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f61811b67c8f0288e8aaadd2497b77318abaa176010335b6e27ba71e5cf1ead464736f6c63430008000033",
									".code": [
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "9D1F2ADA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "CA820E9B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E6FDD4C0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "FB50A473"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "FE722749"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "FF622DDA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E6FDD4C0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "EA19733C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "EA663ED9"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "EE37F4A6"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F250AE2D"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E0DE3D7C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E0DE3D7C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E28FDEEC"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E3115D3C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E5F14824"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "E66D543A"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "CA820E9B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "D0EED967"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "D4EFD2BA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "D8645D37"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "DFECEED7"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B45D9D8D"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "BF09FF70"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "BF09FF70"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "C4A306F8"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "C6EACBFE"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "C7761FAB"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "CA64F9E7"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B45D9D8D"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B5C92A3F"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B6118450"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "BD40EF4C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "BE250988"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "A35B3B09"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "A35B3B09"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "AB43E78D"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "ACBE4F3E"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B368B928"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "B38E885E"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "9D1F2ADA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "9FB491F6"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "A02F9914"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "A327181B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "544037A5"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "72E54030"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "87CE6311"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "87CE6311"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "8D289F8F"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "90D10B6E"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "98A54E2B"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "72E54030"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "77AD500C"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "7A34DA67"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "7D630CB0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "83CC6EF2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "62C11AFA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "62C11AFA"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "68BD3615"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "6B13EDC1"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "70D29BDF"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "544037A5"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "557C1ABE"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "57716B7F"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "5E481A18"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "61879075"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "23AEA691"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "3692616A"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "3692616A"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "36FC43FC"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "4E5638F5"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "4E87C5A8"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "51912F29"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "23AEA691"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "29A47BC7"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "2C1480C0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "2C658EC0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "2E2F93F3"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F1F0FFE"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F1F0FFE"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "F78CC76"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "134667BE"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "166FF4C7"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "1D0FB88E"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "653FF8"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "2C5A49F"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "4E76C8F"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "855D151"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 14137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13864,
											"end": 13892,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 13864,
											"end": 13892,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13774,
											"end": 13900,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10562,
											"end": 10575,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10562,
											"end": 10575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10488,
											"end": 10583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10464,
											"end": 10474,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10464,
											"end": 10474,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10464,
											"end": 10474,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10393,
											"end": 10482,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13016,
											"end": 13049,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 13016,
											"end": 13049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12921,
											"end": 13057,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12387,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 12364,
											"end": 12387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12279,
											"end": 12395,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2172,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13453,
											"end": 13486,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 13453,
											"end": 13486,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13494,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13328,
											"end": 13344,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 13328,
											"end": 13344,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13250,
											"end": 13352,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2272,
											"end": 2297,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11994,
											"end": 12014,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 11994,
											"end": 12014,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 12022,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1936,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 10971,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 10966,
											"end": 10971,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10894,
											"end": 10979,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11634,
											"end": 11660,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11546,
											"end": 11668,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1251,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12242,
											"end": 12261,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 12242,
											"end": 12261,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12242,
											"end": 12261,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 12242,
											"end": 12261,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12269,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2332,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1816,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10875,
											"end": 10880,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10875,
											"end": 10880,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10875,
											"end": 10880,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10888,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 13214,
											"end": 13236,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13130,
											"end": 13244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6298,
											"end": 6325,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6325,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6325,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 6295,
											"end": 6381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6353,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6369,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6295,
											"end": 6381,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 6295,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6394,
											"end": 6419,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6419,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6419,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6391,
											"end": 6471,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6445,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6435,
											"end": 6459,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6471,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 6391,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6484,
											"end": 6512,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6512,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6512,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6481,
											"end": 6570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6541,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6570,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 6481,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6583,
											"end": 6612,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6612,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 6580,
											"end": 6672,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6580,
											"end": 6672,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 6580,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6685,
											"end": 6714,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6685,
											"end": 6714,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6685,
											"end": 6714,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6682,
											"end": 6774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6744,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6762,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6774,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 6682,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6818,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 6818,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6784,
											"end": 6882,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6850,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6870,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6882,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 6784,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6892,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6892,
											"end": 6957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6945,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6892,
											"end": 6957,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 6892,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6970,
											"end": 6990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6990,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6967,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 6967,
											"end": 7032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7006,
											"end": 7020,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6967,
											"end": 7032,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 6967,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6016,
											"end": 7039,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5645,
											"end": 5659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5645,
											"end": 5664,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5697,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5680,
											"end": 5709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5709,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5734,
											"end": 5753,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5805,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5731,
											"end": 5805,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5769,
											"end": 5793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5793,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5805,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 5731,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5836,
											"end": 5837,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5818,
											"end": 5837,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5899,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 5815,
											"end": 5899,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5853,
											"end": 5887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5887,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5899,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 5815,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5974,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5947,
											"end": 5987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5987,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 6006,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2049,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10773,
											"end": 10789,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 10773,
											"end": 10789,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10773,
											"end": 10789,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10696,
											"end": 10797,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8923,
											"end": 8937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8923,
											"end": 8942,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 9004,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8920,
											"end": 9004,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8980,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8992,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 9004,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 8920,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9017,
											"end": 9031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9068,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 9052,
											"end": 9081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9081,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 9014,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9106,
											"end": 9120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9124,
											"end": 9125,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9106,
											"end": 9125,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9199,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 9103,
											"end": 9199,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9174,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 9141,
											"end": 9187,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9187,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9103,
											"end": 9199,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 9103,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9212,
											"end": 9226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9231,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9212,
											"end": 9231,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9305,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 9209,
											"end": 9305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9280,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 9247,
											"end": 9293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9293,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9209,
											"end": 9305,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 9209,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 9318,
											"end": 9337,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9406,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 9315,
											"end": 9406,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9381,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9353,
											"end": 9394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9394,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9406,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 9315,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9437,
											"end": 9438,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 9419,
											"end": 9438,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9416,
											"end": 9507,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9416,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 9416,
											"end": 9507,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9454,
											"end": 9482,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 9454,
											"end": 9495,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9454,
											"end": 9495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9454,
											"end": 9495,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9416,
											"end": 9507,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 9416,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9539,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 9520,
											"end": 9539,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9602,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 9517,
											"end": 9602,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9555,
											"end": 9577,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9555,
											"end": 9590,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9602,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 9517,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 9615,
											"end": 9634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9612,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 9612,
											"end": 9694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9650,
											"end": 9669,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 9650,
											"end": 9682,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8805,
											"end": 9701,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13595,
											"end": 13628,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 13595,
											"end": 13628,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13500,
											"end": 13636,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11674,
											"end": 11796,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13990,
											"end": 14012,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 13990,
											"end": 14012,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13906,
											"end": 14020,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2368,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 10088,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2265,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2442,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9849,
											"end": 9866,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9849,
											"end": 9866,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9874,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11132,
											"end": 11152,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11132,
											"end": 11152,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11160,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12885,
											"end": 12907,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 12885,
											"end": 12907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12801,
											"end": 12915,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13732,
											"end": 13760,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 13732,
											"end": 13760,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13642,
											"end": 13768,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2469,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11881,
											"end": 11898,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11881,
											"end": 11898,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11802,
											"end": 11906,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1993,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12529,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 12498,
											"end": 12529,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12405,
											"end": 12537,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10682,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10690,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1522,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11363,
											"end": 11394,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11363,
											"end": 11394,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11270,
											"end": 11402,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12642,
											"end": 12675,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12642,
											"end": 12675,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12683,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1424,
											"end": 1478,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12120,
											"end": 12150,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 12120,
											"end": 12150,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12028,
											"end": 12158,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10367,
											"end": 10379,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 10367,
											"end": 10379,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10367,
											"end": 10379,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10387,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2112,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1638,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1571,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2404,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11501,
											"end": 11532,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 11501,
											"end": 11532,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11408,
											"end": 11540,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1877,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10183,
											"end": 10210,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1244,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12769,
											"end": 12787,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12769,
											"end": 12787,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12689,
											"end": 12795,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9951,
											"end": 9962,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9951,
											"end": 9962,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9970,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7191,
											"end": 7205,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7209,
											"end": 7210,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7191,
											"end": 7210,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7271,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 7188,
											"end": 7271,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7246,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7226,
											"end": 7259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7259,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7188,
											"end": 7271,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 7188,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7303,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7333,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7319,
											"end": 7346,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7346,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7462,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 7368,
											"end": 7462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7406,
											"end": 7437,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7406,
											"end": 7450,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7406,
											"end": 7450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7406,
											"end": 7450,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7368,
											"end": 7462,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 7368,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7493,
											"end": 7494,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7475,
											"end": 7494,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7472,
											"end": 7566,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7472,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 7472,
											"end": 7566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7541,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7510,
											"end": 7554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7554,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7554,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7472,
											"end": 7566,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 7472,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7579,
											"end": 7598,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7665,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 7576,
											"end": 7665,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7640,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 7614,
											"end": 7653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7653,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7576,
											"end": 7665,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 7576,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7678,
											"end": 7692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7697,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7678,
											"end": 7697,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7675,
											"end": 7764,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7675,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 7675,
											"end": 7764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7739,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 7713,
											"end": 7752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7752,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7675,
											"end": 7764,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 7675,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7791,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7795,
											"end": 7796,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7777,
											"end": 7796,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7774,
											"end": 7857,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7774,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 7774,
											"end": 7857,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7832,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 7812,
											"end": 7845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7812,
											"end": 7845,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7774,
											"end": 7857,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 7774,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7870,
											"end": 7884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 7889,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7870,
											"end": 7889,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7947,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 7867,
											"end": 7947,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7922,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 7905,
											"end": 7935,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7935,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7947,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 7867,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8009,
											"end": 8023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8027,
											"end": 8028,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8009,
											"end": 8028,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8098,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 8006,
											"end": 8098,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8074,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 8044,
											"end": 8086,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8086,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8098,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 8006,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8111,
											"end": 8125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 8111,
											"end": 8131,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8190,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 8108,
											"end": 8190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8166,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8178,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8190,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 8108,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8203,
											"end": 8217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8223,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 8203,
											"end": 8223,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8200,
											"end": 8286,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8200,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 8200,
											"end": 8286,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8239,
											"end": 8262,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8239,
											"end": 8274,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8200,
											"end": 8286,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 8200,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8299,
											"end": 8313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 8299,
											"end": 8319,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 8296,
											"end": 8390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8366,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8378,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8390,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 8296,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8421,
											"end": 8423,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 8403,
											"end": 8423,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8496,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 8400,
											"end": 8496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8439,
											"end": 8472,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8400,
											"end": 8496,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 8400,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8509,
											"end": 8523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8527,
											"end": 8529,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 8509,
											"end": 8529,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8506,
											"end": 8587,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8506,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 8506,
											"end": 8587,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8563,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8545,
											"end": 8575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8545,
											"end": 8575,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8506,
											"end": 8587,
											"name": "tag",
											"source": 5,
											"value": "437"
										},
										{
											"begin": 8506,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 8600,
											"end": 8620,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 8597,
											"end": 8682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8636,
											"end": 8658,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 8636,
											"end": 8670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8636,
											"end": 8670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8636,
											"end": 8670,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8682,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 8597,
											"end": 8682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8695,
											"end": 8709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8713,
											"end": 8715,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 8695,
											"end": 8715,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8788,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 8692,
											"end": 8788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 8731,
											"end": 8776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8731,
											"end": 8776,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8788,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 8692,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7059,
											"end": 8795,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 14107,
											"end": 14126,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14026,
											"end": 14134,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11242,
											"end": 11256,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11242,
											"end": 11256,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11166,
											"end": 11264,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 6,
											"value": "457"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1132,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 625,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 607,
											"end": 614,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 603,
											"end": 626,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 599,
											"end": 632,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 596,
											"end": 598,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 650,
											"end": 656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 642,
											"end": 648,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 635,
											"end": 657,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 596,
											"end": 598,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 678,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 678,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 678,
											"end": 709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "463"
										},
										{
											"begin": 678,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 668,
											"end": 709,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 668,
											"end": 709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 728,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 764,
											"end": 766,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 762,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 749,
											"end": 767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 728,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 728,
											"end": 768,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 728,
											"end": 768,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 728,
											"end": 768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 718,
											"end": 768,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 718,
											"end": 768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 787,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 823,
											"end": 825,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 808,
											"end": 826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 787,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 787,
											"end": 827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 787,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 777,
											"end": 827,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 777,
											"end": 827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 846,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 867,
											"end": 885,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 846,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 836,
											"end": 886,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 836,
											"end": 886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 905,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 941,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 926,
											"end": 945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 905,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 905,
											"end": 946,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 946,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 905,
											"end": 946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 895,
											"end": 946,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 895,
											"end": 946,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 1001,
											"end": 1004,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 990,
											"end": 999,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 986,
											"end": 1005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 965,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 1061,
											"end": 1064,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 1025,
											"end": 1066,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "469"
										},
										{
											"begin": 1025,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1015,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1110,
											"end": 1119,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "tag",
											"source": 6,
											"value": "470"
										},
										{
											"begin": 1085,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 1132,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1137,
											"end": 1395,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 1137,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1268,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1263,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1272,
											"end": 1294,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1338,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1395,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1400,
											"end": 1829,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1400,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1829,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1514,
											"end": 1546,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 1511,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1615,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1615,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1582,
											"end": 1615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1660,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1666,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 1714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1720,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1769,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 1770,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1771,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1797,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "475"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1829,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2037,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1834,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2030,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2037,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2229,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2042,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2222,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2229,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2234,
											"end": 2636,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 2234,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2548,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2509,
											"end": 2511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2487,
											"end": 2549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2580,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2565,
											"end": 2583,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2558,
											"end": 2594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2611,
											"end": 2630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2636,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2641,
											"end": 2997,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 2641,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2846,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2855,
											"end": 2885,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2955,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2956,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2973,
											"end": 2991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2997,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3002,
											"end": 3179,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3002,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3138,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3179,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AddressManager()": "7a34da67",
							"FORMAT_COMMIT_ROUND_DURATION()": "b368b928",
							"FORMAT_DATA_BATCH_SIZE()": "ea663ed9",
							"FORMAT_MAX_CONSENSUS_WORKER_COUNT()": "e28fdeec",
							"FORMAT_MIN_CONSENSUS_WORKER_COUNT()": "544037a5",
							"FORMAT_MIN_REP_Data()": "134667be",
							"FORMAT_MIN_REWARD_Data()": "ca820e9b",
							"FORMAT_MIN_STAKE()": "2c658ec0",
							"FORMAT_REVEAL_ROUND_DURATION()": "62c11afa",
							"FormattingSystem()": "8d289f8f",
							"MAX_CONTRACT_STORED_BATCHES()": "4e5638f5",
							"MAX_SUCCEEDING_NOVOTES()": "d4efd2ba",
							"MAX_TOTAL_WORKERS()": "a327181b",
							"MAX_UPDATE_ITERATIONS()": "90d10b6e",
							"NOVOTE_REGISTRATION_WAIT_DURATION()": "d0eed967",
							"RepManager()": "29a47bc7",
							"RewardManager()": "51912f29",
							"SPOT_COMMIT_ROUND_DURATION()": "e6fdd4c0",
							"SPOT_DATA_BATCH_SIZE()": "c6eacbfe",
							"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "e0de3d7c",
							"SPOT_INTER_ALLOCATION_DURATION()": "e5f14824",
							"SPOT_MAX_CONSENSUS_WORKER_COUNT()": "a35b3b09",
							"SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "bf09ff70",
							"SPOT_MIN_CONSENSUS_WORKER_COUNT()": "fb50a473",
							"SPOT_MIN_REP_Data()": "b5c92a3f",
							"SPOT_MIN_REWARD_Data()": "fe722749",
							"SPOT_MIN_STAKE()": "00653ff8",
							"SPOT_NB_TIMEFRAMES()": "b6118450",
							"SPOT_REVEAL_ROUND_DURATION()": "1d0fb88e",
							"SPOT_TIMEFRAME_DURATION()": "87ce6311",
							"SPOT_TOGGLE_ENABLED()": "36fc43fc",
							"SpottingSystem()": "d8645d37",
							"StakeManager()": "83cc6ef2",
							"VOTE_QUORUM()": "c7761fab",
							"getExordeToken()": "2e2f93f3",
							"getFormattingSystem()": "68bd3615",
							"getMaxTotalWorkers()": "98a54e2b",
							"getRepManager()": "0855d151",
							"getRewardManager()": "04e76c8f",
							"getSpottingSystem()": "b45d9d8d",
							"getStakeManager()": "ca64f9e7",
							"getVoteQuorum()": "ea19733c",
							"get_FORMAT_COMMIT_ROUND_DURATION()": "a02f9914",
							"get_FORMAT_DATA_BATCH_SIZE()": "57716b7f",
							"get_FORMAT_MAX_CONSENSUS_WORKER_COUNT()": "70d29bdf",
							"get_FORMAT_MIN_CONSENSUS_WORKER_COUNT()": "166ff4c7",
							"get_FORMAT_MIN_REP_Data()": "f250ae2d",
							"get_FORMAT_MIN_REWARD_Data()": "77ad500c",
							"get_FORMAT_MIN_STAKE()": "23aea691",
							"get_FORMAT_REVEAL_ROUND_DURATION()": "02c5a49f",
							"get_MAX_CONTRACT_STORED_BATCHES()": "e3115d3c",
							"get_MAX_SUCCEEDING_NOVOTES()": "9fb491f6",
							"get_MAX_UPDATE_ITERATIONS()": "7d630cb0",
							"get_NOVOTE_REGISTRATION_WAIT_DURATION()": "0f1f0ffe",
							"get_SPOT_COMMIT_ROUND_DURATION()": "3692616a",
							"get_SPOT_DATA_BATCH_SIZE()": "9d1f2ada",
							"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "b38e885e",
							"get_SPOT_INTER_ALLOCATION_DURATION()": "c4a306f8",
							"get_SPOT_MAX_CONSENSUS_WORKER_COUNT()": "dfeceed7",
							"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "be250988",
							"get_SPOT_MIN_CONSENSUS_WORKER_COUNT()": "bd40ef4c",
							"get_SPOT_MIN_REP_Data()": "acbe4f3e",
							"get_SPOT_MIN_REWARD_Data()": "2c1480c0",
							"get_SPOT_MIN_STAKE()": "ff622dda",
							"get_SPOT_NB_TIMEFRAMES()": "e66d543a",
							"get_SPOT_REVEAL_ROUND_DURATION()": "72e54030",
							"get_SPOT_TIMEFRAME_DURATION()": "0f78cc76",
							"get_SPOT_TOGGLE_ENABLED()": "4e87c5a8",
							"getsFuelSystem()": "557c1abe",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sFuel()": "ab43e78d",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"updateContractsAddresses(address,address,address,address,address,address,address,address)": "5e481a18",
							"updateFormattingParameters(uint256,uint256)": "6b13edc1",
							"updateGeneralParameters(uint256,uint256)": "61879075",
							"updateSpottingParameters(uint256,uint256,bool)": "ee37f4a6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AddressManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_MIN_REP_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_MIN_REWARD_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FORMAT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FormattingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONTRACT_STORED_BATCHES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUCCEEDING_NOVOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WORKERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_UPDATE_ITERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOVOTE_REGISTRATION_WAIT_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RepManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RewardManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_INTER_ALLOCATION_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MAX_SPOT_PER_USER_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REP_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REWARD_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_NB_TIMEFRAMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_TIMEFRAME_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_TOGGLE_ENABLED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SpottingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_QUORUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExordeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFormattingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTotalWorkers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRepManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpottingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVoteQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_MIN_REP_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_MIN_REWARD_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_FORMAT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_CONTRACT_STORED_BATCHES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_SUCCEEDING_NOVOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_UPDATE_ITERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_NOVOTE_REGISTRATION_WAIT_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_INTER_ALLOCATION_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REP_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REWARD_Data\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_NB_TIMEFRAMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_TIMEFRAME_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_TOGGLE_ENABLED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getsFuelSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sFuel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"StakeManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RepManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RewardManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"AddressManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SpottingSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"FormattingSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sFuel_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"updateContractsAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateFormattingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateGeneralParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"boolValue\",\"type\":\"bool\"}],\"name\":\"updateSpottingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mathias Dail\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Parameters  v0.1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/worksystems/Parameters.sol\":\"Parameters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe936fc79332de2ca7b1c06a70f81345aa2466958aab00f463e312ca0585e85cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1308706a315fce707f34bb974e08c8e8f8a5674123890d5c67f495be4e539081\",\"dweb:/ipfs/QmTk2mgRyHkq238Qm75Uc3EF3s76yG3kSsxdgTJWgLjitE\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"contracts/worksystems/Parameters.sol\":{\"keccak256\":\"0x073987f68ccd7357b247db316ac03af1a25b7df3c213b6b7f20933703325c46a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2112f2ec01dc6fadfafd65c8e1808472ab5bdfce41363367ebcd167eced5207\",\"dweb:/ipfs/QmZiZxuS96f34FAZx9tGAWfHMAdYDEDwwGK3R6PYzpu3hr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 616,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "MAX_TOTAL_WORKERS",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 619,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "VOTE_QUORUM",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 622,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "MAX_UPDATE_ITERATIONS",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 625,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "MAX_CONTRACT_STORED_BATCHES",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 628,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 636,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_STAKE",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 639,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 642,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 645,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 648,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 656,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REWARD_Data",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 664,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REP_Data",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 667,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_INTER_ALLOCATION_DURATION",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 670,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_TOGGLE_ENABLED",
								"offset": 0,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 675,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_TIMEFRAME_DURATION",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 678,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 681,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 684,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SPOT_NB_TIMEFRAMES",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 687,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "MAX_SUCCEEDING_NOVOTES",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 690,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "NOVOTE_REGISTRATION_WAIT_DURATION",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 693,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 699,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 707,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_MIN_STAKE",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 710,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 713,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 721,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_MIN_REWARD_Data",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 729,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FORMAT_MIN_REP_Data",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 731,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "token",
								"offset": 0,
								"slot": "29",
								"type": "t_address"
							},
							{
								"astId": 733,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "StakeManager",
								"offset": 0,
								"slot": "30",
								"type": "t_address"
							},
							{
								"astId": 735,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "RepManager",
								"offset": 0,
								"slot": "31",
								"type": "t_address"
							},
							{
								"astId": 737,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "RewardManager",
								"offset": 0,
								"slot": "32",
								"type": "t_address"
							},
							{
								"astId": 739,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "AddressManager",
								"offset": 0,
								"slot": "33",
								"type": "t_address"
							},
							{
								"astId": 741,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "SpottingSystem",
								"offset": 0,
								"slot": "34",
								"type": "t_address"
							},
							{
								"astId": 743,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "FormattingSystem",
								"offset": 0,
								"slot": "35",
								"type": "t_address"
							},
							{
								"astId": 745,
								"contract": "contracts/worksystems/Parameters.sol:Parameters",
								"label": "sFuel",
								"offset": 0,
								"slot": "36",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							204
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 205,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 204,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [
								204
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								204
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0"
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:1"
									},
									"scope": 182,
									"src": "281:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:1"
									},
									"scope": 182,
									"src": "419:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "725:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 182,
									"src": "707:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1078:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1093:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1133:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:1"
									},
									"scope": 182,
									"src": "1059:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:1"
									},
									"scope": 182,
									"src": "1795:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2207:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2231:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2297:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:1"
									},
									"scope": 182,
									"src": "2176:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2487:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2509:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:1"
									},
									"src": "2472:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2718:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2741:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2766:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:1"
									},
									"src": "2703:78:1"
								}
							],
							"scope": 183,
							"src": "187:2596:1"
						}
					],
					"src": "91:2693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 190,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 189,
												"id": 192,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 204,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 199,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 198,
												"id": 201,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 204,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "608:235:2"
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							292
						]
					},
					"id": 293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 207,
								"nodeType": "StructuredDocumentation",
								"src": "113:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 292,
							"linearizedBaseContracts": [
								292
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "337:38:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 217,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "354:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 218,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "359:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "354:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 221,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "367:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "354:14:3",
													"trueExpression": {
														"id": 220,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "363:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 216,
												"id": 223,
												"nodeType": "Return",
												"src": "347:21:3"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "206:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "283:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "294:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:22:3"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "328:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:3"
									},
									"scope": 292,
									"src": "270:105:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "513:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 235,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "530:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 236,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "534:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "530:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "542:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "530:13:3",
													"trueExpression": {
														"id": 238,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "538:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 241,
												"nodeType": "Return",
												"src": "523:20:3"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "381:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "459:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "470:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:22:3"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "504:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:9:3"
									},
									"scope": 292,
									"src": "446:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "734:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 253,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "789:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 254,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "793:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "789:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 256,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "788:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 257,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "799:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 258,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "803:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "799:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 260,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "798:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "798:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "788:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 252,
												"id": 264,
												"nodeType": "Return",
												"src": "781:28:3"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "556:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "680:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "691:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:22:3"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "725:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:9:3"
									},
									"scope": 292,
									"src": "663:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "1086:123:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 276,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "1174:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 277,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1178:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1174:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 279,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "1183:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 280,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "1187:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1183:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1192:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1183:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1200:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1183:18:3",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1196:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 287,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1182:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1174:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 275,
												"id": 289,
												"nodeType": "Return",
												"src": "1167:35:3"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "822:188:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1032:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1043:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:22:3"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1077:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1076:9:3"
									},
									"scope": 292,
									"src": "1015:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 293,
							"src": "187:1024:3"
						}
					],
					"src": "88:1124:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							604
						]
					},
					"id": 605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 604,
							"linearizedBaseContracts": [
								604
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															308
														],
														"declarations": [
															{
																"constant": false,
																"id": 308,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 307,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 306,
															"id": 319,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 322,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 306,
														"id": 324,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 604,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 340,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 346,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 338,
															"id": 345,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 348,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 349,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 338,
														"id": 352,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 604,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 395,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															376
														],
														"declarations": [
															{
																"constant": false,
																"id": 376,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 395,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 375,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 380,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 377,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 378,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 381,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 382,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 384,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 389,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 392,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 393,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 394,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 604,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 416,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 408,
															"id": 415,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 418,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 419,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 408,
														"id": 422,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 604,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 604,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 463,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 464,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 462,
												"id": 466,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 604,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 478,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 479,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 477,
												"id": 481,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 604,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 494,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 496,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 604,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 509,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 507,
												"id": 511,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 604,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 523,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 524,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 522,
												"id": 526,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 604,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 551,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 541,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 542,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 544,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 540,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 546,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 548,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 539,
														"id": 550,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 604,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 576,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 566,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 569,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 565,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 571,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 573,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 558,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 564,
														"id": 575,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 604,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 601,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 591,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 594,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 590,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 596,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 597,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 598,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 589,
														"id": 600,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 604,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 605,
							"src": "467:6301:4"
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/worksystems/Parameters.sol": {
				"ast": {
					"absolutePath": "contracts/worksystems/Parameters.sol",
					"exportedSymbols": {
						"Context": [
							204
						],
						"IERC20": [
							182
						],
						"Math": [
							292
						],
						"Ownable": [
							104
						],
						"Parameters": [
							1428
						],
						"SafeMath": [
							604
						]
					},
					"id": 1429,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 606,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 607,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 183,
							"src": "67:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 608,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 605,
							"src": "125:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 609,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 293,
							"src": "184:53:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 610,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 105,
							"src": "239:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 612,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "374:7:5"
									},
									"id": 613,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:5"
								}
							],
							"contractDependencies": [
								104,
								204
							],
							"contractKind": "contract",
							"documentation": {
								"id": 611,
								"nodeType": "StructuredDocumentation",
								"src": "295:54:5",
								"text": "@title Parameters  v0.1\n@author Mathias Dail"
							},
							"fullyImplemented": true,
							"id": 1428,
							"linearizedBaseContracts": [
								1428,
								104,
								204
							],
							"name": "Parameters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a327181b",
									"id": 616,
									"mutability": "mutable",
									"name": "MAX_TOTAL_WORKERS",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "459:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 614,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 615,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "494:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7761fab",
									"id": 619,
									"mutability": "mutable",
									"name": "VOTE_QUORUM",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "505:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 617,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 618,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "535:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90d10b6e",
									"id": 622,
									"mutability": "mutable",
									"name": "MAX_UPDATE_ITERATIONS",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "547:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "587:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e5638f5",
									"id": 625,
									"mutability": "mutable",
									"name": "MAX_CONTRACT_STORED_BATCHES",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "599:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 623,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030303030",
										"id": 624,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "645:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000_by_1",
											"typeString": "int_const 200000"
										},
										"value": "200000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6eacbfe",
									"id": 628,
									"mutability": "mutable",
									"name": "SPOT_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "711:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 626,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "711:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 627,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "749:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "00653ff8",
									"id": 636,
									"mutability": "mutable",
									"name": "SPOT_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "757:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 629,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "757:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 630,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "789:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "795:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "801:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "795:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 634,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "794:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "789:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb50a473",
									"id": 639,
									"mutability": "mutable",
									"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "812:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 637,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "812:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 638,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "862:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a35b3b09",
									"id": 642,
									"mutability": "mutable",
									"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "873:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 640,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 641,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "923:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fdd4c0",
									"id": 645,
									"mutability": "mutable",
									"name": "SPOT_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "931:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 643,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "931:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 644,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "975:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0fb88e",
									"id": 648,
									"mutability": "mutable",
									"name": "SPOT_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "985:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 646,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "985:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 647,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1029:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe722749",
									"id": 656,
									"mutability": "mutable",
									"name": "SPOT_MIN_REWARD_Data",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1046:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 649,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000"
										},
										"id": 655,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 650,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1084:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1089:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1095:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1089:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 654,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1088:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1084:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b5c92a3f",
									"id": 664,
									"mutability": "mutable",
									"name": "SPOT_MIN_REP_Data",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1105:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 657,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1105:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										},
										"id": 663,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3430",
											"id": 658,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1141:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_40_by_1",
												"typeString": "int_const 40"
											},
											"value": "40"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1147:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1153:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1147:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 662,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1146:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1141:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40000000000000000000_by_1",
											"typeString": "int_const 40000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5f14824",
									"id": 667,
									"mutability": "mutable",
									"name": "SPOT_INTER_ALLOCATION_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1193:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1241:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36fc43fc",
									"id": 670,
									"mutability": "mutable",
									"name": "SPOT_TOGGLE_ENABLED",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1251:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 668,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1251:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 669,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1285:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87ce6311",
									"id": 675,
									"mutability": "mutable",
									"name": "SPOT_TIMEFRAME_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1296:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 671,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1296:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										},
										"id": 674,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3135",
											"id": 672,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1338:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "15"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 673,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1341:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "1338:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0de3d7c",
									"id": 678,
									"mutability": "mutable",
									"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1363:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 676,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1363:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 677,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf09ff70",
									"id": 681,
									"mutability": "mutable",
									"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1424:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1424:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1476:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6118450",
									"id": 684,
									"mutability": "mutable",
									"name": "SPOT_NB_TIMEFRAMES",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1485:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 682,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1485:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 683,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1521:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4efd2ba",
									"id": 687,
									"mutability": "mutable",
									"name": "MAX_SUCCEEDING_NOVOTES",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1529:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1529:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1570:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0eed967",
									"id": 690,
									"mutability": "mutable",
									"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1582:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1582:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1634:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea663ed9",
									"id": 693,
									"mutability": "mutable",
									"name": "FORMAT_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1714:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 691,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 692,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1754:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "544037a5",
									"id": 696,
									"mutability": "mutable",
									"name": "FORMAT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1763:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 695,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e28fdeec",
									"id": 699,
									"mutability": "mutable",
									"name": "FORMAT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1824:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 697,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1824:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 698,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1876:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c658ec0",
									"id": 707,
									"mutability": "mutable",
									"name": "FORMAT_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1887:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 700,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1887:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 701,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1921:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1927:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1933:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "1927:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 705,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1926:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1921:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b368b928",
									"id": 710,
									"mutability": "mutable",
									"name": "FORMAT_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "1944:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 708,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1944:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 709,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1990:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "62c11afa",
									"id": 713,
									"mutability": "mutable",
									"name": "FORMAT_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2000:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 711,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2000:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 712,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2046:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ca820e9b",
									"id": 721,
									"mutability": "mutable",
									"name": "FORMAT_MIN_REWARD_Data",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2058:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 714,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2058:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000"
										},
										"id": 720,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33",
											"id": 715,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2098:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2103:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2103:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 719,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2102:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2098:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "134667be",
									"id": 729,
									"mutability": "mutable",
									"name": "FORMAT_MIN_REP_Data",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2119:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 722,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2119:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										},
										"id": 728,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 723,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2157:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2163:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2163:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 727,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2162:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2157:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 731,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2211:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 730,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2211:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83cc6ef2",
									"id": 733,
									"mutability": "mutable",
									"name": "StakeManager",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2238:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 732,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2238:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29a47bc7",
									"id": 735,
									"mutability": "mutable",
									"name": "RepManager",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2272:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 734,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2272:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51912f29",
									"id": 737,
									"mutability": "mutable",
									"name": "RewardManager",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2304:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 736,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2304:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a34da67",
									"id": 739,
									"mutability": "mutable",
									"name": "AddressManager",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2339:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 738,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8645d37",
									"id": 741,
									"mutability": "mutable",
									"name": "SpottingSystem",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2375:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 740,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2375:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d289f8f",
									"id": 743,
									"mutability": "mutable",
									"name": "FormattingSystem",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2411:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 742,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2411:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab43e78d",
									"id": 745,
									"mutability": "mutable",
									"name": "sFuel",
									"nodeType": "VariableDeclaration",
									"scope": 1428,
									"src": "2449:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 744,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2449:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "5623:383:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 754,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "5645:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5663:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5645:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "5642:79:5",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "5665:56:5",
													"statements": [
														{
															"expression": {
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 757,
																	"name": "MAX_TOTAL_WORKERS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "5680:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 758,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "5700:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5680:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 760,
															"nodeType": "ExpressionStatement",
															"src": "5680:29:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 763,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "5734:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5752:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5734:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "5731:74:5",
												"trueBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "5754:51:5",
													"statements": [
														{
															"expression": {
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 766,
																	"name": "VOTE_QUORUM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5769:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 767,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "5784:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5769:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"nodeType": "ExpressionStatement",
															"src": "5769:24:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "5818:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5836:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5818:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "IfStatement",
												"src": "5815:84:5",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5838:61:5",
													"statements": [
														{
															"expression": {
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 775,
																	"name": "MAX_UPDATE_ITERATIONS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "5853:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 776,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "5878:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5853:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5853:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 781,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "5912:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5930:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5912:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "5909:90:5",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "5932:67:5",
													"statements": [
														{
															"expression": {
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 784,
																	"name": "MAX_CONTRACT_STORED_BATCHES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "5947:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 785,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "5978:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5947:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "5947:40:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "61879075",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 752,
											"modifierName": {
												"id": 751,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5613:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "5613:9:5"
										}
									],
									"name": "updateGeneralParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5563:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5563:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5587:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:43:5"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5623:0:5"
									},
									"scope": 1428,
									"src": "5530:476:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "6284:755:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "StakeManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "6298:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6323:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6315:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6315:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6315:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6298:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "6295:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "6326:55:5",
													"statements": [
														{
															"expression": {
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 818,
																	"name": "StakeManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "6341:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 819,
																	"name": "StakeManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "6356:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6341:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "6341:28:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "RepManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "6394:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6417:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6409:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6409:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6409:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6394:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "6391:80:5",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "6420:51:5",
													"statements": [
														{
															"expression": {
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 830,
																	"name": "RepManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "6435:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 831,
																	"name": "RepManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "6448:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6435:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 833,
															"nodeType": "ExpressionStatement",
															"src": "6435:24:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "RewardManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "6484:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6510:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6502:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6502:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6502:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6484:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "6481:89:5",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "6513:57:5",
													"statements": [
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 842,
																	"name": "RewardManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "6528:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 843,
																	"name": "RewardManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "6544:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6528:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "6528:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 848,
														"name": "AddressManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "6583:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6610:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6602:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 849,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6602:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6602:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6583:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "6580:92:5",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "6613:59:5",
													"statements": [
														{
															"expression": {
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 854,
																	"name": "AddressManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "6628:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 855,
																	"name": "AddressManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "6645:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6628:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 857,
															"nodeType": "ExpressionStatement",
															"src": "6628:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "SpottingSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "6685:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6712:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6704:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 861,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6704:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6704:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6685:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "6682:92:5",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "6715:59:5",
													"statements": [
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 866,
																	"name": "SpottingSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "6730:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 867,
																	"name": "SpottingSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6747:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6730:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "6730:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "FormattingSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "6787:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6816:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6808:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6808:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6808:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6787:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "6784:98:5",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "6819:63:5",
													"statements": [
														{
															"expression": {
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 878,
																	"name": "FormattingSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "6834:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 879,
																	"name": "FormattingSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "6853:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6834:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 881,
															"nodeType": "ExpressionStatement",
															"src": "6834:36:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "sFuel_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6895:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6913:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6905:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6905:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6905:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6895:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "6892:65:5",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "6916:41:5",
													"statements": [
														{
															"expression": {
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 890,
																	"name": "sFuel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "6931:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 891,
																	"name": "sFuel_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "6939:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6931:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 893,
															"nodeType": "ExpressionStatement",
															"src": "6931:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6970:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6988:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6980:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 897,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6980:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6980:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6970:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "6967:65:5",
												"trueBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "6991:41:5",
													"statements": [
														{
															"expression": {
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 902,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "7006:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 903,
																	"name": "token_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "7014:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7006:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "7006:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5e481a18",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 810,
											"modifierName": {
												"id": 809,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6274:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6274:9:5"
										}
									],
									"name": "updateContractsAddresses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "StakeManager_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6050:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "RepManager_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6073:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "RewardManager_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6094:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6094:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "AddressManager_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6118:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "SpottingSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6182:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "FormattingSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6207:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "sFuel_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6234:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "token_",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "6250:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6250:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6049:216:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6284:0:5"
									},
									"scope": 1428,
									"src": "6016:1023:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "7169:1626:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7191:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7209:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7191:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "7188:83:5",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "7211:60:5",
													"statements": [
														{
															"expression": {
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 923,
																	"name": "SPOT_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7226:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 924,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7250:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7226:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 926,
															"nodeType": "ExpressionStatement",
															"src": "7226:33:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 929,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7284:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7302:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "7284:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "7281:77:5",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "7304:54:5",
													"statements": [
														{
															"expression": {
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 932,
																	"name": "SPOT_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "7319:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 933,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7337:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7319:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"nodeType": "ExpressionStatement",
															"src": "7319:27:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 938,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7371:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7389:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7371:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "7368:94:5",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "7391:71:5",
													"statements": [
														{
															"expression": {
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 941,
																	"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "7406:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 942,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7441:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7406:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 944,
															"nodeType": "ExpressionStatement",
															"src": "7406:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7475:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7493:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "7475:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "7472:94:5",
												"trueBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "7495:71:5",
													"statements": [
														{
															"expression": {
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 950,
																	"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "7510:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 951,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7545:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7510:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "7510:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7579:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7597:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "7579:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "7576:89:5",
												"trueBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "7599:66:5",
													"statements": [
														{
															"expression": {
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 959,
																	"name": "SPOT_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "7614:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 960,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7644:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7614:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "7614:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7678:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7696:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "7678:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "7675:89:5",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "7698:66:5",
													"statements": [
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 968,
																	"name": "SPOT_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "7713:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 969,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7743:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7713:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "7713:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7777:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "7777:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "7774:83:5",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "7797:60:5",
													"statements": [
														{
															"expression": {
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 977,
																	"name": "SPOT_MIN_REWARD_Data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 656,
																	"src": "7812:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 978,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7836:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7812:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "7812:33:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 983,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7870:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7888:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "7870:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"nodeType": "IfStatement",
												"src": "7867:80:5",
												"trueBody": {
													"id": 990,
													"nodeType": "Block",
													"src": "7890:57:5",
													"statements": [
														{
															"expression": {
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 986,
																	"name": "SPOT_MIN_REP_Data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "7905:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 987,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "7926:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7905:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 989,
															"nodeType": "ExpressionStatement",
															"src": "7905:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8009:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "39",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8027:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "8009:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "8006:92:5",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "8029:69:5",
													"statements": [
														{
															"expression": {
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 995,
																	"name": "SPOT_INTER_ALLOCATION_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "8044:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 996,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8077:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8044:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 998,
															"nodeType": "ExpressionStatement",
															"src": "8044:42:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8111:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8129:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "8111:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "8108:82:5",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "8132:58:5",
													"statements": [
														{
															"expression": {
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1004,
																	"name": "SPOT_TOGGLE_ENABLED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "8147:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1005,
																	"name": "boolValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "8169:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8147:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1007,
															"nodeType": "ExpressionStatement",
															"src": "8147:31:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8203:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3131",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8221:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "8203:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "8200:86:5",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "8224:62:5",
													"statements": [
														{
															"expression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1013,
																	"name": "SPOT_TIMEFRAME_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "8239:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1014,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8265:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8239:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "8239:35:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8299:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8317:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "8299:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "8296:94:5",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "8320:70:5",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1022,
																	"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "8335:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1023,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8369:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8335:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "8335:43:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1028,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8403:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3133",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8421:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_13_by_1",
															"typeString": "int_const 13"
														},
														"value": "13"
													},
													"src": "8403:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "8400:96:5",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "8424:72:5",
													"statements": [
														{
															"expression": {
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1031,
																	"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "8439:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1032,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8475:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8439:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1034,
															"nodeType": "ExpressionStatement",
															"src": "8439:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8509:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3134",
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8527:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_14_by_1",
															"typeString": "int_const 14"
														},
														"value": "14"
													},
													"src": "8509:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "IfStatement",
												"src": "8506:81:5",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "8530:57:5",
													"statements": [
														{
															"expression": {
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1040,
																	"name": "SPOT_NB_TIMEFRAMES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "8545:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1041,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8566:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8545:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "8545:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8600:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8618:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "8600:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "8597:85:5",
												"trueBody": {
													"id": 1053,
													"nodeType": "Block",
													"src": "8621:61:5",
													"statements": [
														{
															"expression": {
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1049,
																	"name": "MAX_SUCCEEDING_NOVOTES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "8636:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1050,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8661:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8636:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1052,
															"nodeType": "ExpressionStatement",
															"src": "8636:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1055,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8695:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3136",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8713:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "16"
													},
													"src": "8695:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"nodeType": "IfStatement",
												"src": "8692:96:5",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "8716:72:5",
													"statements": [
														{
															"expression": {
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1058,
																	"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "8731:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1059,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "8767:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8731:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "8731:45:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ee37f4a6",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 918,
											"modifierName": {
												"id": 917,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7159:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "7159:9:5"
										}
									],
									"name": "updateSpottingParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7093:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7117:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "boolValue",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "7136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7136:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7092:59:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7169:0:5"
									},
									"scope": 1428,
									"src": "7059:1736:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "8901:800:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1074,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "8923:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8941:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8923:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "8920:84:5",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "8943:61:5",
													"statements": [
														{
															"expression": {
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1077,
																	"name": "FORMAT_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "8958:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1078,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "8983:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8958:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "8958:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1083,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9017:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9035:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9017:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "9014:79:5",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "9037:56:5",
													"statements": [
														{
															"expression": {
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1086,
																	"name": "FORMAT_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "9052:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1087,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9072:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9052:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "9052:29:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9106:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9124:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "9106:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "9103:96:5",
												"trueBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "9126:73:5",
													"statements": [
														{
															"expression": {
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1095,
																	"name": "FORMAT_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "9141:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1096,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9178:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9141:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1098,
															"nodeType": "ExpressionStatement",
															"src": "9141:46:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9212:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9230:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "9212:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "9209:96:5",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "9232:73:5",
													"statements": [
														{
															"expression": {
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1104,
																	"name": "FORMAT_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "9247:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1105,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9284:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9247:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "9247:46:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1110,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9318:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9336:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "9318:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "9315:91:5",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "9338:68:5",
													"statements": [
														{
															"expression": {
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1113,
																	"name": "FORMAT_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "9353:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1114,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9385:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9353:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1116,
															"nodeType": "ExpressionStatement",
															"src": "9353:41:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1119,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9419:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9437:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "9419:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "9416:91:5",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "9439:68:5",
													"statements": [
														{
															"expression": {
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1122,
																	"name": "FORMAT_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "9454:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1123,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9486:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9454:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "9454:41:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9520:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9538:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "9520:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "9517:85:5",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "9540:62:5",
													"statements": [
														{
															"expression": {
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1131,
																	"name": "FORMAT_MIN_REWARD_Data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "9555:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1132,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9581:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9555:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1134,
															"nodeType": "ExpressionStatement",
															"src": "9555:35:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "9615:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9633:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "9615:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "9612:82:5",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "9635:59:5",
													"statements": [
														{
															"expression": {
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1140,
																	"name": "FORMAT_MIN_REP_Data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "9650:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1141,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "9673:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9650:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1143,
															"nodeType": "ExpressionStatement",
															"src": "9650:32:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6b13edc1",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "8891:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "8891:9:5"
										}
									],
									"name": "updateFormattingParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "8841:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "8865:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8865:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:43:5"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8901:0:5"
									},
									"scope": 1428,
									"src": "8805:896:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "9831:43:5",
										"statements": [
											{
												"expression": {
													"id": 1152,
													"name": "MAX_TOTAL_WORKERS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "9849:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1153,
												"nodeType": "Return",
												"src": "9842:24:5"
											}
										]
									},
									"functionSelector": "98a54e2b",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTotalWorkers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9800:2:5"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "9823:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9823:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9822:9:5"
									},
									"scope": 1428,
									"src": "9773:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "9933:37:5",
										"statements": [
											{
												"expression": {
													"id": 1160,
													"name": "VOTE_QUORUM",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 619,
													"src": "9951:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "9944:18:5"
											}
										]
									},
									"functionSelector": "ea19733c",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoteQuorum",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9902:2:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "9925:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9925:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9924:9:5"
									},
									"scope": 1428,
									"src": "9880:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "10041:47:5",
										"statements": [
											{
												"expression": {
													"id": 1168,
													"name": "MAX_UPDATE_ITERATIONS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 622,
													"src": "10059:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1169,
												"nodeType": "Return",
												"src": "10052:28:5"
											}
										]
									},
									"functionSelector": "7d630cb0",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_UPDATE_ITERATIONS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10010:2:5"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "10033:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10032:9:5"
									},
									"scope": 1428,
									"src": "9976:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "10165:53:5",
										"statements": [
											{
												"expression": {
													"id": 1176,
													"name": "MAX_CONTRACT_STORED_BATCHES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "10183:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1177,
												"nodeType": "Return",
												"src": "10176:34:5"
											}
										]
									},
									"functionSelector": "e3115d3c",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_CONTRACT_STORED_BATCHES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10134:2:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "10157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10156:9:5"
									},
									"scope": 1428,
									"src": "10094:124:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "10349:38:5",
										"statements": [
											{
												"expression": {
													"id": 1184,
													"name": "StakeManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "10367:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1185,
												"nodeType": "Return",
												"src": "10360:19:5"
											}
										]
									},
									"functionSelector": "ca64f9e7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10318:2:5"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "10341:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10340:9:5"
									},
									"scope": 1428,
									"src": "10294:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "10446:36:5",
										"statements": [
											{
												"expression": {
													"id": 1192,
													"name": "RepManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "10464:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1193,
												"nodeType": "Return",
												"src": "10457:17:5"
											}
										]
									},
									"functionSelector": "0855d151",
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRepManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10415:2:5"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "10438:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:9:5"
									},
									"scope": 1428,
									"src": "10393:89:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "10544:39:5",
										"statements": [
											{
												"expression": {
													"id": 1200,
													"name": "RewardManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 737,
													"src": "10562:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1201,
												"nodeType": "Return",
												"src": "10555:20:5"
											}
										]
									},
									"functionSelector": "04e76c8f",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10513:2:5"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10536:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10536:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10535:9:5"
									},
									"scope": 1428,
									"src": "10488:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "10650:40:5",
										"statements": [
											{
												"expression": {
													"id": 1208,
													"name": "SpottingSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 741,
													"src": "10668:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1209,
												"nodeType": "Return",
												"src": "10661:21:5"
											}
										]
									},
									"functionSelector": "b45d9d8d",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSpottingSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10619:2:5"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "10642:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10642:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10641:9:5"
									},
									"scope": 1428,
									"src": "10593:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "10755:42:5",
										"statements": [
											{
												"expression": {
													"id": 1216,
													"name": "FormattingSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 743,
													"src": "10773:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1215,
												"id": 1217,
												"nodeType": "Return",
												"src": "10766:23:5"
											}
										]
									},
									"functionSelector": "68bd3615",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFormattingSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10724:2:5"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "10747:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10747:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10746:9:5"
									},
									"scope": 1428,
									"src": "10696:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "10857:31:5",
										"statements": [
											{
												"expression": {
													"id": 1224,
													"name": "sFuel",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "10875:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1223,
												"id": 1225,
												"nodeType": "Return",
												"src": "10868:12:5"
											}
										]
									},
									"functionSelector": "557c1abe",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getsFuelSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10826:2:5"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "10849:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10849:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10848:9:5"
									},
									"scope": 1428,
									"src": "10803:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "10948:31:5",
										"statements": [
											{
												"expression": {
													"id": 1232,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 731,
													"src": "10966:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1233,
												"nodeType": "Return",
												"src": "10959:12:5"
											}
										]
									},
									"functionSelector": "2e2f93f3",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExordeToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10917:2:5"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "10940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10939:9:5"
									},
									"scope": 1428,
									"src": "10894:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "11114:46:5",
										"statements": [
											{
												"expression": {
													"id": 1240,
													"name": "SPOT_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 628,
													"src": "11132:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1239,
												"id": 1241,
												"nodeType": "Return",
												"src": "11125:27:5"
											}
										]
									},
									"functionSelector": "9d1f2ada",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11083:2:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "11106:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11106:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11105:9:5"
									},
									"scope": 1428,
									"src": "11050:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "11224:40:5",
										"statements": [
											{
												"expression": {
													"id": 1248,
													"name": "SPOT_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "11242:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1247,
												"id": 1249,
												"nodeType": "Return",
												"src": "11235:21:5"
											}
										]
									},
									"functionSelector": "ff622dda",
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11193:2:5"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "11216:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11216:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11215:9:5"
									},
									"scope": 1428,
									"src": "11166:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "11345:57:5",
										"statements": [
											{
												"expression": {
													"id": 1256,
													"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "11363:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1255,
												"id": 1257,
												"nodeType": "Return",
												"src": "11356:38:5"
											}
										]
									},
									"functionSelector": "bd40ef4c",
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11314:2:5"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "11337:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11337:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11336:9:5"
									},
									"scope": 1428,
									"src": "11270:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "11483:57:5",
										"statements": [
											{
												"expression": {
													"id": 1264,
													"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 642,
													"src": "11501:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1265,
												"nodeType": "Return",
												"src": "11494:38:5"
											}
										]
									},
									"functionSelector": "dfeceed7",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11452:2:5"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "11475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11474:9:5"
									},
									"scope": 1428,
									"src": "11408:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "11616:52:5",
										"statements": [
											{
												"expression": {
													"id": 1272,
													"name": "SPOT_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "11634:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1273,
												"nodeType": "Return",
												"src": "11627:33:5"
											}
										]
									},
									"functionSelector": "3692616a",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11585:2:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "11608:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11608:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11607:9:5"
									},
									"scope": 1428,
									"src": "11546:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "11744:52:5",
										"statements": [
											{
												"expression": {
													"id": 1280,
													"name": "SPOT_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 648,
													"src": "11762:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1281,
												"nodeType": "Return",
												"src": "11755:33:5"
											}
										]
									},
									"functionSelector": "72e54030",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11713:2:5"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "11736:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11735:9:5"
									},
									"scope": 1428,
									"src": "11674:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "11863:43:5",
										"statements": [
											{
												"expression": {
													"id": 1288,
													"name": "SPOT_MIN_REP_Data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 664,
													"src": "11881:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1289,
												"nodeType": "Return",
												"src": "11874:24:5"
											}
										]
									},
									"functionSelector": "acbe4f3e",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REP_Data",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11832:2:5"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "11855:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11854:9:5"
									},
									"scope": 1428,
									"src": "11802:104:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "11976:46:5",
										"statements": [
											{
												"expression": {
													"id": 1296,
													"name": "SPOT_MIN_REWARD_Data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 656,
													"src": "11994:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1297,
												"nodeType": "Return",
												"src": "11987:27:5"
											}
										]
									},
									"functionSelector": "2c1480c0",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REWARD_Data",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11945:2:5"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "11968:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11968:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11967:9:5"
									},
									"scope": 1428,
									"src": "11912:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "12102:56:5",
										"statements": [
											{
												"expression": {
													"id": 1304,
													"name": "SPOT_INTER_ALLOCATION_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "12120:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1305,
												"nodeType": "Return",
												"src": "12113:37:5"
											}
										]
									},
									"functionSelector": "c4a306f8",
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_INTER_ALLOCATION_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12071:2:5"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "12094:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12094:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12093:9:5"
									},
									"scope": 1428,
									"src": "12028:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "12224:45:5",
										"statements": [
											{
												"expression": {
													"id": 1312,
													"name": "SPOT_TOGGLE_ENABLED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 670,
													"src": "12242:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1313,
												"nodeType": "Return",
												"src": "12235:26:5"
											}
										]
									},
									"functionSelector": "4e87c5a8",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_TOGGLE_ENABLED",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12196:2:5"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "12219:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12219:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12218:6:5"
									},
									"scope": 1428,
									"src": "12164:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "12346:49:5",
										"statements": [
											{
												"expression": {
													"id": 1320,
													"name": "SPOT_TIMEFRAME_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 675,
													"src": "12364:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1321,
												"nodeType": "Return",
												"src": "12357:30:5"
											}
										]
									},
									"functionSelector": "0f78cc76",
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_TIMEFRAME_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12315:2:5"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "12338:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12338:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12337:9:5"
									},
									"scope": 1428,
									"src": "12279:116:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "12480:57:5",
										"statements": [
											{
												"expression": {
													"id": 1328,
													"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 678,
													"src": "12498:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1329,
												"nodeType": "Return",
												"src": "12491:38:5"
											}
										]
									},
									"functionSelector": "b38e885e",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12449:2:5"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "12472:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12471:9:5"
									},
									"scope": 1428,
									"src": "12405:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "12624:59:5",
										"statements": [
											{
												"expression": {
													"id": 1336,
													"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 681,
													"src": "12642:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1337,
												"nodeType": "Return",
												"src": "12635:40:5"
											}
										]
									},
									"functionSelector": "be250988",
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12593:2:5"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "12616:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12616:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12615:9:5"
									},
									"scope": 1428,
									"src": "12547:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "12751:44:5",
										"statements": [
											{
												"expression": {
													"id": 1344,
													"name": "SPOT_NB_TIMEFRAMES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 684,
													"src": "12769:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1345,
												"nodeType": "Return",
												"src": "12762:25:5"
											}
										]
									},
									"functionSelector": "e66d543a",
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_NB_TIMEFRAMES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12720:2:5"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "12743:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12742:9:5"
									},
									"scope": 1428,
									"src": "12689:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "12867:48:5",
										"statements": [
											{
												"expression": {
													"id": 1352,
													"name": "MAX_SUCCEEDING_NOVOTES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "12885:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1351,
												"id": 1353,
												"nodeType": "Return",
												"src": "12878:29:5"
											}
										]
									},
									"functionSelector": "9fb491f6",
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_SUCCEEDING_NOVOTES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12836:2:5"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "12859:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12859:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12858:9:5"
									},
									"scope": 1428,
									"src": "12801:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "12998:59:5",
										"statements": [
											{
												"expression": {
													"id": 1360,
													"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "13016:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1361,
												"nodeType": "Return",
												"src": "13009:40:5"
											}
										]
									},
									"functionSelector": "0f1f0ffe",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_NOVOTE_REGISTRATION_WAIT_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12967:2:5"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "12990:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12990:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12989:9:5"
									},
									"scope": 1428,
									"src": "12921:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "13196:48:5",
										"statements": [
											{
												"expression": {
													"id": 1368,
													"name": "FORMAT_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "13214:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1367,
												"id": 1369,
												"nodeType": "Return",
												"src": "13207:29:5"
											}
										]
									},
									"functionSelector": "57716b7f",
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13165:2:5"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "13188:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13188:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13187:9:5"
									},
									"scope": 1428,
									"src": "13130:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "13310:42:5",
										"statements": [
											{
												"expression": {
													"id": 1376,
													"name": "FORMAT_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 707,
													"src": "13328:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1377,
												"nodeType": "Return",
												"src": "13321:23:5"
											}
										]
									},
									"functionSelector": "23aea691",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13279:2:5"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "13302:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13301:9:5"
									},
									"scope": 1428,
									"src": "13250:102:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "13435:59:5",
										"statements": [
											{
												"expression": {
													"id": 1384,
													"name": "FORMAT_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "13453:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1385,
												"nodeType": "Return",
												"src": "13446:40:5"
											}
										]
									},
									"functionSelector": "166ff4c7",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13404:2:5"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "13427:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13427:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13426:9:5"
									},
									"scope": 1428,
									"src": "13358:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "13577:59:5",
										"statements": [
											{
												"expression": {
													"id": 1392,
													"name": "FORMAT_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "13595:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1391,
												"id": 1393,
												"nodeType": "Return",
												"src": "13588:40:5"
											}
										]
									},
									"functionSelector": "70d29bdf",
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13546:2:5"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "13569:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13569:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13568:9:5"
									},
									"scope": 1428,
									"src": "13500:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "13714:54:5",
										"statements": [
											{
												"expression": {
													"id": 1400,
													"name": "FORMAT_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 710,
													"src": "13732:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1401,
												"nodeType": "Return",
												"src": "13725:35:5"
											}
										]
									},
									"functionSelector": "a02f9914",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13683:2:5"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "13706:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13706:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13705:9:5"
									},
									"scope": 1428,
									"src": "13642:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "13846:54:5",
										"statements": [
											{
												"expression": {
													"id": 1408,
													"name": "FORMAT_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 713,
													"src": "13864:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1409,
												"nodeType": "Return",
												"src": "13857:35:5"
											}
										]
									},
									"functionSelector": "02c5a49f",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13815:2:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "13838:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13837:9:5"
									},
									"scope": 1428,
									"src": "13774:126:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "13972:48:5",
										"statements": [
											{
												"expression": {
													"id": 1416,
													"name": "FORMAT_MIN_REWARD_Data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "13990:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1417,
												"nodeType": "Return",
												"src": "13983:29:5"
											}
										]
									},
									"functionSelector": "77ad500c",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_MIN_REWARD_Data",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13941:2:5"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "13964:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13964:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13963:9:5"
									},
									"scope": 1428,
									"src": "13906:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "14089:45:5",
										"statements": [
											{
												"expression": {
													"id": 1424,
													"name": "FORMAT_MIN_REP_Data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 729,
													"src": "14107:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1425,
												"nodeType": "Return",
												"src": "14100:26:5"
											}
										]
									},
									"functionSelector": "f250ae2d",
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_FORMAT_MIN_REP_Data",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14058:2:5"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "14081:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14081:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14080:9:5"
									},
									"scope": 1428,
									"src": "14026:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1429,
							"src": "351:13786:5"
						}
					],
					"src": "39:14100:5"
				},
				"id": 5
			}
		}
	}
}