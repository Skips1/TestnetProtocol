{
	"id": "34e659635d75f391c6d284559bd763b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"worksystems/Parameters.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity 0.8.0;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n@title Parameters  v0.1\r\n@author Mathias Dail\r\n*/\r\ncontract Parameters is Ownable {\r\n    // Default values\r\n    //////////////// GENERAL SYSTEM PARAMTERS\r\n    uint256 public MAX_TOTAL_WORKERS = 1000;\r\n    uint256 public VOTE_QUORUM  = 50;   \r\n    uint256 public MAX_UPDATE_ITERATIONS  = 50;   \r\n    uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000;   \r\n    //////////////// SPOTTING RELATED PARAMETERS\r\n    uint256 public SPOT_DATA_BATCH_SIZE = 1;\r\n    uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2;   \r\n    uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4;\r\n    uint256 public SPOT_COMMIT_ROUND_DURATION = 180;\r\n    uint256 public SPOT_REVEAL_ROUND_DURATION = 180;       \r\n    uint256 public SPOT_MIN_REWARD_SpotData = 1 * (10 ** 15);\r\n    uint256 public SPOT_MIN_REP_SpotData  = 10 * (10 ** 15);\r\n    uint256 public SPOT_MIN_REWARD_DataValidation = 1 * (10 ** 15);\r\n    uint256 public SPOT_MIN_REP_DataValidation  = 10 * (10 ** 15);\r\n    // SPOT DATA LIMITATIONS\r\n    uint256 public SPOT_INTER_ALLOCATION_DURATION = 400;\r\n    bool public SPOT_TOGGLE_ENABLED = true;\r\n    uint256 public SPOT_TIMEFRAME_DURATION  = 15*60; //15 minutes\r\n    uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000;\r\n    uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25;\r\n    uint256 public SPOT_NB_TIMEFRAMES = 4;\r\n    uint256 public MAX_SUCCEEDING_NOVOTES  = 3;    \r\n    uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600;    // in seconds\r\n    //////////////// Compliance RELATED PARAMETERS\r\n    uint256 public COMPLIANCE_DATA_BATCH_SIZE = 1; \r\n    uint256 public COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = 2; \r\n    uint256 public COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = 4;   \r\n    uint256 public COMPLIANCE_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public COMPLIANCE_COMMIT_ROUND_DURATION = 400;\r\n    uint256 public COMPLIANCE_REVEAL_ROUND_DURATION = 180;  \r\n    uint256 public COMPLIANCE_MIN_REWARD_DataValidation = 1 * (10 ** 15);\r\n    uint256 public COMPLIANCE_MIN_REP_DataValidation  = 10 * (10 ** 15);\r\n    //////////////// Compliance RELATED PARAMETERS\r\n    uint256 public INDEXING_DATA_BATCH_SIZE = 1; \r\n    uint256 public INDEXING_MIN_CONSENSUS_WORKER_COUNT  = 2; \r\n    uint256 public INDEXING_MAX_CONSENSUS_WORKER_COUNT  = 4;   \r\n    uint256 public INDEXING_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public INDEXING_COMMIT_ROUND_DURATION = 400;\r\n    uint256 public INDEXING_REVEAL_ROUND_DURATION = 180;  \r\n    uint256 public INDEXING_MIN_REWARD_DataValidation = 1 * (10 ** 15);\r\n    uint256 public INDEXING_MIN_REP_DataValidation  = 10 * (10 ** 15);\r\n    //////////////// ACHIVING RELATED PARAMETERS\r\n    uint256 public ARCHIVING_DATA_BATCH_SIZE = 1; \r\n    uint256 public ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = 2; \r\n    uint256 public ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = 4;   \r\n    uint256 public ARCHIVING_MIN_STAKE = 25 * (10 ** 18); \r\n    uint256 public ARCHIVING_COMMIT_ROUND_DURATION = 400;\r\n    uint256 public ARCHIVING_REVEAL_ROUND_DURATION = 180;  \r\n    uint256 public ARCHIVING_MIN_REWARD_DataValidation = 1 * (10 ** 15);\r\n    uint256 public ARCHIVING_MIN_REP_DataValidation  = 10 * (10 ** 15);\r\n    //////////////// CONTRACTS\r\n    address public token;\r\n    address public StakeManager;\r\n    address public Reputation;\r\n    address public RepManager;\r\n    address public RewardManager;    \r\n    address public AddressManager;\r\n    address public sFuel;\r\n\r\n    address public SpottingSystem;\r\n    address public ComplianceSystem;\r\n    address public IndexingSystem;\r\n    address public ArchivingSystem;\r\n    \r\n\r\n    \r\n// for other contracts\r\n// interface IParametersManager {\r\n//       // -------------- GETTERS : GENERAL --------------------\r\n//     function getMaxTotalWorkers() external view returns(uint256);\r\n//     function getVoteQuorum() external view returns(uint256);\r\n//     function get_MAX_UPDATE_ITERATIONS() external view returns(uint256);\r\n//     function get_MAX_CONTRACT_STORED_BATCHES() external view returns(uint256);\r\n//     function get_MAX_SUCCEEDING_NOVOTES() external view returns(uint256);\r\n//     function get_NOVOTE_REGISTRATION_WAIT_DURATION() external view returns(uint256);\r\n//     // -------------- GETTERS : ADDRESSES --------------------    \r\n//     function getStakeManager() external view returns(address);\r\n//     function getRepManager() external view returns(address);\r\n//     function getReputationSystem() external view returns(address);\r\n//     function getAddressManager() external view returns(address);\r\n//     function getRewardManager() external view returns(address);\r\n//     function getArchivingSystem() external view returns(address);\r\n//     function getIndexingSystem() external view returns(address);\r\n//     function getSpottingSystem() external view returns(address);\r\n//     function getComplianceSystem() external view returns(address);\r\n//     function getsFuelSystem() external view returns(address);\r\n//     function getExordeToken() external view returns(address);\r\n//     // -------------- GETTERS : SPOTTING --------------------\r\n//     function get_SPOT_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_SPOT_MIN_STAKE() external view returns(uint256);\r\n//     function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_SPOT_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_SPOT_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_SPOT_MIN_REP_SpotData() external view returns(uint256);\r\n//     function get_SPOT_MIN_REWARD_SpotData() external view returns(uint256);\r\n//     function get_SPOT_MIN_REP_DataValidation() external view returns(uint256);\r\n//     function get_SPOT_MIN_REWARD_DataValidationData() external view returns(uint256);\r\n//     function get_SPOT_INTER_ALLOCATION_DURATION() external view returns(uint256);\r\n//     function get_SPOT_TOGGLE_ENABLED() external view returns(bool);\r\n//     function get_SPOT_TIMEFRAME_DURATION() external view returns(uint256);\r\n//     function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() external view returns(uint256);\r\n//     function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() external view returns(uint256);\r\n//     function get_SPOT_NB_TIMEFRAMES() external view returns(uint256);\r\n//     // -------------- GETTERS : Compliance --------------------\r\n//     function get_COMPLIANCE_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_COMPLIANCE_MIN_STAKE() external view returns(uint256);\r\n//     function get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_COMPLIANCE_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_COMPLIANCE_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_COMPLIANCE_MIN_REWARD_DataValidation() external view returns(uint256);\r\n//     function get_COMPLIANCE_MIN_REP_DataValidation() external view returns(uint256);\r\n//     // -------------- GETTERS : Indexing --------------------\r\n//     function get_INDEXING_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_INDEXING_MIN_STAKE() external view returns(uint256);\r\n//     function get_INDEXING_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_INDEXING_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_INDEXING_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_INDEXING_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_INDEXING_MIN_REWARD_DataValidation() external view returns(uint256);\r\n//     function get_INDEXING_MIN_REP_DataValidation() external view returns(uint256);\r\n//     // -------------- GETTERS : Archiving --------------------\r\n//     function get_ARCHIVING_DATA_BATCH_SIZE() external view returns(uint256);\r\n//     function get_ARCHIVING_MIN_STAKE() external view returns(uint256);\r\n//     function get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT() external view returns(uint256);\r\n//     function get_ARCHIVING_COMMIT_ROUND_DURATION() external view returns(uint256);\r\n//     function get_ARCHIVING_REVEAL_ROUND_DURATION() external view returns(uint256);\r\n//     function get_ARCHIVING_MIN_REWARD_DataValidation() external view returns(uint256);\r\n//     function get_ARCHIVING_MIN_REP_DataValidation() external view returns(uint256);\r\n// }\r\n    function destroyContract() public onlyOwner {\r\n        selfdestruct(payable(owner()));\r\n    }\r\n    \r\n    function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            MAX_TOTAL_WORKERS = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            VOTE_QUORUM  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            MAX_UPDATE_ITERATIONS  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            MAX_CONTRACT_STORED_BATCHES  = uintValue;\r\n        }\r\n    }\r\n\r\n    function updateContractsAddresses(address StakeManager_, address RepManager_, address Reputation_, address RewardManager_, address AddressManager_,\r\n                                      address SpottingSystem_, address ComplianceSystem_, address IndexingSystem_, address ArchivingSystem_,\r\n                                      address sFuel_, address token_) public  onlyOwner {\r\n        if(StakeManager_ != address(0)){\r\n            StakeManager = StakeManager_;\r\n        }\r\n        if(RepManager_ != address(0)){\r\n            RepManager = RepManager_;\r\n        }\r\n        if(Reputation_ != address(0)){\r\n            Reputation = Reputation_;\r\n        }\r\n        if(RewardManager_ != address(0)){\r\n            RewardManager = RewardManager_;\r\n        }\r\n        if(AddressManager_ != address(0)){\r\n            AddressManager = AddressManager_;\r\n        }\r\n        if(ComplianceSystem_ != address(0)){\r\n            ComplianceSystem = ComplianceSystem_;\r\n        }\r\n        if(SpottingSystem_ != address(0)){\r\n            SpottingSystem = SpottingSystem_;\r\n        }\r\n        if(IndexingSystem_ != address(0)){\r\n            IndexingSystem = IndexingSystem_;\r\n        }\r\n        if(ArchivingSystem_ != address(0)){\r\n            ArchivingSystem = ArchivingSystem_;\r\n        }\r\n        if(sFuel_ != address(0)){\r\n            sFuel = sFuel_;\r\n        }\r\n        if(token_ != address(0)){\r\n            token = token_;\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            SPOT_DATA_BATCH_SIZE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            SPOT_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            SPOT_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            SPOT_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            SPOT_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            SPOT_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            SPOT_MIN_REWARD_SpotData  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            SPOT_MIN_REP_SpotData  = uintValue;\r\n        }\r\n        if(ParameterIndex == 9){\r\n            SPOT_MIN_REWARD_DataValidation  = uintValue;\r\n        }\r\n        if(ParameterIndex == 10){\r\n            SPOT_MIN_REP_DataValidation  = uintValue;\r\n        }\r\n        // Spotting DataInput Management system\r\n        if(ParameterIndex == 11){\r\n            SPOT_INTER_ALLOCATION_DURATION = uintValue;\r\n        }\r\n        if(ParameterIndex == 12){\r\n            SPOT_TOGGLE_ENABLED = boolValue;\r\n        }\r\n        if(ParameterIndex == 13){\r\n            SPOT_TIMEFRAME_DURATION = uintValue;\r\n        }\r\n        if(ParameterIndex == 14){\r\n            SPOT_GLOBAL_MAX_SPOT_PER_PERIOD = uintValue;\r\n        }\r\n        if(ParameterIndex == 15){\r\n            SPOT_MAX_SPOT_PER_USER_PER_PERIOD = uintValue;\r\n        }\r\n        if(ParameterIndex == 16){\r\n            SPOT_NB_TIMEFRAMES = uintValue;\r\n        }\r\n        if(ParameterIndex == 17){\r\n            MAX_SUCCEEDING_NOVOTES = uintValue;\r\n        }\r\n        if(ParameterIndex == 18){\r\n            NOVOTE_REGISTRATION_WAIT_DURATION = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    function updateComplianceParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            COMPLIANCE_DATA_BATCH_SIZE = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            COMPLIANCE_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            COMPLIANCE_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            COMPLIANCE_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            COMPLIANCE_MIN_REP_DataValidation  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            COMPLIANCE_MIN_REWARD_DataValidation  = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    function updateIndexingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            INDEXING_DATA_BATCH_SIZE = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            INDEXING_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            INDEXING_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            INDEXING_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            INDEXING_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            INDEXING_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            INDEXING_MIN_REP_DataValidation  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            INDEXING_MIN_REWARD_DataValidation  = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    function updateArchivingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r\n        if(ParameterIndex == 1){\r\n            ARCHIVING_DATA_BATCH_SIZE = uintValue;\r\n        }\r\n        if(ParameterIndex == 2){\r\n            ARCHIVING_MIN_STAKE  = uintValue;\r\n        }\r\n        if(ParameterIndex == 3){\r\n            ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 4){\r\n            ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = uintValue;\r\n        }\r\n        if(ParameterIndex == 5){\r\n            ARCHIVING_COMMIT_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 6){\r\n            ARCHIVING_REVEAL_ROUND_DURATION  = uintValue;\r\n        }\r\n        if(ParameterIndex == 7){\r\n            ARCHIVING_MIN_REP_DataValidation  = uintValue;\r\n        }\r\n        if(ParameterIndex == 8){\r\n            ARCHIVING_MIN_REWARD_DataValidation  = uintValue;\r\n        }\r\n    }\r\n\r\n\r\n    // -------------- GETTERS : GENERAL --------------------\r\n    function getMaxTotalWorkers() public view returns(uint256){\r\n        return MAX_TOTAL_WORKERS;\r\n    }\r\n    function getVoteQuorum() public view returns(uint256){\r\n        return VOTE_QUORUM;\r\n    }\r\n    function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r\n        return MAX_UPDATE_ITERATIONS;\r\n    }\r\n    function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r\n        return MAX_CONTRACT_STORED_BATCHES;\r\n    }\r\n\r\n    // -------------- GETTERS : ADDRESSES --------------------    \r\n    function getStakeManager() public view returns(address){\r\n        return StakeManager;\r\n    }\r\n    function getRepManager() public view returns(address){\r\n        return RepManager;\r\n    }\r\n    function getReputationSystem() public view returns(address){\r\n        return Reputation;\r\n    }\r\n    function getAddressManager() public view returns(address){\r\n        return AddressManager;\r\n    }\r\n    function getRewardManager() public view returns(address){\r\n        return RewardManager;\r\n    }    \r\n    function getSpottingSystem() public view returns(address){\r\n        return SpottingSystem;\r\n    }\r\n    function getComplianceSystem() public view returns(address){\r\n        return ComplianceSystem;\r\n    }\r\n    function getIndexingSystem() public view returns(address){\r\n        return IndexingSystem;\r\n    }\r\n    function getArchivingSystem() public view returns(address){\r\n        return ArchivingSystem;\r\n    }\r\n    function getsFuelSystem() public view returns(address){\r\n        return sFuel;\r\n    }\r\n    function getExordeToken() public view returns(address){\r\n        return token;\r\n    }\r\n\r\n    // -------------- GETTERS : SPOTTING --------------------\r\n    function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return SPOT_DATA_BATCH_SIZE;\r\n    }\r\n    function get_SPOT_MIN_STAKE() public view returns(uint256){\r\n        return SPOT_MIN_STAKE;\r\n    }\r\n    function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return SPOT_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return SPOT_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return SPOT_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return SPOT_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_SPOT_MIN_REP_SpotData() public view returns(uint256){\r\n        return SPOT_MIN_REP_SpotData;\r\n    }\r\n    function get_SPOT_MIN_REWARD_SpotData() public view returns(uint256){\r\n        return SPOT_MIN_REWARD_SpotData;\r\n    }\r\n    function get_SPOT_MIN_REP_DataValidation() public view returns(uint256){\r\n        return SPOT_MIN_REP_DataValidation;\r\n    }\r\n    function get_SPOT_MIN_REWARD_DataValidation() public view returns(uint256){\r\n        return SPOT_MIN_REWARD_DataValidation;\r\n    }\r\n    function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r\n        return SPOT_INTER_ALLOCATION_DURATION;\r\n    }\r\n    function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r\n        return SPOT_TOGGLE_ENABLED;\r\n    }    \r\n    function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r\n        return SPOT_TIMEFRAME_DURATION;\r\n    }    \r\n    function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r\n        return SPOT_GLOBAL_MAX_SPOT_PER_PERIOD;\r\n    }    \r\n    function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r\n        return SPOT_MAX_SPOT_PER_USER_PER_PERIOD;\r\n    }\r\n    function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r\n        return SPOT_NB_TIMEFRAMES;\r\n    }\r\n    function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r\n        return MAX_SUCCEEDING_NOVOTES;\r\n    }\r\n    function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r\n        return NOVOTE_REGISTRATION_WAIT_DURATION;\r\n    }\r\n\r\n    // -------------- GETTERS : Compliance --------------------\r\n    function get_COMPLIANCE_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return COMPLIANCE_DATA_BATCH_SIZE;\r\n    }\r\n    function get_COMPLIANCE_MIN_STAKE() public view returns(uint256){\r\n        return COMPLIANCE_MIN_STAKE;\r\n    }\r\n    function get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_COMPLIANCE_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return COMPLIANCE_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_COMPLIANCE_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return COMPLIANCE_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_COMPLIANCE_MIN_REWARD_DataValidation() public view returns(uint256){\r\n        return COMPLIANCE_MIN_REWARD_DataValidation;\r\n    }\r\n    function get_COMPLIANCE_MIN_REP_DataValidation() public view returns(uint256){\r\n        return COMPLIANCE_MIN_REP_DataValidation;\r\n    }\r\n\r\n\r\n    // -------------- GETTERS : Indexing --------------------\r\n    function get_INDEXING_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return INDEXING_DATA_BATCH_SIZE;\r\n    }\r\n    function get_INDEXING_MIN_STAKE() public view returns(uint256){\r\n        return INDEXING_MIN_STAKE;\r\n    }\r\n    function get_INDEXING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return INDEXING_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_INDEXING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return INDEXING_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_INDEXING_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return INDEXING_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_INDEXING_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return INDEXING_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_INDEXING_MIN_REWARD_DataValidation() public view returns(uint256){\r\n        return INDEXING_MIN_REWARD_DataValidation;\r\n    }\r\n    function get_INDEXING_MIN_REP_DataValidation() public view returns(uint256){\r\n        return INDEXING_MIN_REP_DataValidation;\r\n    }\r\n\r\n\r\n    // -------------- GETTERS : Archiving --------------------\r\n    function get_ARCHIVING_DATA_BATCH_SIZE() public view returns(uint256){\r\n        return ARCHIVING_DATA_BATCH_SIZE;\r\n    }\r\n    function get_ARCHIVING_MIN_STAKE() public view returns(uint256){\r\n        return ARCHIVING_MIN_STAKE;\r\n    }\r\n    function get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return ARCHIVING_MIN_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r\n        return ARCHIVING_MAX_CONSENSUS_WORKER_COUNT;\r\n    }\r\n    function get_ARCHIVING_COMMIT_ROUND_DURATION() public view returns(uint256){\r\n        return ARCHIVING_COMMIT_ROUND_DURATION;\r\n    }\r\n    function get_ARCHIVING_REVEAL_ROUND_DURATION() public view returns(uint256){\r\n        return ARCHIVING_REVEAL_ROUND_DURATION;\r\n    }\r\n    function get_ARCHIVING_MIN_REWARD_DataValidation() public view returns(uint256){\r\n        return ARCHIVING_MIN_REWARD_DataValidation;\r\n    }\r\n    function get_ARCHIVING_MIN_REP_DataValidation() public view returns(uint256){\r\n        return ARCHIVING_MIN_REP_DataValidation;\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity 0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`.\n        // We also know that `k`, the position of the most significant bit, is such that `msb(a) = 2**k`.\n        // This gives `2**k < a <= 2**(k+1)` → `2**(k/2) <= sqrt(a) < 2 ** (k/2+1)`.\n        // Using an algorithm similar to the msb conmputation, we are able to compute `result = 2**(k/2)` which is a\n        // good first aproximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1;\n        uint256 x = a;\n        if (x >> 128 > 0) {\n            x >>= 128;\n            result <<= 64;\n        }\n        if (x >> 64 > 0) {\n            x >>= 64;\n            result <<= 32;\n        }\n        if (x >> 32 > 0) {\n            x >>= 32;\n            result <<= 16;\n        }\n        if (x >> 16 > 0) {\n            x >>= 16;\n            result <<= 8;\n        }\n        if (x >> 8 > 0) {\n            x >>= 8;\n            result <<= 4;\n        }\n        if (x >> 4 > 0) {\n            x >>= 4;\n            result <<= 2;\n        }\n        if (x >> 2 > 0) {\n            result <<= 1;\n        }\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = sqrt(a);\n        if (rounding == Rounding.Up && result * result < a) {\n            result += 1;\n        }\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity 0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity 0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:8826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b2260a02557e5ae81bfc6b7f2a4bbad4ff284b9320b02f22551b51e95da178cd64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2260a02557e5ae81bfc6b7f2a4bbad4ff284b9320b02f22551b51e95da178cd64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x26 EXP MUL SSTORE PUSH31 0x5AE81BFC6B7F2A4BBAD4FF284B9320B02F22551B51E95DA178CD64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "202:8624:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:8624:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b2260a02557e5ae81bfc6b7f2a4bbad4ff284b9320b02f22551b51e95da178cd64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x26 EXP MUL SSTORE PUSH31 0x5AE81BFC6B7F2A4BBAD4FF284B9320B02F22551B51E95DA178CD64736F6C63 NUMBER STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "202:8624:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 202,
									"end": 8826,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2260a02557e5ae81bfc6b7f2a4bbad4ff284b9320b02f22551b51e95da178cd64736f6c63430008000033",
									".code": [
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 202,
											"end": 8826,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cead2db02db5e2fd494b5c9b84b0a193411033d84cd23e888b93f01d44b1913a64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cead2db02db5e2fd494b5c9b84b0a193411033d84cd23e888b93f01d44b1913a64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xAD 0x2D 0xB0 0x2D 0xB5 0xE2 REVERT 0x49 0x4B 0x5C SWAP12 DUP5 0xB0 LOG1 SWAP4 COINBASE LT CALLER 0xD8 0x4C 0xD2 RETURNDATACOPY DUP9 DUP12 SWAP4 CREATE SAR DIFFICULTY 0xB1 SWAP2 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cead2db02db5e2fd494b5c9b84b0a193411033d84cd23e888b93f01d44b1913a64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xAD 0x2D 0xB0 0x2D 0xB5 0xE2 REVERT 0x49 0x4B 0x5C SWAP12 DUP5 0xB0 LOG1 SWAP4 COINBASE LT CALLER 0xD8 0x4C 0xD2 RETURNDATACOPY DUP9 DUP12 SWAP4 CREATE SAR DIFFICULTY 0xB1 SWAP2 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cead2db02db5e2fd494b5c9b84b0a193411033d84cd23e888b93f01d44b1913a64736f6c63430008000033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"worksystems/Parameters.sol": {
				"Parameters": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ARCHIVING_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AddressManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ArchivingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMPLIANCE_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ComplianceSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INDEXING_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "IndexingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_CONTRACT_STORED_BATCHES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SUCCEEDING_NOVOTES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TOTAL_WORKERS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_UPDATE_ITERATIONS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RepManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Reputation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RewardManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_INTER_ALLOCATION_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REP_SpotData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_REWARD_SpotData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_NB_TIMEFRAMES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_TIMEFRAME_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SPOT_TOGGLE_ENABLED",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SpottingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VOTE_QUORUM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destroyContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAddressManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getArchivingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getComplianceSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getExordeToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getIndexingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxTotalWorkers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRepManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReputationSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSpottingSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVoteQuorum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_ARCHIVING_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_COMPLIANCE_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_INDEXING_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_CONTRACT_STORED_BATCHES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_SUCCEEDING_NOVOTES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_MAX_UPDATE_ITERATIONS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_NOVOTE_REGISTRATION_WAIT_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_COMMIT_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_DATA_BATCH_SIZE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_INTER_ALLOCATION_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MAX_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_CONSENSUS_WORKER_COUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REP_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REP_SpotData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REWARD_DataValidation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_REWARD_SpotData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_MIN_STAKE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_NB_TIMEFRAMES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_REVEAL_ROUND_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_TIMEFRAME_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_SPOT_TOGGLE_ENABLED",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getsFuelSystem",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sFuel",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateArchivingParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateComplianceParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "StakeManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "RepManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "Reputation_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "RewardManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "AddressManager_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "SpottingSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ComplianceSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "IndexingSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ArchivingSystem_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "sFuel_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token_",
									"type": "address"
								}
							],
							"name": "updateContractsAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateGeneralParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								}
							],
							"name": "updateIndexingParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ParameterIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "uintValue",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "boolValue",
									"type": "bool"
								}
							],
							"name": "updateSpottingParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Mathias Dail",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Parameters  v0.1",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"worksystems/Parameters.sol\":351:23360  contract Parameters is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"worksystems/Parameters.sol\":494:498  1000 */\n  0x03e8\n    /* \"worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n  0x01\n  sstore\n    /* \"worksystems/Parameters.sol\":535:537  50 */\n  0x32\n    /* \"worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n  0x02\n  sstore\n    /* \"worksystems/Parameters.sol\":587:589  50 */\n  0x32\n    /* \"worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n  0x03\n  sstore\n    /* \"worksystems/Parameters.sol\":645:651  200000 */\n  0x030d40\n    /* \"worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n  0x04\n  sstore\n    /* \"worksystems/Parameters.sol\":749:750  1 */\n  0x01\n    /* \"worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n  0x05\n  sstore\n    /* \"worksystems/Parameters.sol\":789:804  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n  0x06\n  sstore\n    /* \"worksystems/Parameters.sol\":862:863  2 */\n  0x02\n    /* \"worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x07\n  sstore\n    /* \"worksystems/Parameters.sol\":923:924  4 */\n  0x04\n    /* \"worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x08\n  sstore\n    /* \"worksystems/Parameters.sol\":975:978  180 */\n  0xb4\n    /* \"worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n  0x09\n  sstore\n    /* \"worksystems/Parameters.sol\":1029:1032  180 */\n  0xb4\n    /* \"worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n  0x0a\n  sstore\n    /* \"worksystems/Parameters.sol\":1088:1102  1 * (10 ** 15) */\n  0x038d7ea4c68000\n    /* \"worksystems/Parameters.sol\":1046:1102  uint256 public SPOT_MIN_REWARD_SpotData = 1 * (10 ** 15) */\n  0x0b\n  sstore\n    /* \"worksystems/Parameters.sol\":1149:1164  10 * (10 ** 15) */\n  0x2386f26fc10000\n    /* \"worksystems/Parameters.sol\":1109:1164  uint256 public SPOT_MIN_REP_SpotData  = 10 * (10 ** 15) */\n  0x0c\n  sstore\n    /* \"worksystems/Parameters.sol\":1219:1233  1 * (10 ** 15) */\n  0x038d7ea4c68000\n    /* \"worksystems/Parameters.sol\":1171:1233  uint256 public SPOT_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n  0x0d\n  sstore\n    /* \"worksystems/Parameters.sol\":1286:1301  10 * (10 ** 15) */\n  0x2386f26fc10000\n    /* \"worksystems/Parameters.sol\":1240:1301  uint256 public SPOT_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n  0x0e\n  sstore\n    /* \"worksystems/Parameters.sol\":1386:1389  400 */\n  0x0190\n    /* \"worksystems/Parameters.sol\":1338:1389  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n  0x0f\n  sstore\n    /* \"worksystems/Parameters.sol\":1430:1434  true */\n  0x01\n    /* \"worksystems/Parameters.sol\":1396:1434  bool public SPOT_TOGGLE_ENABLED = true */\n  0x10\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"worksystems/Parameters.sol\":1483:1488  15*60 */\n  0x0384\n    /* \"worksystems/Parameters.sol\":1441:1488  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n  0x11\n  sstore\n    /* \"worksystems/Parameters.sol\":1558:1562  1000 */\n  0x03e8\n    /* \"worksystems/Parameters.sol\":1508:1562  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n  0x12\n  sstore\n    /* \"worksystems/Parameters.sol\":1621:1623  25 */\n  0x19\n    /* \"worksystems/Parameters.sol\":1569:1623  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n  0x13\n  sstore\n    /* \"worksystems/Parameters.sol\":1666:1667  4 */\n  0x04\n    /* \"worksystems/Parameters.sol\":1630:1667  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n  0x14\n  sstore\n    /* \"worksystems/Parameters.sol\":1715:1716  3 */\n  0x03\n    /* \"worksystems/Parameters.sol\":1674:1716  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n  0x15\n  sstore\n    /* \"worksystems/Parameters.sol\":1779:1783  3600 */\n  0x0e10\n    /* \"worksystems/Parameters.sol\":1727:1783  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n  0x16\n  sstore\n    /* \"worksystems/Parameters.sol\":1903:1904  1 */\n  0x01\n    /* \"worksystems/Parameters.sol\":1859:1904  uint256 public COMPLIANCE_DATA_BATCH_SIZE = 1 */\n  0x17\n  sstore\n    /* \"worksystems/Parameters.sol\":1968:1969  2 */\n  0x02\n    /* \"worksystems/Parameters.sol\":1912:1969  uint256 public COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x18\n  sstore\n    /* \"worksystems/Parameters.sol\":2033:2034  4 */\n  0x04\n    /* \"worksystems/Parameters.sol\":1977:2034  uint256 public COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x19\n  sstore\n    /* \"worksystems/Parameters.sol\":2082:2097  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"worksystems/Parameters.sol\":2044:2097  uint256 public COMPLIANCE_MIN_STAKE = 25 * (10 ** 18) */\n  0x1a\n  sstore\n    /* \"worksystems/Parameters.sol\":2155:2158  400 */\n  0x0190\n    /* \"worksystems/Parameters.sol\":2105:2158  uint256 public COMPLIANCE_COMMIT_ROUND_DURATION = 400 */\n  0x1b\n  sstore\n    /* \"worksystems/Parameters.sol\":2215:2218  180 */\n  0xb4\n    /* \"worksystems/Parameters.sol\":2165:2218  uint256 public COMPLIANCE_REVEAL_ROUND_DURATION = 180 */\n  0x1c\n  sstore\n    /* \"worksystems/Parameters.sol\":2281:2295  1 * (10 ** 15) */\n  0x038d7ea4c68000\n    /* \"worksystems/Parameters.sol\":2227:2295  uint256 public COMPLIANCE_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n  0x1d\n  sstore\n    /* \"worksystems/Parameters.sol\":2354:2369  10 * (10 ** 15) */\n  0x2386f26fc10000\n    /* \"worksystems/Parameters.sol\":2302:2369  uint256 public COMPLIANCE_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n  0x1e\n  sstore\n    /* \"worksystems/Parameters.sol\":2470:2471  1 */\n  0x01\n    /* \"worksystems/Parameters.sol\":2428:2471  uint256 public INDEXING_DATA_BATCH_SIZE = 1 */\n  0x1f\n  sstore\n    /* \"worksystems/Parameters.sol\":2533:2534  2 */\n  0x02\n    /* \"worksystems/Parameters.sol\":2479:2534  uint256 public INDEXING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x20\n  sstore\n    /* \"worksystems/Parameters.sol\":2596:2597  4 */\n  0x04\n    /* \"worksystems/Parameters.sol\":2542:2597  uint256 public INDEXING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x21\n  sstore\n    /* \"worksystems/Parameters.sol\":2643:2658  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"worksystems/Parameters.sol\":2607:2658  uint256 public INDEXING_MIN_STAKE = 25 * (10 ** 18) */\n  0x22\n  sstore\n    /* \"worksystems/Parameters.sol\":2714:2717  400 */\n  0x0190\n    /* \"worksystems/Parameters.sol\":2666:2717  uint256 public INDEXING_COMMIT_ROUND_DURATION = 400 */\n  0x23\n  sstore\n    /* \"worksystems/Parameters.sol\":2772:2775  180 */\n  0xb4\n    /* \"worksystems/Parameters.sol\":2724:2775  uint256 public INDEXING_REVEAL_ROUND_DURATION = 180 */\n  0x24\n  sstore\n    /* \"worksystems/Parameters.sol\":2836:2850  1 * (10 ** 15) */\n  0x038d7ea4c68000\n    /* \"worksystems/Parameters.sol\":2784:2850  uint256 public INDEXING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n  0x25\n  sstore\n    /* \"worksystems/Parameters.sol\":2907:2922  10 * (10 ** 15) */\n  0x2386f26fc10000\n    /* \"worksystems/Parameters.sol\":2857:2922  uint256 public INDEXING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n  0x26\n  sstore\n    /* \"worksystems/Parameters.sol\":3022:3023  1 */\n  0x01\n    /* \"worksystems/Parameters.sol\":2979:3023  uint256 public ARCHIVING_DATA_BATCH_SIZE = 1 */\n  0x27\n  sstore\n    /* \"worksystems/Parameters.sol\":3086:3087  2 */\n  0x02\n    /* \"worksystems/Parameters.sol\":3031:3087  uint256 public ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n  0x28\n  sstore\n    /* \"worksystems/Parameters.sol\":3150:3151  4 */\n  0x04\n    /* \"worksystems/Parameters.sol\":3095:3151  uint256 public ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n  0x29\n  sstore\n    /* \"worksystems/Parameters.sol\":3198:3213  25 * (10 ** 18) */\n  0x015af1d78b58c40000\n    /* \"worksystems/Parameters.sol\":3161:3213  uint256 public ARCHIVING_MIN_STAKE = 25 * (10 ** 18) */\n  0x2a\n  sstore\n    /* \"worksystems/Parameters.sol\":3270:3273  400 */\n  0x0190\n    /* \"worksystems/Parameters.sol\":3221:3273  uint256 public ARCHIVING_COMMIT_ROUND_DURATION = 400 */\n  0x2b\n  sstore\n    /* \"worksystems/Parameters.sol\":3329:3332  180 */\n  0xb4\n    /* \"worksystems/Parameters.sol\":3280:3332  uint256 public ARCHIVING_REVEAL_ROUND_DURATION = 180 */\n  0x2c\n  sstore\n    /* \"worksystems/Parameters.sol\":3394:3408  1 * (10 ** 15) */\n  0x038d7ea4c68000\n    /* \"worksystems/Parameters.sol\":3341:3408  uint256 public ARCHIVING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n  0x2d\n  sstore\n    /* \"worksystems/Parameters.sol\":3466:3481  10 * (10 ** 15) */\n  0x2386f26fc10000\n    /* \"worksystems/Parameters.sol\":3415:3481  uint256 public ARCHIVING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n  0x2e\n  sstore\n    /* \"worksystems/Parameters.sol\":351:23360  contract Parameters is Ownable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  tag_6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"worksystems/Parameters.sol\":351:23360  contract Parameters is Ownable {\r... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"worksystems/Parameters.sol\":351:23360  contract Parameters is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"worksystems/Parameters.sol\":351:23360  contract Parameters is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a13725d\n      gt\n      tag_127\n      jumpi\n      dup1\n      0xcb3a2a88\n      gt\n      tag_128\n      jumpi\n      dup1\n      0xe6fdd4c0\n      gt\n      tag_129\n      jumpi\n      dup1\n      0xf5bec1ad\n      gt\n      tag_130\n      jumpi\n      dup1\n      0xfbf14851\n      gt\n      tag_131\n      jumpi\n      dup1\n      0xfbf14851\n      eq\n      tag_123\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_124\n      jumpi\n      dup1\n      0xff622dda\n      eq\n      tag_125\n      jumpi\n      dup1\n      0xfff5f946\n      eq\n      tag_126\n      jumpi\n      jump(tag_2)\n    tag_131:\n      dup1\n      0xf5bec1ad\n      eq\n      tag_119\n      jumpi\n      dup1\n      0xf67362fe\n      eq\n      tag_120\n      jumpi\n      dup1\n      0xf80de0a0\n      eq\n      tag_121\n      jumpi\n      dup1\n      0xfb50a473\n      eq\n      tag_122\n      jumpi\n      jump(tag_2)\n    tag_130:\n      dup1\n      0xee37f4a6\n      gt\n      tag_132\n      jumpi\n      dup1\n      0xee37f4a6\n      eq\n      tag_115\n      jumpi\n      dup1\n      0xf116c4e0\n      eq\n      tag_116\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_117\n      jumpi\n      dup1\n      0xf4e20b9c\n      eq\n      tag_118\n      jumpi\n      jump(tag_2)\n    tag_132:\n      dup1\n      0xe6fdd4c0\n      eq\n      tag_111\n      jumpi\n      dup1\n      0xe9704f81\n      eq\n      tag_112\n      jumpi\n      dup1\n      0xe992dca7\n      eq\n      tag_113\n      jumpi\n      dup1\n      0xea19733c\n      eq\n      tag_114\n      jumpi\n      jump(tag_2)\n    tag_129:\n      dup1\n      0xdfeceed7\n      gt\n      tag_133\n      jumpi\n      dup1\n      0xe3dfc0b2\n      gt\n      tag_134\n      jumpi\n      dup1\n      0xe3dfc0b2\n      eq\n      tag_107\n      jumpi\n      dup1\n      0xe5f14824\n      eq\n      tag_108\n      jumpi\n      dup1\n      0xe66d543a\n      eq\n      tag_109\n      jumpi\n      dup1\n      0xe68c9c30\n      eq\n      tag_110\n      jumpi\n      jump(tag_2)\n    tag_134:\n      dup1\n      0xdfeceed7\n      eq\n      tag_103\n      jumpi\n      dup1\n      0xe0de3d7c\n      eq\n      tag_104\n      jumpi\n      dup1\n      0xe168063c\n      eq\n      tag_105\n      jumpi\n      dup1\n      0xe3115d3c\n      eq\n      tag_106\n      jumpi\n      jump(tag_2)\n    tag_133:\n      dup1\n      0xd4efd2ba\n      gt\n      tag_135\n      jumpi\n      dup1\n      0xd4efd2ba\n      eq\n      tag_99\n      jumpi\n      dup1\n      0xd81109ce\n      eq\n      tag_100\n      jumpi\n      dup1\n      0xd8645d37\n      eq\n      tag_101\n      jumpi\n      dup1\n      0xdc7048c1\n      eq\n      tag_102\n      jumpi\n      jump(tag_2)\n    tag_135:\n      dup1\n      0xcb3a2a88\n      eq\n      tag_96\n      jumpi\n      dup1\n      0xd0eed967\n      eq\n      tag_97\n      jumpi\n      dup1\n      0xd1a89a46\n      eq\n      tag_98\n      jumpi\n      jump(tag_2)\n    tag_128:\n      dup1\n      0xabb10b9b\n      gt\n      tag_136\n      jumpi\n      dup1\n      0xbe250988\n      gt\n      tag_137\n      jumpi\n      dup1\n      0xc6eacbfe\n      gt\n      tag_138\n      jumpi\n      dup1\n      0xc6eacbfe\n      eq\n      tag_92\n      jumpi\n      dup1\n      0xc7761fab\n      eq\n      tag_93\n      jumpi\n      dup1\n      0xc95b53c5\n      eq\n      tag_94\n      jumpi\n      dup1\n      0xca64f9e7\n      eq\n      tag_95\n      jumpi\n      jump(tag_2)\n    tag_138:\n      dup1\n      0xbe250988\n      eq\n      tag_88\n      jumpi\n      dup1\n      0xbf09ff70\n      eq\n      tag_89\n      jumpi\n      dup1\n      0xbf34f749\n      eq\n      tag_90\n      jumpi\n      dup1\n      0xc4a306f8\n      eq\n      tag_91\n      jumpi\n      jump(tag_2)\n    tag_137:\n      dup1\n      0xb45d9d8d\n      gt\n      tag_139\n      jumpi\n      dup1\n      0xb45d9d8d\n      eq\n      tag_84\n      jumpi\n      dup1\n      0xb6118450\n      eq\n      tag_85\n      jumpi\n      dup1\n      0xb6c6ec02\n      eq\n      tag_86\n      jumpi\n      dup1\n      0xbd40ef4c\n      eq\n      tag_87\n      jumpi\n      jump(tag_2)\n    tag_139:\n      dup1\n      0xabb10b9b\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xac846e79\n      eq\n      tag_81\n      jumpi\n      dup1\n      0xb1562f67\n      eq\n      tag_82\n      jumpi\n      dup1\n      0xb38e885e\n      eq\n      tag_83\n      jumpi\n      jump(tag_2)\n    tag_136:\n      dup1\n      0x995adbdd\n      gt\n      tag_140\n      jumpi\n      dup1\n      0xa1a4575a\n      gt\n      tag_141\n      jumpi\n      dup1\n      0xa1a4575a\n      eq\n      tag_76\n      jumpi\n      dup1\n      0xa327181b\n      eq\n      tag_77\n      jumpi\n      dup1\n      0xa35b3b09\n      eq\n      tag_78\n      jumpi\n      dup1\n      0xab43e78d\n      eq\n      tag_79\n      jumpi\n      jump(tag_2)\n    tag_141:\n      dup1\n      0x995adbdd\n      eq\n      tag_72\n      jumpi\n      dup1\n      0x9a175938\n      eq\n      tag_73\n      jumpi\n      dup1\n      0x9d1f2ada\n      eq\n      tag_74\n      jumpi\n      dup1\n      0x9fb491f6\n      eq\n      tag_75\n      jumpi\n      jump(tag_2)\n    tag_140:\n      dup1\n      0x90d10b6e\n      gt\n      tag_142\n      jumpi\n      dup1\n      0x90d10b6e\n      eq\n      tag_68\n      jumpi\n      dup1\n      0x9279e9d4\n      eq\n      tag_69\n      jumpi\n      dup1\n      0x98a54e2b\n      eq\n      tag_70\n      jumpi\n      dup1\n      0x9904ed8d\n      eq\n      tag_71\n      jumpi\n      jump(tag_2)\n    tag_142:\n      dup1\n      0x8a13725d\n      eq\n      tag_65\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_66\n      jumpi\n      dup1\n      0x90cc59eb\n      eq\n      tag_67\n      jumpi\n      jump(tag_2)\n    tag_127:\n      dup1\n      0x49b46787\n      gt\n      tag_143\n      jumpi\n      dup1\n      0x728d23ab\n      gt\n      tag_144\n      jumpi\n      dup1\n      0x8360034d\n      gt\n      tag_145\n      jumpi\n      dup1\n      0x8724450f\n      gt\n      tag_146\n      jumpi\n      dup1\n      0x8724450f\n      eq\n      tag_61\n      jumpi\n      dup1\n      0x87ce6311\n      eq\n      tag_62\n      jumpi\n      dup1\n      0x893b2a76\n      eq\n      tag_63\n      jumpi\n      dup1\n      0x89b212d3\n      eq\n      tag_64\n      jumpi\n      jump(tag_2)\n    tag_146:\n      dup1\n      0x8360034d\n      eq\n      tag_57\n      jumpi\n      dup1\n      0x83cc6ef2\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x849f9f0a\n      eq\n      tag_59\n      jumpi\n      dup1\n      0x86b0b4c5\n      eq\n      tag_60\n      jumpi\n      jump(tag_2)\n    tag_145:\n      dup1\n      0x7a0ec25b\n      gt\n      tag_147\n      jumpi\n      dup1\n      0x7a0ec25b\n      eq\n      tag_53\n      jumpi\n      dup1\n      0x7a34da67\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x7d630cb0\n      eq\n      tag_55\n      jumpi\n      dup1\n      0x7e8603e9\n      eq\n      tag_56\n      jumpi\n      jump(tag_2)\n    tag_147:\n      dup1\n      0x728d23ab\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x72e54030\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x75dc6130\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x779231b2\n      eq\n      tag_52\n      jumpi\n      jump(tag_2)\n    tag_144:\n      dup1\n      0x557c1abe\n      gt\n      tag_148\n      jumpi\n      dup1\n      0x61879075\n      gt\n      tag_149\n      jumpi\n      dup1\n      0x61879075\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x6785f847\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x6a8e0ece\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_48\n      jumpi\n      jump(tag_2)\n    tag_149:\n      dup1\n      0x557c1abe\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x55a35f5c\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x5cb361f6\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x5d1c3182\n      eq\n      tag_44\n      jumpi\n      jump(tag_2)\n    tag_148:\n      dup1\n      0x4ed60b2a\n      gt\n      tag_150\n      jumpi\n      dup1\n      0x4ed60b2a\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x51912f29\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x531780bb\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x5492f302\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_150:\n      dup1\n      0x49b46787\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x4e5638f5\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x4e87c5a8\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_143:\n      dup1\n      0x2b0afab3\n      gt\n      tag_151\n      jumpi\n      dup1\n      0x3692616a\n      gt\n      tag_152\n      jumpi\n      dup1\n      0x42df5641\n      gt\n      tag_153\n      jumpi\n      dup1\n      0x42df5641\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x444d62b6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x463444b7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x484df80a\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_153:\n      dup1\n      0x3692616a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x36fc43fc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x386d0976\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x3968ec84\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_152:\n      dup1\n      0x2e2f93f3\n      gt\n      tag_154\n      jumpi\n      dup1\n      0x2e2f93f3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x30c0bb79\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x31911c91\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x34c37e21\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_154:\n      dup1\n      0x2b0afab3\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x2be05960\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x2bf8abb3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x2d09a8e3\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_151:\n      dup1\n      0x0a5a4c20\n      gt\n      tag_155\n      jumpi\n      dup1\n      0x175bf630\n      gt\n      tag_156\n      jumpi\n      dup1\n      0x175bf630\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x1d0fb88e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x29a47bc7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x29e3dd1f\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_156:\n      dup1\n      0x0a5a4c20\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x0b08bfd9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x0f1f0ffe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x0f78cc76\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_155:\n      dup1\n      0x06606d67\n      gt\n      tag_157\n      jumpi\n      dup1\n      0x06606d67\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0855d151\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x08e7f0db\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x092a5cce\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_157:\n      dup1\n      0x653ff8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0363a1bf\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x04e76c8f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_3:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"worksystems/Parameters.sol\":22263:22383  function get_ARCHIVING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_4:\n      tag_158\n      tag_163\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16800:16895  function getRewardManager() public view returns(address){\r... */\n    tag_5:\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3785:3816  address public ComplianceSystem */\n    tag_6:\n      tag_165\n      tag_170\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16501:16590  function getRepManager() public view returns(address){\r... */\n    tag_7:\n      tag_165\n      tag_173\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3341:3408  uint256 public ARCHIVING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_8:\n      tag_158\n      tag_176\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":8973:9066  function destroyContract() public onlyOwner {\r... */\n    tag_9:\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      stop\n        /* \"worksystems/Parameters.sol\":3161:3213  uint256 public ARCHIVING_MIN_STAKE = 25 * (10 ** 18) */\n    tag_10:\n      tag_158\n      tag_181\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18564:18688  function get_SPOT_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_11:\n      tag_158\n      tag_184\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19723:19859  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n    tag_12:\n      tag_158\n      tag_187\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19081:19197  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n    tag_13:\n      tag_158\n      tag_190\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1859:1904  uint256 public COMPLIANCE_DATA_BATCH_SIZE = 1 */\n    tag_14:\n      tag_158\n      tag_193\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n    tag_15:\n      tag_158\n      tag_196\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3613:3638  address public RepManager */\n    tag_16:\n      tag_165\n      tag_199\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22937:23069  function get_ARCHIVING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_17:\n      tag_158\n      tag_202\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20616:20750  function get_COMPLIANCE_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_18:\n      tag_158\n      tag_205\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2857:2922  uint256 public INDEXING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_19:\n      tag_158\n      tag_208\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2784:2850  uint256 public INDEXING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_20:\n      tag_158\n      tag_211\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":9562:10993  function updateContractsAddresses(address StakeManager_, address RepManager_, address Reputation_, address RewardManager_, address AddressManager_,\r... */\n    tag_21:\n      tag_178\n      tag_214\n      calldatasize\n      0x04\n      tag_215\n      jump\t// in\n    tag_214:\n      tag_216\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17414:17499  function getExordeToken() public view returns(address){\r... */\n    tag_22:\n      tag_165\n      tag_218\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18440:18558  function get_SPOT_MIN_REWARD_SpotData() public view returns(uint256){\r... */\n    tag_23:\n      tag_158\n      tag_221\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1977:2034  uint256 public COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_24:\n      tag_158\n      tag_224\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2227:2295  uint256 public COMPLIANCE_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_25:\n      tag_158\n      tag_227\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18066:18188  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_26:\n      tag_158\n      tag_230\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1396:1434  bool public SPOT_TOGGLE_ENABLED = true */\n    tag_27:\n      tag_232\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21913:22051  function get_INDEXING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_28:\n      tag_158\n      tag_237\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22651:22793  function get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_29:\n      tag_158\n      tag_240\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2044:2097  uint256 public COMPLIANCE_MIN_STAKE = 25 * (10 ** 18) */\n    tag_30:\n      tag_158\n      tag_243\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2479:2534  uint256 public INDEXING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_31:\n      tag_158\n      tag_246\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17218:17317  function getArchivingSystem() public view returns(address){\r... */\n    tag_32:\n      tag_165\n      tag_249\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20476:20610  function get_COMPLIANCE_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_33:\n      tag_158\n      tag_252\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":23221:23355  function get_ARCHIVING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_34:\n      tag_158\n      tag_255\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n    tag_35:\n      tag_158\n      tag_258\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18966:19071  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n    tag_36:\n      tag_232\n      tag_261\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2979:3023  uint256 public ARCHIVING_DATA_BATCH_SIZE = 1 */\n    tag_37:\n      tag_158\n      tag_264\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3645:3673  address public RewardManager */\n    tag_38:\n      tag_165\n      tag_267\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3221:3273  uint256 public ARCHIVING_COMMIT_ROUND_DURATION = 400 */\n    tag_39:\n      tag_158\n      tag_270\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16697:16794  function getAddressManager() public view returns(address){\r... */\n    tag_40:\n      tag_165\n      tag_273\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17323:17408  function getsFuelSystem() public view returns(address){\r... */\n    tag_41:\n      tag_165\n      tag_276\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":14870:15809  function updateArchivingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_42:\n      tag_178\n      tag_279\n      calldatasize\n      0x04\n      tag_280\n      jump\t// in\n    tag_279:\n      tag_281\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1109:1164  uint256 public SPOT_MIN_REP_SpotData  = 10 * (10 ** 15) */\n    tag_43:\n      tag_158\n      tag_283\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3031:3087  uint256 public ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_44:\n      tag_158\n      tag_286\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":9078:9554  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_45:\n      tag_178\n      tag_289\n      calldatasize\n      0x04\n      tag_280\n      jump\t// in\n    tag_289:\n      tag_290\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2105:2158  uint256 public COMPLIANCE_COMMIT_ROUND_DURATION = 400 */\n    tag_46:\n      tag_158\n      tag_292\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2302:2369  uint256 public COMPLIANCE_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_47:\n      tag_158\n      tag_295\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n      tag_178\n      tag_298\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1912:1969  uint256 public COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_49:\n      tag_158\n      tag_300\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18194:18316  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_50:\n      tag_158\n      tag_303\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":13930:14860  function updateIndexingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_51:\n      tag_178\n      tag_306\n      calldatasize\n      0x04\n      tag_280\n      jump\t// in\n    tag_306:\n      tag_307\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2607:2658  uint256 public INDEXING_MIN_STAKE = 25 * (10 ** 18) */\n    tag_52:\n      tag_158\n      tag_309\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17115:17212  function getIndexingSystem() public view returns(address){\r... */\n    tag_53:\n      tag_165\n      tag_312\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3684:3713  address public AddressManager */\n    tag_54:\n      tag_165\n      tag_315\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16084:16196  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n    tag_55:\n      tag_158\n      tag_318\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2724:2775  uint256 public INDEXING_REVEAL_ROUND_DURATION = 180 */\n    tag_56:\n      tag_158\n      tag_321\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3280:3332  uint256 public ARCHIVING_REVEAL_ROUND_DURATION = 180 */\n    tag_57:\n      tag_158\n      tag_324\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3547:3574  address public StakeManager */\n    tag_58:\n      tag_165\n      tag_327\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22057:22189  function get_INDEXING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_59:\n      tag_158\n      tag_330\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1240:1301  uint256 public SPOT_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_60:\n      tag_158\n      tag_333\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1171:1233  uint256 public SPOT_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_61:\n      tag_158\n      tag_336\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1441:1488  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n    tag_62:\n      tag_158\n      tag_339\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":23075:23215  function get_ARCHIVING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_63:\n      tag_158\n      tag_342\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20904:21040  function get_COMPLIANCE_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_64:\n      tag_158\n      tag_345\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21777:21907  function get_INDEXING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_65:\n      tag_158\n      tag_348\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_66:\n      tag_165\n      tag_351\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21641:21771  function get_INDEXING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_67:\n      tag_158\n      tag_354\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n    tag_68:\n      tag_158\n      tag_357\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22799:22931  function get_ARCHIVING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_69:\n      tag_158\n      tag_360\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":15881:15982  function getMaxTotalWorkers() public view returns(uint256){\r... */\n    tag_70:\n      tag_158\n      tag_363\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3581:3606  address public Reputation */\n    tag_71:\n      tag_165\n      tag_366\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22503:22645  function get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_72:\n      tag_158\n      tag_369\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2165:2218  uint256 public COMPLIANCE_REVEAL_ROUND_DURATION = 180 */\n    tag_73:\n      tag_158\n      tag_372\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17570:17680  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_74:\n      tag_158\n      tag_375\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19603:19717  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n    tag_75:\n      tag_158\n      tag_378\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21349:21489  function get_INDEXING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_76:\n      tag_158\n      tag_381\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n    tag_77:\n      tag_158\n      tag_384\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_78:\n      tag_158\n      tag_387\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3720:3740  address public sFuel */\n    tag_79:\n      tag_165\n      tag_390\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18322:18434  function get_SPOT_MIN_REP_SpotData() public view returns(uint256){\r... */\n    tag_80:\n      tag_158\n      tag_393\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3095:3151  uint256 public ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_81:\n      tag_158\n      tag_396\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":22389:22497  function get_ARCHIVING_MIN_STAKE() public view returns(uint256){\r... */\n    tag_82:\n      tag_158\n      tag_399\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19207:19339  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n    tag_83:\n      tag_158\n      tag_402\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16905:17002  function getSpottingSystem() public view returns(address){\r... */\n    tag_84:\n      tag_165\n      tag_405\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1630:1667  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n    tag_85:\n      tag_158\n      tag_408\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3859:3889  address public ArchivingSystem */\n    tag_86:\n      tag_165\n      tag_411\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17790:17922  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_87:\n      tag_158\n      tag_414\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19349:19485  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n    tag_88:\n      tag_158\n      tag_417\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1569:1623  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n    tag_89:\n      tag_158\n      tag_420\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21237:21343  function get_INDEXING_MIN_STAKE() public view returns(uint256){\r... */\n    tag_90:\n      tag_158\n      tag_423\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18830:18960  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n    tag_91:\n      tag_158\n      tag_426\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n    tag_92:\n      tag_158\n      tag_429\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n    tag_93:\n      tag_158\n      tag_432\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2428:2471  uint256 public INDEXING_DATA_BATCH_SIZE = 1 */\n    tag_94:\n      tag_158\n      tag_435\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16402:16495  function getStakeManager() public view returns(address){\r... */\n    tag_95:\n      tag_165\n      tag_438\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21113:21231  function get_INDEXING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_96:\n      tag_158\n      tag_441\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1727:1783  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n    tag_97:\n      tag_158\n      tag_444\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19932:20054  function get_COMPLIANCE_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_98:\n      tag_158\n      tag_447\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1674:1716  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n    tag_99:\n      tag_158\n      tag_450\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1046:1102  uint256 public SPOT_MIN_REWARD_SpotData = 1 * (10 ** 15) */\n    tag_100:\n      tag_158\n      tag_453\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3749:3778  address public SpottingSystem */\n    tag_101:\n      tag_165\n      tag_456\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20326:20470  function get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_102:\n      tag_158\n      tag_459\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17928:18060  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_103:\n      tag_158\n      tag_462\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1508:1562  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n    tag_104:\n      tag_158\n      tag_465\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":12972:13920  function updateComplianceParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_105:\n      tag_178\n      tag_468\n      calldatasize\n      0x04\n      tag_280\n      jump\t// in\n    tag_468:\n      tag_469\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16202:16326  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n    tag_106:\n      tag_158\n      tag_471\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20060:20170  function get_COMPLIANCE_MIN_STAKE() public view returns(uint256){\r... */\n    tag_107:\n      tag_158\n      tag_474\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":1338:1389  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n    tag_108:\n      tag_158\n      tag_477\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":19491:19597  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n    tag_109:\n      tag_158\n      tag_480\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":21495:21635  function get_INDEXING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_110:\n      tag_158\n      tag_483\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n    tag_111:\n      tag_158\n      tag_486\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2666:2717  uint256 public INDEXING_COMMIT_ROUND_DURATION = 400 */\n    tag_112:\n      tag_158\n      tag_489\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":16596:16691  function getReputationSystem() public view returns(address){\r... */\n    tag_113:\n      tag_165\n      tag_492\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":15988:16078  function getVoteQuorum() public view returns(uint256){\r... */\n    tag_114:\n      tag_158\n      tag_495\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":11013:12962  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n    tag_115:\n      tag_178\n      tag_498\n      calldatasize\n      0x04\n      tag_499\n      jump\t// in\n    tag_498:\n      tag_500\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20756:20898  function get_COMPLIANCE_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_116:\n      tag_158\n      tag_502\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n      tag_178\n      tag_505\n      calldatasize\n      0x04\n      tag_506\n      jump\t// in\n    tag_505:\n      tag_507\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":2542:2597  uint256 public INDEXING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_118:\n      tag_158\n      tag_509\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3415:3481  uint256 public ARCHIVING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_119:\n      tag_158\n      tag_512\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17008:17109  function getComplianceSystem() public view returns(address){\r... */\n    tag_120:\n      tag_165\n      tag_515\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":18694:18824  function get_SPOT_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_121:\n      tag_158\n      tag_518\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_122:\n      tag_158\n      tag_521\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3823:3852  address public IndexingSystem */\n    tag_123:\n      tag_165\n      tag_524\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":3520:3540  address public token */\n    tag_124:\n      tag_165\n      tag_527\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":17686:17784  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_125:\n      tag_158\n      tag_530\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":20176:20320  function get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_126:\n      tag_158\n      tag_533\n      jump\t// in\n        /* \"worksystems/Parameters.sol\":757:804  uint256 public SPOT_MIN_STAKE = 25 * (10 ** 18) */\n    tag_159:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22263:22383  function get_ARCHIVING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_163:\n        /* \"worksystems/Parameters.sol\":22350:22375  ARCHIVING_DATA_BATCH_SIZE */\n      sload(0x27)\n        /* \"worksystems/Parameters.sol\":22263:22383  function get_ARCHIVING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16800:16895  function getRewardManager() public view returns(address){\r... */\n    tag_166:\n        /* \"worksystems/Parameters.sol\":16874:16887  RewardManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"worksystems/Parameters.sol\":16800:16895  function getRewardManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3785:3816  address public ComplianceSystem */\n    tag_170:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x37))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16501:16590  function getRepManager() public view returns(address){\r... */\n    tag_173:\n        /* \"worksystems/Parameters.sol\":16572:16582  RepManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x32))\n        /* \"worksystems/Parameters.sol\":16501:16590  function getRepManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3341:3408  uint256 public ARCHIVING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_176:\n      sload(0x2d)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":8973:9066  function destroyContract() public onlyOwner {\r... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_539\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_539:\n        /* \"worksystems/Parameters.sol\":9049:9056  owner() */\n      tag_542\n        /* \"worksystems/Parameters.sol\":9049:9054  owner */\n      tag_351\n        /* \"worksystems/Parameters.sol\":9049:9056  owner() */\n      jump\t// in\n    tag_542:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":9028:9058  selfdestruct(payable(owner())) */\n      and\n      selfdestruct\n        /* \"worksystems/Parameters.sol\":3161:3213  uint256 public ARCHIVING_MIN_STAKE = 25 * (10 ** 18) */\n    tag_181:\n      sload(0x2a)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18564:18688  function get_SPOT_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_184:\n        /* \"worksystems/Parameters.sol\":18653:18680  SPOT_MIN_REP_DataValidation */\n      sload(0x0e)\n        /* \"worksystems/Parameters.sol\":18564:18688  function get_SPOT_MIN_REP_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19723:19859  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n    tag_187:\n        /* \"worksystems/Parameters.sol\":19818:19851  NOVOTE_REGISTRATION_WAIT_DURATION */\n      sload(0x16)\n        /* \"worksystems/Parameters.sol\":19723:19859  function get_NOVOTE_REGISTRATION_WAIT_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19081:19197  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n    tag_190:\n        /* \"worksystems/Parameters.sol\":19166:19189  SPOT_TIMEFRAME_DURATION */\n      sload(0x11)\n        /* \"worksystems/Parameters.sol\":19081:19197  function get_SPOT_TIMEFRAME_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1859:1904  uint256 public COMPLIANCE_DATA_BATCH_SIZE = 1 */\n    tag_193:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":985:1032  uint256 public SPOT_REVEAL_ROUND_DURATION = 180 */\n    tag_196:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3613:3638  address public RepManager */\n    tag_199:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x32))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22937:23069  function get_ARCHIVING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_202:\n        /* \"worksystems/Parameters.sol\":23030:23061  ARCHIVING_REVEAL_ROUND_DURATION */\n      sload(0x2c)\n        /* \"worksystems/Parameters.sol\":22937:23069  function get_ARCHIVING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20616:20750  function get_COMPLIANCE_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_205:\n        /* \"worksystems/Parameters.sol\":20710:20742  COMPLIANCE_REVEAL_ROUND_DURATION */\n      sload(0x1c)\n        /* \"worksystems/Parameters.sol\":20616:20750  function get_COMPLIANCE_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2857:2922  uint256 public INDEXING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_208:\n      sload(0x26)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2784:2850  uint256 public INDEXING_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_211:\n      sload(0x25)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":9562:10993  function updateContractsAddresses(address StakeManager_, address RepManager_, address Reputation_, address RewardManager_, address AddressManager_,\r... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_549\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_549:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":9955:9982  StakeManager_ != address(0) */\n      dup12\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":9952:10038  if(StakeManager_ != address(0)){\r... */\n      tag_551\n      jumpi\n        /* \"worksystems/Parameters.sol\":9998:10010  StakeManager */\n      0x30\n        /* \"worksystems/Parameters.sol\":9998:10026  StakeManager = StakeManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup14\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":9952:10038  if(StakeManager_ != address(0)){\r... */\n    tag_551:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10051:10076  RepManager_ != address(0) */\n      dup11\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10048:10128  if(RepManager_ != address(0)){\r... */\n      tag_552\n      jumpi\n        /* \"worksystems/Parameters.sol\":10092:10102  RepManager */\n      0x32\n        /* \"worksystems/Parameters.sol\":10092:10116  RepManager = RepManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10048:10128  if(RepManager_ != address(0)){\r... */\n    tag_552:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10141:10166  Reputation_ != address(0) */\n      dup10\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10138:10218  if(Reputation_ != address(0)){\r... */\n      tag_553\n      jumpi\n        /* \"worksystems/Parameters.sol\":10182:10192  Reputation */\n      0x31\n        /* \"worksystems/Parameters.sol\":10182:10206  Reputation = Reputation_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup12\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10138:10218  if(Reputation_ != address(0)){\r... */\n    tag_553:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10231:10259  RewardManager_ != address(0) */\n      dup9\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10228:10317  if(RewardManager_ != address(0)){\r... */\n      tag_554\n      jumpi\n        /* \"worksystems/Parameters.sol\":10275:10288  RewardManager */\n      0x33\n        /* \"worksystems/Parameters.sol\":10275:10305  RewardManager = RewardManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10228:10317  if(RewardManager_ != address(0)){\r... */\n    tag_554:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10330:10359  AddressManager_ != address(0) */\n      dup8\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10327:10419  if(AddressManager_ != address(0)){\r... */\n      tag_555\n      jumpi\n        /* \"worksystems/Parameters.sol\":10375:10389  AddressManager */\n      0x34\n        /* \"worksystems/Parameters.sol\":10375:10407  AddressManager = AddressManager_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10327:10419  if(AddressManager_ != address(0)){\r... */\n    tag_555:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10432:10463  ComplianceSystem_ != address(0) */\n      dup6\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10429:10527  if(ComplianceSystem_ != address(0)){\r... */\n      tag_556\n      jumpi\n        /* \"worksystems/Parameters.sol\":10479:10495  ComplianceSystem */\n      0x37\n        /* \"worksystems/Parameters.sol\":10479:10515  ComplianceSystem = ComplianceSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10429:10527  if(ComplianceSystem_ != address(0)){\r... */\n    tag_556:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10540:10569  SpottingSystem_ != address(0) */\n      dup7\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10537:10629  if(SpottingSystem_ != address(0)){\r... */\n      tag_557\n      jumpi\n        /* \"worksystems/Parameters.sol\":10585:10599  SpottingSystem */\n      0x36\n        /* \"worksystems/Parameters.sol\":10585:10617  SpottingSystem = SpottingSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10537:10629  if(SpottingSystem_ != address(0)){\r... */\n    tag_557:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10642:10671  IndexingSystem_ != address(0) */\n      dup5\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10639:10731  if(IndexingSystem_ != address(0)){\r... */\n      tag_558\n      jumpi\n        /* \"worksystems/Parameters.sol\":10687:10701  IndexingSystem */\n      0x38\n        /* \"worksystems/Parameters.sol\":10687:10719  IndexingSystem = IndexingSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10639:10731  if(IndexingSystem_ != address(0)){\r... */\n    tag_558:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10744:10774  ArchivingSystem_ != address(0) */\n      dup4\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10741:10836  if(ArchivingSystem_ != address(0)){\r... */\n      tag_559\n      jumpi\n        /* \"worksystems/Parameters.sol\":10790:10805  ArchivingSystem */\n      0x39\n        /* \"worksystems/Parameters.sol\":10790:10824  ArchivingSystem = ArchivingSystem_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10741:10836  if(ArchivingSystem_ != address(0)){\r... */\n    tag_559:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10849:10869  sFuel_ != address(0) */\n      dup3\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10846:10911  if(sFuel_ != address(0)){\r... */\n      tag_560\n      jumpi\n        /* \"worksystems/Parameters.sol\":10885:10890  sFuel */\n      0x35\n        /* \"worksystems/Parameters.sol\":10885:10899  sFuel = sFuel_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10846:10911  if(sFuel_ != address(0)){\r... */\n    tag_560:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"worksystems/Parameters.sol\":10924:10944  token_ != address(0) */\n      dup2\n      and\n      iszero\n        /* \"worksystems/Parameters.sol\":10921:10986  if(token_ != address(0)){\r... */\n      tag_561\n      jumpi\n        /* \"worksystems/Parameters.sol\":10960:10965  token */\n      0x2f\n        /* \"worksystems/Parameters.sol\":10960:10974  token = token_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":10921:10986  if(token_ != address(0)){\r... */\n    tag_561:\n        /* \"worksystems/Parameters.sol\":9562:10993  function updateContractsAddresses(address StakeManager_, address RepManager_, address Reputation_, address RewardManager_, address AddressManager_,\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17414:17499  function getExordeToken() public view returns(address){\r... */\n    tag_218:\n        /* \"worksystems/Parameters.sol\":17486:17491  token */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x2f))\n        /* \"worksystems/Parameters.sol\":17414:17499  function getExordeToken() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18440:18558  function get_SPOT_MIN_REWARD_SpotData() public view returns(uint256){\r... */\n    tag_221:\n        /* \"worksystems/Parameters.sol\":18526:18550  SPOT_MIN_REWARD_SpotData */\n      sload(0x0b)\n        /* \"worksystems/Parameters.sol\":18440:18558  function get_SPOT_MIN_REWARD_SpotData() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1977:2034  uint256 public COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_224:\n      sload(0x19)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2227:2295  uint256 public COMPLIANCE_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_227:\n      sload(0x1d)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18066:18188  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_230:\n        /* \"worksystems/Parameters.sol\":18154:18180  SPOT_COMMIT_ROUND_DURATION */\n      sload(0x09)\n        /* \"worksystems/Parameters.sol\":18066:18188  function get_SPOT_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1396:1434  bool public SPOT_TOGGLE_ENABLED = true */\n    tag_233:\n      and(0xff, sload(0x10))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21913:22051  function get_INDEXING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_237:\n        /* \"worksystems/Parameters.sol\":22009:22043  INDEXING_MIN_REWARD_DataValidation */\n      sload(0x25)\n        /* \"worksystems/Parameters.sol\":21913:22051  function get_INDEXING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22651:22793  function get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_240:\n        /* \"worksystems/Parameters.sol\":22749:22785  ARCHIVING_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x29)\n        /* \"worksystems/Parameters.sol\":22651:22793  function get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2044:2097  uint256 public COMPLIANCE_MIN_STAKE = 25 * (10 ** 18) */\n    tag_243:\n      sload(0x1a)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2479:2534  uint256 public INDEXING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_246:\n      sload(0x20)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17218:17317  function getArchivingSystem() public view returns(address){\r... */\n    tag_249:\n        /* \"worksystems/Parameters.sol\":17294:17309  ArchivingSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x39))\n        /* \"worksystems/Parameters.sol\":17218:17317  function getArchivingSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20476:20610  function get_COMPLIANCE_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_252:\n        /* \"worksystems/Parameters.sol\":20570:20602  COMPLIANCE_COMMIT_ROUND_DURATION */\n      sload(0x1b)\n        /* \"worksystems/Parameters.sol\":20476:20610  function get_COMPLIANCE_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":23221:23355  function get_ARCHIVING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_255:\n        /* \"worksystems/Parameters.sol\":23315:23347  ARCHIVING_MIN_REP_DataValidation */\n      sload(0x2e)\n        /* \"worksystems/Parameters.sol\":23221:23355  function get_ARCHIVING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":599:651  uint256 public MAX_CONTRACT_STORED_BATCHES  = 200000 */\n    tag_258:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18966:19071  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n    tag_261:\n        /* \"worksystems/Parameters.sol\":19044:19063  SPOT_TOGGLE_ENABLED */\n      and(0xff, sload(0x10))\n        /* \"worksystems/Parameters.sol\":18966:19071  function get_SPOT_TOGGLE_ENABLED() public view returns(bool){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2979:3023  uint256 public ARCHIVING_DATA_BATCH_SIZE = 1 */\n    tag_264:\n      sload(0x27)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3645:3673  address public RewardManager */\n    tag_267:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3221:3273  uint256 public ARCHIVING_COMMIT_ROUND_DURATION = 400 */\n    tag_270:\n      sload(0x2b)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16697:16794  function getAddressManager() public view returns(address){\r... */\n    tag_273:\n        /* \"worksystems/Parameters.sol\":16772:16786  AddressManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x34))\n        /* \"worksystems/Parameters.sol\":16697:16794  function getAddressManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17323:17408  function getsFuelSystem() public view returns(address){\r... */\n    tag_276:\n        /* \"worksystems/Parameters.sol\":17395:17400  sFuel */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x35))\n        /* \"worksystems/Parameters.sol\":17323:17408  function getsFuelSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":14870:15809  function updateArchivingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_281:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_574\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_574:\n        /* \"worksystems/Parameters.sol\":14987:15001  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15005:15006  1 */\n      0x01\n        /* \"worksystems/Parameters.sol\":14987:15006  ParameterIndex == 1 */\n      eq\n        /* \"worksystems/Parameters.sol\":14984:15071  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_576\n      jumpi\n        /* \"worksystems/Parameters.sol\":15022:15047  ARCHIVING_DATA_BATCH_SIZE */\n      0x27\n        /* \"worksystems/Parameters.sol\":15022:15059  ARCHIVING_DATA_BATCH_SIZE = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14984:15071  if(ParameterIndex == 1){\r... */\n    tag_576:\n        /* \"worksystems/Parameters.sol\":15084:15098  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15102:15103  2 */\n      0x02\n        /* \"worksystems/Parameters.sol\":15084:15103  ParameterIndex == 2 */\n      eq\n        /* \"worksystems/Parameters.sol\":15081:15163  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_577\n      jumpi\n        /* \"worksystems/Parameters.sol\":15119:15138  ARCHIVING_MIN_STAKE */\n      0x2a\n        /* \"worksystems/Parameters.sol\":15119:15151  ARCHIVING_MIN_STAKE  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15081:15163  if(ParameterIndex == 2){\r... */\n    tag_577:\n        /* \"worksystems/Parameters.sol\":15176:15190  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15194:15195  3 */\n      0x03\n        /* \"worksystems/Parameters.sol\":15176:15195  ParameterIndex == 3 */\n      eq\n        /* \"worksystems/Parameters.sol\":15173:15272  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_578\n      jumpi\n        /* \"worksystems/Parameters.sol\":15211:15247  ARCHIVING_MIN_CONSENSUS_WORKER_COUNT */\n      0x28\n        /* \"worksystems/Parameters.sol\":15211:15260  ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15173:15272  if(ParameterIndex == 3){\r... */\n    tag_578:\n        /* \"worksystems/Parameters.sol\":15285:15299  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15303:15304  4 */\n      0x04\n        /* \"worksystems/Parameters.sol\":15285:15304  ParameterIndex == 4 */\n      eq\n        /* \"worksystems/Parameters.sol\":15282:15381  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_579\n      jumpi\n        /* \"worksystems/Parameters.sol\":15320:15356  ARCHIVING_MAX_CONSENSUS_WORKER_COUNT */\n      0x29\n        /* \"worksystems/Parameters.sol\":15320:15369  ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15282:15381  if(ParameterIndex == 4){\r... */\n    tag_579:\n        /* \"worksystems/Parameters.sol\":15394:15408  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15412:15413  5 */\n      0x05\n        /* \"worksystems/Parameters.sol\":15394:15413  ParameterIndex == 5 */\n      eq\n        /* \"worksystems/Parameters.sol\":15391:15485  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_580\n      jumpi\n        /* \"worksystems/Parameters.sol\":15429:15460  ARCHIVING_COMMIT_ROUND_DURATION */\n      0x2b\n        /* \"worksystems/Parameters.sol\":15429:15473  ARCHIVING_COMMIT_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15391:15485  if(ParameterIndex == 5){\r... */\n    tag_580:\n        /* \"worksystems/Parameters.sol\":15498:15512  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15516:15517  6 */\n      0x06\n        /* \"worksystems/Parameters.sol\":15498:15517  ParameterIndex == 6 */\n      eq\n        /* \"worksystems/Parameters.sol\":15495:15589  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_581\n      jumpi\n        /* \"worksystems/Parameters.sol\":15533:15564  ARCHIVING_REVEAL_ROUND_DURATION */\n      0x2c\n        /* \"worksystems/Parameters.sol\":15533:15577  ARCHIVING_REVEAL_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15495:15589  if(ParameterIndex == 6){\r... */\n    tag_581:\n        /* \"worksystems/Parameters.sol\":15602:15616  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15620:15621  7 */\n      0x07\n        /* \"worksystems/Parameters.sol\":15602:15621  ParameterIndex == 7 */\n      eq\n        /* \"worksystems/Parameters.sol\":15599:15694  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_582\n      jumpi\n        /* \"worksystems/Parameters.sol\":15637:15669  ARCHIVING_MIN_REP_DataValidation */\n      0x2e\n        /* \"worksystems/Parameters.sol\":15637:15682  ARCHIVING_MIN_REP_DataValidation  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15599:15694  if(ParameterIndex == 7){\r... */\n    tag_582:\n        /* \"worksystems/Parameters.sol\":15707:15721  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":15725:15726  8 */\n      0x08\n        /* \"worksystems/Parameters.sol\":15707:15726  ParameterIndex == 8 */\n      eq\n        /* \"worksystems/Parameters.sol\":15704:15802  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_583\n      jumpi\n        /* \"worksystems/Parameters.sol\":15742:15777  ARCHIVING_MIN_REWARD_DataValidation */\n      0x2d\n        /* \"worksystems/Parameters.sol\":15742:15790  ARCHIVING_MIN_REWARD_DataValidation  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":15704:15802  if(ParameterIndex == 8){\r... */\n    tag_583:\n        /* \"worksystems/Parameters.sol\":14870:15809  function updateArchivingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      pop\n      pop\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1109:1164  uint256 public SPOT_MIN_REP_SpotData  = 10 * (10 ** 15) */\n    tag_283:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3031:3087  uint256 public ARCHIVING_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_286:\n      sload(0x28)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":9078:9554  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_585\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_585:\n        /* \"worksystems/Parameters.sol\":9193:9207  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":9211:9212  1 */\n      0x01\n        /* \"worksystems/Parameters.sol\":9193:9212  ParameterIndex == 1 */\n      eq\n        /* \"worksystems/Parameters.sol\":9190:9269  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_587\n      jumpi\n        /* \"worksystems/Parameters.sol\":9228:9245  MAX_TOTAL_WORKERS */\n      0x01\n        /* \"worksystems/Parameters.sol\":9228:9257  MAX_TOTAL_WORKERS = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":9190:9269  if(ParameterIndex == 1){\r... */\n    tag_587:\n        /* \"worksystems/Parameters.sol\":9282:9296  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":9300:9301  2 */\n      0x02\n        /* \"worksystems/Parameters.sol\":9282:9301  ParameterIndex == 2 */\n      eq\n        /* \"worksystems/Parameters.sol\":9279:9353  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_588\n      jumpi\n        /* \"worksystems/Parameters.sol\":9317:9328  VOTE_QUORUM */\n      0x02\n        /* \"worksystems/Parameters.sol\":9317:9341  VOTE_QUORUM  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":9279:9353  if(ParameterIndex == 2){\r... */\n    tag_588:\n        /* \"worksystems/Parameters.sol\":9366:9380  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":9384:9385  3 */\n      0x03\n        /* \"worksystems/Parameters.sol\":9366:9385  ParameterIndex == 3 */\n      eq\n        /* \"worksystems/Parameters.sol\":9363:9447  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_589\n      jumpi\n        /* \"worksystems/Parameters.sol\":9401:9422  MAX_UPDATE_ITERATIONS */\n      0x03\n        /* \"worksystems/Parameters.sol\":9401:9435  MAX_UPDATE_ITERATIONS  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":9363:9447  if(ParameterIndex == 3){\r... */\n    tag_589:\n        /* \"worksystems/Parameters.sol\":9460:9474  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":9478:9479  4 */\n      0x04\n        /* \"worksystems/Parameters.sol\":9460:9479  ParameterIndex == 4 */\n      eq\n        /* \"worksystems/Parameters.sol\":9457:9547  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_583\n      jumpi\n        /* \"worksystems/Parameters.sol\":9495:9522  MAX_CONTRACT_STORED_BATCHES */\n      0x04\n        /* \"worksystems/Parameters.sol\":9495:9535  MAX_CONTRACT_STORED_BATCHES  = uintValue */\n      sstore\n      pop\n        /* \"worksystems/Parameters.sol\":9078:9554  function updateGeneralParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2105:2158  uint256 public COMPLIANCE_COMMIT_ROUND_DURATION = 400 */\n    tag_292:\n      sload(0x1b)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2302:2369  uint256 public COMPLIANCE_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_295:\n      sload(0x1e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_592\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_592:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_594\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_595\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_594:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1912:1969  uint256 public COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_300:\n      sload(0x18)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18194:18316  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_303:\n        /* \"worksystems/Parameters.sol\":18282:18308  SPOT_REVEAL_ROUND_DURATION */\n      sload(0x0a)\n        /* \"worksystems/Parameters.sol\":18194:18316  function get_SPOT_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":13930:14860  function updateIndexingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_598\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_598:\n        /* \"worksystems/Parameters.sol\":14046:14060  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14064:14065  1 */\n      0x01\n        /* \"worksystems/Parameters.sol\":14046:14065  ParameterIndex == 1 */\n      eq\n        /* \"worksystems/Parameters.sol\":14043:14129  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_600\n      jumpi\n        /* \"worksystems/Parameters.sol\":14081:14105  INDEXING_DATA_BATCH_SIZE */\n      0x1f\n        /* \"worksystems/Parameters.sol\":14081:14117  INDEXING_DATA_BATCH_SIZE = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14043:14129  if(ParameterIndex == 1){\r... */\n    tag_600:\n        /* \"worksystems/Parameters.sol\":14142:14156  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14160:14161  2 */\n      0x02\n        /* \"worksystems/Parameters.sol\":14142:14161  ParameterIndex == 2 */\n      eq\n        /* \"worksystems/Parameters.sol\":14139:14220  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_601\n      jumpi\n        /* \"worksystems/Parameters.sol\":14177:14195  INDEXING_MIN_STAKE */\n      0x22\n        /* \"worksystems/Parameters.sol\":14177:14208  INDEXING_MIN_STAKE  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14139:14220  if(ParameterIndex == 2){\r... */\n    tag_601:\n        /* \"worksystems/Parameters.sol\":14233:14247  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14251:14252  3 */\n      0x03\n        /* \"worksystems/Parameters.sol\":14233:14252  ParameterIndex == 3 */\n      eq\n        /* \"worksystems/Parameters.sol\":14230:14328  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_602\n      jumpi\n        /* \"worksystems/Parameters.sol\":14268:14303  INDEXING_MIN_CONSENSUS_WORKER_COUNT */\n      0x20\n        /* \"worksystems/Parameters.sol\":14268:14316  INDEXING_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14230:14328  if(ParameterIndex == 3){\r... */\n    tag_602:\n        /* \"worksystems/Parameters.sol\":14341:14355  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14359:14360  4 */\n      0x04\n        /* \"worksystems/Parameters.sol\":14341:14360  ParameterIndex == 4 */\n      eq\n        /* \"worksystems/Parameters.sol\":14338:14436  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_603\n      jumpi\n        /* \"worksystems/Parameters.sol\":14376:14411  INDEXING_MAX_CONSENSUS_WORKER_COUNT */\n      0x21\n        /* \"worksystems/Parameters.sol\":14376:14424  INDEXING_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14338:14436  if(ParameterIndex == 4){\r... */\n    tag_603:\n        /* \"worksystems/Parameters.sol\":14449:14463  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14467:14468  5 */\n      0x05\n        /* \"worksystems/Parameters.sol\":14449:14468  ParameterIndex == 5 */\n      eq\n        /* \"worksystems/Parameters.sol\":14446:14539  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_604\n      jumpi\n        /* \"worksystems/Parameters.sol\":14484:14514  INDEXING_COMMIT_ROUND_DURATION */\n      0x23\n        /* \"worksystems/Parameters.sol\":14484:14527  INDEXING_COMMIT_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14446:14539  if(ParameterIndex == 5){\r... */\n    tag_604:\n        /* \"worksystems/Parameters.sol\":14552:14566  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14570:14571  6 */\n      0x06\n        /* \"worksystems/Parameters.sol\":14552:14571  ParameterIndex == 6 */\n      eq\n        /* \"worksystems/Parameters.sol\":14549:14642  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_605\n      jumpi\n        /* \"worksystems/Parameters.sol\":14587:14617  INDEXING_REVEAL_ROUND_DURATION */\n      0x24\n        /* \"worksystems/Parameters.sol\":14587:14630  INDEXING_REVEAL_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14549:14642  if(ParameterIndex == 6){\r... */\n    tag_605:\n        /* \"worksystems/Parameters.sol\":14655:14669  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14673:14674  7 */\n      0x07\n        /* \"worksystems/Parameters.sol\":14655:14674  ParameterIndex == 7 */\n      eq\n        /* \"worksystems/Parameters.sol\":14652:14746  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_606\n      jumpi\n        /* \"worksystems/Parameters.sol\":14690:14721  INDEXING_MIN_REP_DataValidation */\n      0x26\n        /* \"worksystems/Parameters.sol\":14690:14734  INDEXING_MIN_REP_DataValidation  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":14652:14746  if(ParameterIndex == 7){\r... */\n    tag_606:\n        /* \"worksystems/Parameters.sol\":14759:14773  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":14777:14778  8 */\n      0x08\n        /* \"worksystems/Parameters.sol\":14759:14778  ParameterIndex == 8 */\n      eq\n        /* \"worksystems/Parameters.sol\":14756:14853  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_583\n      jumpi\n        /* \"worksystems/Parameters.sol\":14794:14828  INDEXING_MIN_REWARD_DataValidation */\n      0x25\n        /* \"worksystems/Parameters.sol\":14794:14841  INDEXING_MIN_REWARD_DataValidation  = uintValue */\n      sstore\n      pop\n        /* \"worksystems/Parameters.sol\":13930:14860  function updateIndexingParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2607:2658  uint256 public INDEXING_MIN_STAKE = 25 * (10 ** 18) */\n    tag_309:\n      sload(0x22)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17115:17212  function getIndexingSystem() public view returns(address){\r... */\n    tag_312:\n        /* \"worksystems/Parameters.sol\":17190:17204  IndexingSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x38))\n        /* \"worksystems/Parameters.sol\":17115:17212  function getIndexingSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3684:3713  address public AddressManager */\n    tag_315:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x34))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16084:16196  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n    tag_318:\n        /* \"worksystems/Parameters.sol\":16167:16188  MAX_UPDATE_ITERATIONS */\n      sload(0x03)\n        /* \"worksystems/Parameters.sol\":16084:16196  function get_MAX_UPDATE_ITERATIONS() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2724:2775  uint256 public INDEXING_REVEAL_ROUND_DURATION = 180 */\n    tag_321:\n      sload(0x24)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3280:3332  uint256 public ARCHIVING_REVEAL_ROUND_DURATION = 180 */\n    tag_324:\n      sload(0x2c)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3547:3574  address public StakeManager */\n    tag_327:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x30))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22057:22189  function get_INDEXING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_330:\n        /* \"worksystems/Parameters.sol\":22150:22181  INDEXING_MIN_REP_DataValidation */\n      sload(0x26)\n        /* \"worksystems/Parameters.sol\":22057:22189  function get_INDEXING_MIN_REP_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1240:1301  uint256 public SPOT_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_333:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1171:1233  uint256 public SPOT_MIN_REWARD_DataValidation = 1 * (10 ** 15) */\n    tag_336:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1441:1488  uint256 public SPOT_TIMEFRAME_DURATION  = 15*60 */\n    tag_339:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":23075:23215  function get_ARCHIVING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_342:\n        /* \"worksystems/Parameters.sol\":23172:23207  ARCHIVING_MIN_REWARD_DataValidation */\n      sload(0x2d)\n        /* \"worksystems/Parameters.sol\":23075:23215  function get_ARCHIVING_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20904:21040  function get_COMPLIANCE_MIN_REP_DataValidation() public view returns(uint256){\r... */\n    tag_345:\n        /* \"worksystems/Parameters.sol\":20999:21032  COMPLIANCE_MIN_REP_DataValidation */\n      sload(0x1e)\n        /* \"worksystems/Parameters.sol\":20904:21040  function get_COMPLIANCE_MIN_REP_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21777:21907  function get_INDEXING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_348:\n        /* \"worksystems/Parameters.sol\":21869:21899  INDEXING_REVEAL_ROUND_DURATION */\n      sload(0x24)\n        /* \"worksystems/Parameters.sol\":21777:21907  function get_INDEXING_REVEAL_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21641:21771  function get_INDEXING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_354:\n        /* \"worksystems/Parameters.sol\":21733:21763  INDEXING_COMMIT_ROUND_DURATION */\n      sload(0x23)\n        /* \"worksystems/Parameters.sol\":21641:21771  function get_INDEXING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":547:589  uint256 public MAX_UPDATE_ITERATIONS  = 50 */\n    tag_357:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22799:22931  function get_ARCHIVING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n    tag_360:\n        /* \"worksystems/Parameters.sol\":22892:22923  ARCHIVING_COMMIT_ROUND_DURATION */\n      sload(0x2b)\n        /* \"worksystems/Parameters.sol\":22799:22931  function get_ARCHIVING_COMMIT_ROUND_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":15881:15982  function getMaxTotalWorkers() public view returns(uint256){\r... */\n    tag_363:\n        /* \"worksystems/Parameters.sol\":15957:15974  MAX_TOTAL_WORKERS */\n      sload(0x01)\n        /* \"worksystems/Parameters.sol\":15881:15982  function getMaxTotalWorkers() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3581:3606  address public Reputation */\n    tag_366:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x31))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22503:22645  function get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_369:\n        /* \"worksystems/Parameters.sol\":22601:22637  ARCHIVING_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x28)\n        /* \"worksystems/Parameters.sol\":22503:22645  function get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2165:2218  uint256 public COMPLIANCE_REVEAL_ROUND_DURATION = 180 */\n    tag_372:\n      sload(0x1c)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17570:17680  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_375:\n        /* \"worksystems/Parameters.sol\":17652:17672  SPOT_DATA_BATCH_SIZE */\n      sload(0x05)\n        /* \"worksystems/Parameters.sol\":17570:17680  function get_SPOT_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19603:19717  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n    tag_378:\n        /* \"worksystems/Parameters.sol\":19687:19709  MAX_SUCCEEDING_NOVOTES */\n      sload(0x15)\n        /* \"worksystems/Parameters.sol\":19603:19717  function get_MAX_SUCCEEDING_NOVOTES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21349:21489  function get_INDEXING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_381:\n        /* \"worksystems/Parameters.sol\":21446:21481  INDEXING_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x20)\n        /* \"worksystems/Parameters.sol\":21349:21489  function get_INDEXING_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":459:498  uint256 public MAX_TOTAL_WORKERS = 1000 */\n    tag_384:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":873:924  uint256 public SPOT_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_387:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3720:3740  address public sFuel */\n    tag_390:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x35))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18322:18434  function get_SPOT_MIN_REP_SpotData() public view returns(uint256){\r... */\n    tag_393:\n        /* \"worksystems/Parameters.sol\":18405:18426  SPOT_MIN_REP_SpotData */\n      sload(0x0c)\n        /* \"worksystems/Parameters.sol\":18322:18434  function get_SPOT_MIN_REP_SpotData() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3095:3151  uint256 public ARCHIVING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_396:\n      sload(0x29)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":22389:22497  function get_ARCHIVING_MIN_STAKE() public view returns(uint256){\r... */\n    tag_399:\n        /* \"worksystems/Parameters.sol\":22470:22489  ARCHIVING_MIN_STAKE */\n      sload(0x2a)\n        /* \"worksystems/Parameters.sol\":22389:22497  function get_ARCHIVING_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19207:19339  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n    tag_402:\n        /* \"worksystems/Parameters.sol\":19300:19331  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD */\n      sload(0x12)\n        /* \"worksystems/Parameters.sol\":19207:19339  function get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16905:17002  function getSpottingSystem() public view returns(address){\r... */\n    tag_405:\n        /* \"worksystems/Parameters.sol\":16980:16994  SpottingSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x36))\n        /* \"worksystems/Parameters.sol\":16905:17002  function getSpottingSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1630:1667  uint256 public SPOT_NB_TIMEFRAMES = 4 */\n    tag_408:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3859:3889  address public ArchivingSystem */\n    tag_411:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x39))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17790:17922  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_414:\n        /* \"worksystems/Parameters.sol\":17883:17914  SPOT_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x07)\n        /* \"worksystems/Parameters.sol\":17790:17922  function get_SPOT_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19349:19485  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n    tag_417:\n        /* \"worksystems/Parameters.sol\":19444:19477  SPOT_MAX_SPOT_PER_USER_PER_PERIOD */\n      sload(0x13)\n        /* \"worksystems/Parameters.sol\":19349:19485  function get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1569:1623  uint256 public SPOT_MAX_SPOT_PER_USER_PER_PERIOD  = 25 */\n    tag_420:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21237:21343  function get_INDEXING_MIN_STAKE() public view returns(uint256){\r... */\n    tag_423:\n        /* \"worksystems/Parameters.sol\":21317:21335  INDEXING_MIN_STAKE */\n      sload(0x22)\n        /* \"worksystems/Parameters.sol\":21237:21343  function get_INDEXING_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18830:18960  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n    tag_426:\n        /* \"worksystems/Parameters.sol\":18922:18952  SPOT_INTER_ALLOCATION_DURATION */\n      sload(0x0f)\n        /* \"worksystems/Parameters.sol\":18830:18960  function get_SPOT_INTER_ALLOCATION_DURATION() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":711:750  uint256 public SPOT_DATA_BATCH_SIZE = 1 */\n    tag_429:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":505:537  uint256 public VOTE_QUORUM  = 50 */\n    tag_432:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2428:2471  uint256 public INDEXING_DATA_BATCH_SIZE = 1 */\n    tag_435:\n      sload(0x1f)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16402:16495  function getStakeManager() public view returns(address){\r... */\n    tag_438:\n        /* \"worksystems/Parameters.sol\":16475:16487  StakeManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x30))\n        /* \"worksystems/Parameters.sol\":16402:16495  function getStakeManager() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21113:21231  function get_INDEXING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_441:\n        /* \"worksystems/Parameters.sol\":21199:21223  INDEXING_DATA_BATCH_SIZE */\n      sload(0x1f)\n        /* \"worksystems/Parameters.sol\":21113:21231  function get_INDEXING_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1727:1783  uint256 public NOVOTE_REGISTRATION_WAIT_DURATION  = 3600 */\n    tag_444:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19932:20054  function get_COMPLIANCE_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n    tag_447:\n        /* \"worksystems/Parameters.sol\":20020:20046  COMPLIANCE_DATA_BATCH_SIZE */\n      sload(0x17)\n        /* \"worksystems/Parameters.sol\":19932:20054  function get_COMPLIANCE_DATA_BATCH_SIZE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1674:1716  uint256 public MAX_SUCCEEDING_NOVOTES  = 3 */\n    tag_450:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1046:1102  uint256 public SPOT_MIN_REWARD_SpotData = 1 * (10 ** 15) */\n    tag_453:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3749:3778  address public SpottingSystem */\n    tag_456:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x36))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20326:20470  function get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_459:\n        /* \"worksystems/Parameters.sol\":20425:20462  COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x19)\n        /* \"worksystems/Parameters.sol\":20326:20470  function get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17928:18060  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_462:\n        /* \"worksystems/Parameters.sol\":18021:18052  SPOT_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x08)\n        /* \"worksystems/Parameters.sol\":17928:18060  function get_SPOT_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1508:1562  uint256 public SPOT_GLOBAL_MAX_SPOT_PER_PERIOD  = 1000 */\n    tag_465:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":12972:13920  function updateComplianceParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n    tag_469:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_636\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_636:\n        /* \"worksystems/Parameters.sol\":13090:13104  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13108:13109  1 */\n      0x01\n        /* \"worksystems/Parameters.sol\":13090:13109  ParameterIndex == 1 */\n      eq\n        /* \"worksystems/Parameters.sol\":13087:13175  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_638\n      jumpi\n        /* \"worksystems/Parameters.sol\":13125:13151  COMPLIANCE_DATA_BATCH_SIZE */\n      0x17\n        /* \"worksystems/Parameters.sol\":13125:13163  COMPLIANCE_DATA_BATCH_SIZE = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13087:13175  if(ParameterIndex == 1){\r... */\n    tag_638:\n        /* \"worksystems/Parameters.sol\":13188:13202  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13206:13207  2 */\n      0x02\n        /* \"worksystems/Parameters.sol\":13188:13207  ParameterIndex == 2 */\n      eq\n        /* \"worksystems/Parameters.sol\":13185:13268  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_639\n      jumpi\n        /* \"worksystems/Parameters.sol\":13223:13243  COMPLIANCE_MIN_STAKE */\n      0x1a\n        /* \"worksystems/Parameters.sol\":13223:13256  COMPLIANCE_MIN_STAKE  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13185:13268  if(ParameterIndex == 2){\r... */\n    tag_639:\n        /* \"worksystems/Parameters.sol\":13281:13295  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13299:13300  3 */\n      0x03\n        /* \"worksystems/Parameters.sol\":13281:13300  ParameterIndex == 3 */\n      eq\n        /* \"worksystems/Parameters.sol\":13278:13378  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_640\n      jumpi\n        /* \"worksystems/Parameters.sol\":13316:13353  COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT */\n      0x18\n        /* \"worksystems/Parameters.sol\":13316:13366  COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13278:13378  if(ParameterIndex == 3){\r... */\n    tag_640:\n        /* \"worksystems/Parameters.sol\":13391:13405  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13409:13410  4 */\n      0x04\n        /* \"worksystems/Parameters.sol\":13391:13410  ParameterIndex == 4 */\n      eq\n        /* \"worksystems/Parameters.sol\":13388:13488  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_641\n      jumpi\n        /* \"worksystems/Parameters.sol\":13426:13463  COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT */\n      0x19\n        /* \"worksystems/Parameters.sol\":13426:13476  COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13388:13488  if(ParameterIndex == 4){\r... */\n    tag_641:\n        /* \"worksystems/Parameters.sol\":13501:13515  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13519:13520  5 */\n      0x05\n        /* \"worksystems/Parameters.sol\":13501:13520  ParameterIndex == 5 */\n      eq\n        /* \"worksystems/Parameters.sol\":13498:13593  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_642\n      jumpi\n        /* \"worksystems/Parameters.sol\":13536:13568  COMPLIANCE_COMMIT_ROUND_DURATION */\n      0x1b\n        /* \"worksystems/Parameters.sol\":13536:13581  COMPLIANCE_COMMIT_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13498:13593  if(ParameterIndex == 5){\r... */\n    tag_642:\n        /* \"worksystems/Parameters.sol\":13606:13620  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13624:13625  6 */\n      0x06\n        /* \"worksystems/Parameters.sol\":13606:13625  ParameterIndex == 6 */\n      eq\n        /* \"worksystems/Parameters.sol\":13603:13698  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_643\n      jumpi\n        /* \"worksystems/Parameters.sol\":13641:13673  COMPLIANCE_REVEAL_ROUND_DURATION */\n      0x1c\n        /* \"worksystems/Parameters.sol\":13641:13686  COMPLIANCE_REVEAL_ROUND_DURATION  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13603:13698  if(ParameterIndex == 6){\r... */\n    tag_643:\n        /* \"worksystems/Parameters.sol\":13711:13725  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13729:13730  7 */\n      0x07\n        /* \"worksystems/Parameters.sol\":13711:13730  ParameterIndex == 7 */\n      eq\n        /* \"worksystems/Parameters.sol\":13708:13804  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_644\n      jumpi\n        /* \"worksystems/Parameters.sol\":13746:13779  COMPLIANCE_MIN_REP_DataValidation */\n      0x1e\n        /* \"worksystems/Parameters.sol\":13746:13792  COMPLIANCE_MIN_REP_DataValidation  = uintValue */\n      dup2\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":13708:13804  if(ParameterIndex == 7){\r... */\n    tag_644:\n        /* \"worksystems/Parameters.sol\":13817:13831  ParameterIndex */\n      dup2\n        /* \"worksystems/Parameters.sol\":13835:13836  8 */\n      0x08\n        /* \"worksystems/Parameters.sol\":13817:13836  ParameterIndex == 8 */\n      eq\n        /* \"worksystems/Parameters.sol\":13814:13913  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_583\n      jumpi\n        /* \"worksystems/Parameters.sol\":13852:13888  COMPLIANCE_MIN_REWARD_DataValidation */\n      0x1d\n        /* \"worksystems/Parameters.sol\":13852:13901  COMPLIANCE_MIN_REWARD_DataValidation  = uintValue */\n      sstore\n      pop\n        /* \"worksystems/Parameters.sol\":12972:13920  function updateComplianceParameters(uint256 ParameterIndex, uint256 uintValue) public onlyOwner {        \r... */\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16202:16326  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n    tag_471:\n        /* \"worksystems/Parameters.sol\":16291:16318  MAX_CONTRACT_STORED_BATCHES */\n      sload(0x04)\n        /* \"worksystems/Parameters.sol\":16202:16326  function get_MAX_CONTRACT_STORED_BATCHES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20060:20170  function get_COMPLIANCE_MIN_STAKE() public view returns(uint256){\r... */\n    tag_474:\n        /* \"worksystems/Parameters.sol\":20142:20162  COMPLIANCE_MIN_STAKE */\n      sload(0x1a)\n        /* \"worksystems/Parameters.sol\":20060:20170  function get_COMPLIANCE_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":1338:1389  uint256 public SPOT_INTER_ALLOCATION_DURATION = 400 */\n    tag_477:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":19491:19597  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n    tag_480:\n        /* \"worksystems/Parameters.sol\":19571:19589  SPOT_NB_TIMEFRAMES */\n      sload(0x14)\n        /* \"worksystems/Parameters.sol\":19491:19597  function get_SPOT_NB_TIMEFRAMES() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":21495:21635  function get_INDEXING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_483:\n        /* \"worksystems/Parameters.sol\":21592:21627  INDEXING_MAX_CONSENSUS_WORKER_COUNT */\n      sload(0x21)\n        /* \"worksystems/Parameters.sol\":21495:21635  function get_INDEXING_MAX_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":931:978  uint256 public SPOT_COMMIT_ROUND_DURATION = 180 */\n    tag_486:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2666:2717  uint256 public INDEXING_COMMIT_ROUND_DURATION = 400 */\n    tag_489:\n      sload(0x23)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":16596:16691  function getReputationSystem() public view returns(address){\r... */\n    tag_492:\n        /* \"worksystems/Parameters.sol\":16673:16683  Reputation */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x31))\n        /* \"worksystems/Parameters.sol\":16596:16691  function getReputationSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":15988:16078  function getVoteQuorum() public view returns(uint256){\r... */\n    tag_495:\n        /* \"worksystems/Parameters.sol\":16059:16070  VOTE_QUORUM */\n      sload(0x02)\n        /* \"worksystems/Parameters.sol\":15988:16078  function getVoteQuorum() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":11013:12962  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n    tag_500:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_653\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_653:\n        /* \"worksystems/Parameters.sol\":11145:11159  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11163:11164  1 */\n      0x01\n        /* \"worksystems/Parameters.sol\":11145:11164  ParameterIndex == 1 */\n      eq\n        /* \"worksystems/Parameters.sol\":11142:11225  if(ParameterIndex == 1){\r... */\n      iszero\n      tag_655\n      jumpi\n        /* \"worksystems/Parameters.sol\":11180:11200  SPOT_DATA_BATCH_SIZE */\n      0x05\n        /* \"worksystems/Parameters.sol\":11180:11213  SPOT_DATA_BATCH_SIZE  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11142:11225  if(ParameterIndex == 1){\r... */\n    tag_655:\n        /* \"worksystems/Parameters.sol\":11238:11252  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11256:11257  2 */\n      0x02\n        /* \"worksystems/Parameters.sol\":11238:11257  ParameterIndex == 2 */\n      eq\n        /* \"worksystems/Parameters.sol\":11235:11312  if(ParameterIndex == 2){\r... */\n      iszero\n      tag_656\n      jumpi\n        /* \"worksystems/Parameters.sol\":11273:11287  SPOT_MIN_STAKE */\n      0x06\n        /* \"worksystems/Parameters.sol\":11273:11300  SPOT_MIN_STAKE  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11235:11312  if(ParameterIndex == 2){\r... */\n    tag_656:\n        /* \"worksystems/Parameters.sol\":11325:11339  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11343:11344  3 */\n      0x03\n        /* \"worksystems/Parameters.sol\":11325:11344  ParameterIndex == 3 */\n      eq\n        /* \"worksystems/Parameters.sol\":11322:11416  if(ParameterIndex == 3){\r... */\n      iszero\n      tag_657\n      jumpi\n        /* \"worksystems/Parameters.sol\":11360:11391  SPOT_MIN_CONSENSUS_WORKER_COUNT */\n      0x07\n        /* \"worksystems/Parameters.sol\":11360:11404  SPOT_MIN_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11322:11416  if(ParameterIndex == 3){\r... */\n    tag_657:\n        /* \"worksystems/Parameters.sol\":11429:11443  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11447:11448  4 */\n      0x04\n        /* \"worksystems/Parameters.sol\":11429:11448  ParameterIndex == 4 */\n      eq\n        /* \"worksystems/Parameters.sol\":11426:11520  if(ParameterIndex == 4){\r... */\n      iszero\n      tag_658\n      jumpi\n        /* \"worksystems/Parameters.sol\":11464:11495  SPOT_MAX_CONSENSUS_WORKER_COUNT */\n      0x08\n        /* \"worksystems/Parameters.sol\":11464:11508  SPOT_MAX_CONSENSUS_WORKER_COUNT  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11426:11520  if(ParameterIndex == 4){\r... */\n    tag_658:\n        /* \"worksystems/Parameters.sol\":11533:11547  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11551:11552  5 */\n      0x05\n        /* \"worksystems/Parameters.sol\":11533:11552  ParameterIndex == 5 */\n      eq\n        /* \"worksystems/Parameters.sol\":11530:11619  if(ParameterIndex == 5){\r... */\n      iszero\n      tag_659\n      jumpi\n        /* \"worksystems/Parameters.sol\":11568:11594  SPOT_COMMIT_ROUND_DURATION */\n      0x09\n        /* \"worksystems/Parameters.sol\":11568:11607  SPOT_COMMIT_ROUND_DURATION  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11530:11619  if(ParameterIndex == 5){\r... */\n    tag_659:\n        /* \"worksystems/Parameters.sol\":11632:11646  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11650:11651  6 */\n      0x06\n        /* \"worksystems/Parameters.sol\":11632:11651  ParameterIndex == 6 */\n      eq\n        /* \"worksystems/Parameters.sol\":11629:11718  if(ParameterIndex == 6){\r... */\n      iszero\n      tag_660\n      jumpi\n        /* \"worksystems/Parameters.sol\":11667:11693  SPOT_REVEAL_ROUND_DURATION */\n      0x0a\n        /* \"worksystems/Parameters.sol\":11667:11706  SPOT_REVEAL_ROUND_DURATION  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11629:11718  if(ParameterIndex == 6){\r... */\n    tag_660:\n        /* \"worksystems/Parameters.sol\":11731:11745  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11749:11750  7 */\n      0x07\n        /* \"worksystems/Parameters.sol\":11731:11750  ParameterIndex == 7 */\n      eq\n        /* \"worksystems/Parameters.sol\":11728:11815  if(ParameterIndex == 7){\r... */\n      iszero\n      tag_661\n      jumpi\n        /* \"worksystems/Parameters.sol\":11766:11790  SPOT_MIN_REWARD_SpotData */\n      0x0b\n        /* \"worksystems/Parameters.sol\":11766:11803  SPOT_MIN_REWARD_SpotData  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11728:11815  if(ParameterIndex == 7){\r... */\n    tag_661:\n        /* \"worksystems/Parameters.sol\":11828:11842  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11846:11847  8 */\n      0x08\n        /* \"worksystems/Parameters.sol\":11828:11847  ParameterIndex == 8 */\n      eq\n        /* \"worksystems/Parameters.sol\":11825:11909  if(ParameterIndex == 8){\r... */\n      iszero\n      tag_662\n      jumpi\n        /* \"worksystems/Parameters.sol\":11863:11884  SPOT_MIN_REP_SpotData */\n      0x0c\n        /* \"worksystems/Parameters.sol\":11863:11897  SPOT_MIN_REP_SpotData  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11825:11909  if(ParameterIndex == 8){\r... */\n    tag_662:\n        /* \"worksystems/Parameters.sol\":11922:11936  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":11940:11941  9 */\n      0x09\n        /* \"worksystems/Parameters.sol\":11922:11941  ParameterIndex == 9 */\n      eq\n        /* \"worksystems/Parameters.sol\":11919:12012  if(ParameterIndex == 9){\r... */\n      iszero\n      tag_663\n      jumpi\n        /* \"worksystems/Parameters.sol\":11957:11987  SPOT_MIN_REWARD_DataValidation */\n      0x0d\n        /* \"worksystems/Parameters.sol\":11957:12000  SPOT_MIN_REWARD_DataValidation  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":11919:12012  if(ParameterIndex == 9){\r... */\n    tag_663:\n        /* \"worksystems/Parameters.sol\":12025:12039  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12043:12045  10 */\n      0x0a\n        /* \"worksystems/Parameters.sol\":12025:12045  ParameterIndex == 10 */\n      eq\n        /* \"worksystems/Parameters.sol\":12022:12113  if(ParameterIndex == 10){\r... */\n      iszero\n      tag_664\n      jumpi\n        /* \"worksystems/Parameters.sol\":12061:12088  SPOT_MIN_REP_DataValidation */\n      0x0e\n        /* \"worksystems/Parameters.sol\":12061:12101  SPOT_MIN_REP_DataValidation  = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12022:12113  if(ParameterIndex == 10){\r... */\n    tag_664:\n        /* \"worksystems/Parameters.sol\":12175:12189  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12193:12195  11 */\n      0x0b\n        /* \"worksystems/Parameters.sol\":12175:12195  ParameterIndex == 11 */\n      eq\n        /* \"worksystems/Parameters.sol\":12172:12265  if(ParameterIndex == 11){\r... */\n      iszero\n      tag_665\n      jumpi\n        /* \"worksystems/Parameters.sol\":12211:12241  SPOT_INTER_ALLOCATION_DURATION */\n      0x0f\n        /* \"worksystems/Parameters.sol\":12211:12253  SPOT_INTER_ALLOCATION_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12172:12265  if(ParameterIndex == 11){\r... */\n    tag_665:\n        /* \"worksystems/Parameters.sol\":12278:12292  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12296:12298  12 */\n      0x0c\n        /* \"worksystems/Parameters.sol\":12278:12298  ParameterIndex == 12 */\n      eq\n        /* \"worksystems/Parameters.sol\":12275:12357  if(ParameterIndex == 12){\r... */\n      iszero\n      tag_666\n      jumpi\n        /* \"worksystems/Parameters.sol\":12314:12333  SPOT_TOGGLE_ENABLED */\n      0x10\n        /* \"worksystems/Parameters.sol\":12314:12345  SPOT_TOGGLE_ENABLED = boolValue */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12275:12357  if(ParameterIndex == 12){\r... */\n    tag_666:\n        /* \"worksystems/Parameters.sol\":12370:12384  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12388:12390  13 */\n      0x0d\n        /* \"worksystems/Parameters.sol\":12370:12390  ParameterIndex == 13 */\n      eq\n        /* \"worksystems/Parameters.sol\":12367:12453  if(ParameterIndex == 13){\r... */\n      iszero\n      tag_667\n      jumpi\n        /* \"worksystems/Parameters.sol\":12406:12429  SPOT_TIMEFRAME_DURATION */\n      0x11\n        /* \"worksystems/Parameters.sol\":12406:12441  SPOT_TIMEFRAME_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12367:12453  if(ParameterIndex == 13){\r... */\n    tag_667:\n        /* \"worksystems/Parameters.sol\":12466:12480  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12484:12486  14 */\n      0x0e\n        /* \"worksystems/Parameters.sol\":12466:12486  ParameterIndex == 14 */\n      eq\n        /* \"worksystems/Parameters.sol\":12463:12557  if(ParameterIndex == 14){\r... */\n      iszero\n      tag_668\n      jumpi\n        /* \"worksystems/Parameters.sol\":12502:12533  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD */\n      0x12\n        /* \"worksystems/Parameters.sol\":12502:12545  SPOT_GLOBAL_MAX_SPOT_PER_PERIOD = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12463:12557  if(ParameterIndex == 14){\r... */\n    tag_668:\n        /* \"worksystems/Parameters.sol\":12570:12584  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12588:12590  15 */\n      0x0f\n        /* \"worksystems/Parameters.sol\":12570:12590  ParameterIndex == 15 */\n      eq\n        /* \"worksystems/Parameters.sol\":12567:12663  if(ParameterIndex == 15){\r... */\n      iszero\n      tag_669\n      jumpi\n        /* \"worksystems/Parameters.sol\":12606:12639  SPOT_MAX_SPOT_PER_USER_PER_PERIOD */\n      0x13\n        /* \"worksystems/Parameters.sol\":12606:12651  SPOT_MAX_SPOT_PER_USER_PER_PERIOD = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12567:12663  if(ParameterIndex == 15){\r... */\n    tag_669:\n        /* \"worksystems/Parameters.sol\":12676:12690  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12694:12696  16 */\n      0x10\n        /* \"worksystems/Parameters.sol\":12676:12696  ParameterIndex == 16 */\n      eq\n        /* \"worksystems/Parameters.sol\":12673:12754  if(ParameterIndex == 16){\r... */\n      iszero\n      tag_670\n      jumpi\n        /* \"worksystems/Parameters.sol\":12712:12730  SPOT_NB_TIMEFRAMES */\n      0x14\n        /* \"worksystems/Parameters.sol\":12712:12742  SPOT_NB_TIMEFRAMES = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12673:12754  if(ParameterIndex == 16){\r... */\n    tag_670:\n        /* \"worksystems/Parameters.sol\":12767:12781  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12785:12787  17 */\n      0x11\n        /* \"worksystems/Parameters.sol\":12767:12787  ParameterIndex == 17 */\n      eq\n        /* \"worksystems/Parameters.sol\":12764:12849  if(ParameterIndex == 17){\r... */\n      iszero\n      tag_671\n      jumpi\n        /* \"worksystems/Parameters.sol\":12803:12825  MAX_SUCCEEDING_NOVOTES */\n      0x15\n        /* \"worksystems/Parameters.sol\":12803:12837  MAX_SUCCEEDING_NOVOTES = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12764:12849  if(ParameterIndex == 17){\r... */\n    tag_671:\n        /* \"worksystems/Parameters.sol\":12862:12876  ParameterIndex */\n      dup3\n        /* \"worksystems/Parameters.sol\":12880:12882  18 */\n      0x12\n        /* \"worksystems/Parameters.sol\":12862:12882  ParameterIndex == 18 */\n      eq\n        /* \"worksystems/Parameters.sol\":12859:12955  if(ParameterIndex == 18){\r... */\n      iszero\n      tag_672\n      jumpi\n        /* \"worksystems/Parameters.sol\":12898:12931  NOVOTE_REGISTRATION_WAIT_DURATION */\n      0x16\n        /* \"worksystems/Parameters.sol\":12898:12943  NOVOTE_REGISTRATION_WAIT_DURATION = uintValue */\n      dup3\n      swap1\n      sstore\n        /* \"worksystems/Parameters.sol\":12859:12955  if(ParameterIndex == 18){\r... */\n    tag_672:\n        /* \"worksystems/Parameters.sol\":11013:12962  function updateSpottingParameters(uint256 ParameterIndex, uint256 uintValue, bool boolValue) public onlyOwner {        \r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20756:20898  function get_COMPLIANCE_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_502:\n        /* \"worksystems/Parameters.sol\":20854:20890  COMPLIANCE_MIN_REWARD_DataValidation */\n      sload(0x1d)\n        /* \"worksystems/Parameters.sol\":20756:20898  function get_COMPLIANCE_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_507:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_675\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_540\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_675:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_677\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_678\n      swap1\n      tag_679\n      jump\t// in\n    tag_678:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_677:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_680\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_595\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_680:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":2542:2597  uint256 public INDEXING_MAX_CONSENSUS_WORKER_COUNT  = 4 */\n    tag_509:\n      sload(0x21)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3415:3481  uint256 public ARCHIVING_MIN_REP_DataValidation  = 10 * (10 ** 15) */\n    tag_512:\n      sload(0x2e)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17008:17109  function getComplianceSystem() public view returns(address){\r... */\n    tag_515:\n        /* \"worksystems/Parameters.sol\":17085:17101  ComplianceSystem */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x37))\n        /* \"worksystems/Parameters.sol\":17008:17109  function getComplianceSystem() public view returns(address){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":18694:18824  function get_SPOT_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n    tag_518:\n        /* \"worksystems/Parameters.sol\":18786:18816  SPOT_MIN_REWARD_DataValidation */\n      sload(0x0d)\n        /* \"worksystems/Parameters.sol\":18694:18824  function get_SPOT_MIN_REWARD_DataValidation() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":812:863  uint256 public SPOT_MIN_CONSENSUS_WORKER_COUNT  = 2 */\n    tag_521:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3823:3852  address public IndexingSystem */\n    tag_524:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x38))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":3520:3540  address public token */\n    tag_527:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x2f))\n      dup2\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":17686:17784  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n    tag_530:\n        /* \"worksystems/Parameters.sol\":17762:17776  SPOT_MIN_STAKE */\n      sload(0x06)\n        /* \"worksystems/Parameters.sol\":17686:17784  function get_SPOT_MIN_STAKE() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"worksystems/Parameters.sol\":20176:20320  function get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n    tag_533:\n        /* \"worksystems/Parameters.sol\":20275:20312  COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT */\n      sload(0x18)\n        /* \"worksystems/Parameters.sol\":20176:20320  function get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_540:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_686\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_687\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_686:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_688\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_688:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_594\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_678\n      swap1\n      tag_691\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_595:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_687:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:189   */\n    tag_695:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":133:164   */\n      dup2\n      and\n        /* \"#utility.yul\":123:165   */\n      dup2\n      eq\n        /* \"#utility.yul\":113:115   */\n      tag_697\n      jumpi\n        /* \"#utility.yul\":179:180   */\n      0x00\n        /* \"#utility.yul\":176:177   */\n      dup1\n        /* \"#utility.yul\":169:181   */\n      revert\n        /* \"#utility.yul\":113:115   */\n    tag_697:\n        /* \"#utility.yul\":65:189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":194:392   */\n    tag_506:\n      0x00\n        /* \"#utility.yul\":306:308   */\n      0x20\n        /* \"#utility.yul\":294:303   */\n      dup3\n        /* \"#utility.yul\":285:292   */\n      dup5\n        /* \"#utility.yul\":281:304   */\n      sub\n        /* \"#utility.yul\":277:309   */\n      slt\n        /* \"#utility.yul\":274:276   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":327:333   */\n      dup1\n        /* \"#utility.yul\":319:325   */\n      dup2\n        /* \"#utility.yul\":312:334   */\n      revert\n        /* \"#utility.yul\":274:276   */\n    tag_699:\n        /* \"#utility.yul\":355:386   */\n      tag_700\n        /* \"#utility.yul\":376:385   */\n      dup3\n        /* \"#utility.yul\":355:386   */\n      tag_695\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":345:386   */\n      swap4\n        /* \"#utility.yul\":264:392   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:1365   */\n    tag_215:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":680:683   */\n      0x0160\n        /* \"#utility.yul\":668:677   */\n      dup13\n        /* \"#utility.yul\":659:666   */\n      dup15\n        /* \"#utility.yul\":655:678   */\n      sub\n        /* \"#utility.yul\":651:684   */\n      slt\n        /* \"#utility.yul\":648:650   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":702:708   */\n      dup7\n        /* \"#utility.yul\":694:700   */\n      dup8\n        /* \"#utility.yul\":687:709   */\n      revert\n        /* \"#utility.yul\":648:650   */\n    tag_702:\n        /* \"#utility.yul\":730:761   */\n      tag_703\n        /* \"#utility.yul\":751:760   */\n      dup13\n        /* \"#utility.yul\":730:761   */\n      tag_695\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":720:761   */\n      swap11\n      pop\n        /* \"#utility.yul\":780:820   */\n      tag_704\n        /* \"#utility.yul\":816:818   */\n      0x20\n        /* \"#utility.yul\":805:814   */\n      dup14\n        /* \"#utility.yul\":801:819   */\n      add\n        /* \"#utility.yul\":780:820   */\n      tag_695\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":770:820   */\n      swap10\n      pop\n        /* \"#utility.yul\":839:879   */\n      tag_705\n        /* \"#utility.yul\":875:877   */\n      0x40\n        /* \"#utility.yul\":864:873   */\n      dup14\n        /* \"#utility.yul\":860:878   */\n      add\n        /* \"#utility.yul\":839:879   */\n      tag_695\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":829:879   */\n      swap9\n      pop\n        /* \"#utility.yul\":898:938   */\n      tag_706\n        /* \"#utility.yul\":934:936   */\n      0x60\n        /* \"#utility.yul\":923:932   */\n      dup14\n        /* \"#utility.yul\":919:937   */\n      add\n        /* \"#utility.yul\":898:938   */\n      tag_695\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":888:938   */\n      swap8\n      pop\n        /* \"#utility.yul\":957:998   */\n      tag_707\n        /* \"#utility.yul\":993:996   */\n      0x80\n        /* \"#utility.yul\":982:991   */\n      dup14\n        /* \"#utility.yul\":978:997   */\n      add\n        /* \"#utility.yul\":957:998   */\n      tag_695\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":947:998   */\n      swap7\n      pop\n        /* \"#utility.yul\":1017:1058   */\n      tag_708\n        /* \"#utility.yul\":1053:1056   */\n      0xa0\n        /* \"#utility.yul\":1042:1051   */\n      dup14\n        /* \"#utility.yul\":1038:1057   */\n      add\n        /* \"#utility.yul\":1017:1058   */\n      tag_695\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":1007:1058   */\n      swap6\n      pop\n        /* \"#utility.yul\":1077:1118   */\n      tag_709\n        /* \"#utility.yul\":1113:1116   */\n      0xc0\n        /* \"#utility.yul\":1102:1111   */\n      dup14\n        /* \"#utility.yul\":1098:1117   */\n      add\n        /* \"#utility.yul\":1077:1118   */\n      tag_695\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":1067:1118   */\n      swap5\n      pop\n        /* \"#utility.yul\":1137:1178   */\n      tag_710\n        /* \"#utility.yul\":1173:1176   */\n      0xe0\n        /* \"#utility.yul\":1162:1171   */\n      dup14\n        /* \"#utility.yul\":1158:1177   */\n      add\n        /* \"#utility.yul\":1137:1178   */\n      tag_695\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":1127:1178   */\n      swap4\n      pop\n        /* \"#utility.yul\":1197:1238   */\n      tag_711\n        /* \"#utility.yul\":1233:1236   */\n      0x0100\n        /* \"#utility.yul\":1222:1231   */\n      dup14\n        /* \"#utility.yul\":1218:1237   */\n      add\n        /* \"#utility.yul\":1197:1238   */\n      tag_695\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":1187:1238   */\n      swap3\n      pop\n        /* \"#utility.yul\":1257:1298   */\n      tag_712\n        /* \"#utility.yul\":1293:1296   */\n      0x0120\n        /* \"#utility.yul\":1282:1291   */\n      dup14\n        /* \"#utility.yul\":1278:1297   */\n      add\n        /* \"#utility.yul\":1257:1298   */\n      tag_695\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":1247:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1318:1359   */\n      tag_713\n        /* \"#utility.yul\":1354:1357   */\n      0x0140\n        /* \"#utility.yul\":1343:1352   */\n      dup14\n        /* \"#utility.yul\":1339:1358   */\n      add\n        /* \"#utility.yul\":1318:1359   */\n      tag_695\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":1307:1359   */\n      swap1\n      pop\n        /* \"#utility.yul\":638:1365   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      swap1\n      swap4\n      swap7\n      swap10\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1370:1628   */\n    tag_280:\n      0x00\n      dup1\n        /* \"#utility.yul\":1499:1501   */\n      0x40\n        /* \"#utility.yul\":1487:1496   */\n      dup4\n        /* \"#utility.yul\":1478:1485   */\n      dup6\n        /* \"#utility.yul\":1474:1497   */\n      sub\n        /* \"#utility.yul\":1470:1502   */\n      slt\n        /* \"#utility.yul\":1467:1469   */\n      iszero\n      tag_715\n      jumpi\n        /* \"#utility.yul\":1520:1526   */\n      dup2\n        /* \"#utility.yul\":1512:1518   */\n      dup3\n        /* \"#utility.yul\":1505:1527   */\n      revert\n        /* \"#utility.yul\":1467:1469   */\n    tag_715:\n      pop\n      pop\n        /* \"#utility.yul\":1548:1571   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1603:1621   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1590:1622   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1457:1628   */\n      jump\t// out\n        /* \"#utility.yul\":1633:2062   */\n    tag_499:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1764:1773   */\n      dup5\n        /* \"#utility.yul\":1755:1762   */\n      dup7\n        /* \"#utility.yul\":1751:1774   */\n      sub\n        /* \"#utility.yul\":1747:1779   */\n      slt\n        /* \"#utility.yul\":1744:1746   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":1797:1803   */\n      dup3\n        /* \"#utility.yul\":1789:1795   */\n      dup4\n        /* \"#utility.yul\":1782:1804   */\n      revert\n        /* \"#utility.yul\":1744:1746   */\n    tag_717:\n        /* \"#utility.yul\":1838:1847   */\n      dup4\n        /* \"#utility.yul\":1825:1848   */\n      calldataload\n        /* \"#utility.yul\":1815:1848   */\n      swap3\n      pop\n        /* \"#utility.yul\":1895:1897   */\n      0x20\n        /* \"#utility.yul\":1884:1893   */\n      dup5\n        /* \"#utility.yul\":1880:1898   */\n      add\n        /* \"#utility.yul\":1867:1899   */\n      calldataload\n        /* \"#utility.yul\":1857:1899   */\n      swap2\n      pop\n        /* \"#utility.yul\":1949:1951   */\n      0x40\n        /* \"#utility.yul\":1938:1947   */\n      dup5\n        /* \"#utility.yul\":1934:1952   */\n      add\n        /* \"#utility.yul\":1921:1953   */\n      calldataload\n        /* \"#utility.yul\":1996:2001   */\n      dup1\n        /* \"#utility.yul\":1989:2002   */\n      iszero\n        /* \"#utility.yul\":1982:2003   */\n      iszero\n        /* \"#utility.yul\":1975:1980   */\n      dup2\n        /* \"#utility.yul\":1972:2004   */\n      eq\n        /* \"#utility.yul\":1962:1964   */\n      tag_718\n      jumpi\n        /* \"#utility.yul\":2023:2029   */\n      dup2\n        /* \"#utility.yul\":2015:2021   */\n      dup3\n        /* \"#utility.yul\":2008:2030   */\n      revert\n        /* \"#utility.yul\":1962:1964   */\n    tag_718:\n        /* \"#utility.yul\":2051:2056   */\n      dup1\n        /* \"#utility.yul\":2041:2056   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1734:2062   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2067:2270   */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2231:2263   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2213:2264   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2201:2203   */\n      0x20\n        /* \"#utility.yul\":2186:2204   */\n      add\n      swap1\n        /* \"#utility.yul\":2168:2270   */\n      jump\t// out\n        /* \"#utility.yul\":2275:2462   */\n    tag_235:\n        /* \"#utility.yul\":2440:2454   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2433:2455   */\n      iszero\n        /* \"#utility.yul\":2415:2456   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2403:2405   */\n      0x20\n        /* \"#utility.yul\":2388:2406   */\n      add\n      swap1\n        /* \"#utility.yul\":2370:2462   */\n      jump\t// out\n        /* \"#utility.yul\":2467:2869   */\n    tag_679:\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"#utility.yul\":2651:2672   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2708:2710   */\n      0x26\n        /* \"#utility.yul\":2688:2706   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2681:2711   */\n      mstore\n        /* \"#utility.yul\":2747:2781   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2742:2744   */\n      0x40\n        /* \"#utility.yul\":2727:2745   */\n      dup3\n      add\n        /* \"#utility.yul\":2720:2782   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2813:2815   */\n      0x60\n        /* \"#utility.yul\":2798:2816   */\n      dup3\n      add\n        /* \"#utility.yul\":2791:2827   */\n      mstore\n        /* \"#utility.yul\":2859:2862   */\n      0x80\n        /* \"#utility.yul\":2844:2863   */\n      add\n      swap1\n        /* \"#utility.yul\":2641:2869   */\n      jump\t// out\n        /* \"#utility.yul\":2874:3230   */\n    tag_691:\n        /* \"#utility.yul\":3076:3078   */\n      0x20\n        /* \"#utility.yul\":3058:3079   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3095:3113   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3088:3118   */\n      mstore\n        /* \"#utility.yul\":3154:3188   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3149:3151   */\n      0x40\n        /* \"#utility.yul\":3134:3152   */\n      dup3\n      add\n        /* \"#utility.yul\":3127:3189   */\n      mstore\n        /* \"#utility.yul\":3221:3223   */\n      0x60\n        /* \"#utility.yul\":3206:3224   */\n      add\n      swap1\n        /* \"#utility.yul\":3048:3230   */\n      jump\t// out\n        /* \"#utility.yul\":3235:3412   */\n    tag_161:\n        /* \"#utility.yul\":3381:3406   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3369:3371   */\n      0x20\n        /* \"#utility.yul\":3354:3372   */\n      add\n      swap1\n        /* \"#utility.yul\":3336:3412   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0b3f8da33925ef6f5ec35c2610fe90c524090736371bcafe9008ceba454f56964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0x1 SSTORE PUSH1 0x32 PUSH1 0x2 SSTORE PUSH1 0x32 PUSH1 0x3 SSTORE PUSH3 0x30D40 PUSH1 0x4 SSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x6 SSTORE PUSH1 0x2 PUSH1 0x7 SSTORE PUSH1 0x4 PUSH1 0x8 SSTORE PUSH1 0xB4 PUSH1 0x9 SSTORE PUSH1 0xB4 PUSH1 0xA SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0xB SSTORE PUSH7 0x2386F26FC10000 PUSH1 0xC SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0xD SSTORE PUSH7 0x2386F26FC10000 PUSH1 0xE SSTORE PUSH2 0x190 PUSH1 0xF SSTORE PUSH1 0x1 PUSH1 0x10 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x384 PUSH1 0x11 SSTORE PUSH2 0x3E8 PUSH1 0x12 SSTORE PUSH1 0x19 PUSH1 0x13 SSTORE PUSH1 0x4 PUSH1 0x14 SSTORE PUSH1 0x3 PUSH1 0x15 SSTORE PUSH2 0xE10 PUSH1 0x16 SSTORE PUSH1 0x1 PUSH1 0x17 SSTORE PUSH1 0x2 PUSH1 0x18 SSTORE PUSH1 0x4 PUSH1 0x19 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x1A SSTORE PUSH2 0x190 PUSH1 0x1B SSTORE PUSH1 0xB4 PUSH1 0x1C SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x1D SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x1E SSTORE PUSH1 0x1 PUSH1 0x1F SSTORE PUSH1 0x2 PUSH1 0x20 SSTORE PUSH1 0x4 PUSH1 0x21 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x22 SSTORE PUSH2 0x190 PUSH1 0x23 SSTORE PUSH1 0xB4 PUSH1 0x24 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x25 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x26 SSTORE PUSH1 0x1 PUSH1 0x27 SSTORE PUSH1 0x2 PUSH1 0x28 SSTORE PUSH1 0x4 PUSH1 0x29 SSTORE PUSH9 0x15AF1D78B58C40000 PUSH1 0x2A SSTORE PUSH2 0x190 PUSH1 0x2B SSTORE PUSH1 0xB4 PUSH1 0x2C SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x2D SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x2E SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x17E PUSH2 0x188 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x176B DUP1 PUSH2 0x1EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x763 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13725D GT PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xCB3A2A88 GT PUSH2 0x1FF JUMPI DUP1 PUSH4 0xE6FDD4C0 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xF5BEC1AD GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xFBF14851 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xFBF14851 EQ PUSH2 0xBA7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xBAF JUMPI DUP1 PUSH4 0xFF622DDA EQ PUSH2 0xBB7 JUMPI DUP1 PUSH4 0xFFF5F946 EQ PUSH2 0xBBF JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xF5BEC1AD EQ PUSH2 0xB87 JUMPI DUP1 PUSH4 0xF67362FE EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0xF80DE0A0 EQ PUSH2 0xB97 JUMPI DUP1 PUSH4 0xFB50A473 EQ PUSH2 0xB9F JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xEE37F4A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xEE37F4A6 EQ PUSH2 0xB51 JUMPI DUP1 PUSH4 0xF116C4E0 EQ PUSH2 0xB64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB6C JUMPI DUP1 PUSH4 0xF4E20B9C EQ PUSH2 0xB7F JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xE6FDD4C0 EQ PUSH2 0xB31 JUMPI DUP1 PUSH4 0xE9704F81 EQ PUSH2 0xB39 JUMPI DUP1 PUSH4 0xE992DCA7 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xEA19733C EQ PUSH2 0xB49 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xDFECEED7 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xE3DFC0B2 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xE3DFC0B2 EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0xE5F14824 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xE66D543A EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xE68C9C30 EQ PUSH2 0xB29 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xDFECEED7 EQ PUSH2 0xAE6 JUMPI DUP1 PUSH4 0xE0DE3D7C EQ PUSH2 0xAEE JUMPI DUP1 PUSH4 0xE168063C EQ PUSH2 0xAF6 JUMPI DUP1 PUSH4 0xE3115D3C EQ PUSH2 0xB09 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xD4EFD2BA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xD4EFD2BA EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xD81109CE EQ PUSH2 0xACE JUMPI DUP1 PUSH4 0xD8645D37 EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0xDC7048C1 EQ PUSH2 0xADE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xCB3A2A88 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD0EED967 EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0xD1A89A46 EQ PUSH2 0xABE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xABB10B9B GT PUSH2 0x2EF JUMPI DUP1 PUSH4 0xBE250988 GT PUSH2 0x282 JUMPI DUP1 PUSH4 0xC6EACBFE GT PUSH2 0x251 JUMPI DUP1 PUSH4 0xC6EACBFE EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0xC7761FAB EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0xC95B53C5 EQ PUSH2 0xA9E JUMPI DUP1 PUSH4 0xCA64F9E7 EQ PUSH2 0xAA6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xBE250988 EQ PUSH2 0xA6E JUMPI DUP1 PUSH4 0xBF09FF70 EQ PUSH2 0xA76 JUMPI DUP1 PUSH4 0xBF34F749 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0xC4A306F8 EQ PUSH2 0xA86 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0xB45D9D8D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB6118450 EQ PUSH2 0xA56 JUMPI DUP1 PUSH4 0xB6C6EC02 EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0xBD40EF4C EQ PUSH2 0xA66 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xABB10B9B EQ PUSH2 0xA2E JUMPI DUP1 PUSH4 0xAC846E79 EQ PUSH2 0xA36 JUMPI DUP1 PUSH4 0xB1562F67 EQ PUSH2 0xA3E JUMPI DUP1 PUSH4 0xB38E885E EQ PUSH2 0xA46 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x995ADBDD GT PUSH2 0x367 JUMPI DUP1 PUSH4 0xA1A4575A GT PUSH2 0x336 JUMPI DUP1 PUSH4 0xA1A4575A EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xA327181B EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xA35B3B09 EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xAB43E78D EQ PUSH2 0xA26 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x995ADBDD EQ PUSH2 0x9EE JUMPI DUP1 PUSH4 0x9A175938 EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0x9D1F2ADA EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x9FB491F6 EQ PUSH2 0xA06 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x90D10B6E GT PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x90D10B6E EQ PUSH2 0x9CE JUMPI DUP1 PUSH4 0x9279E9D4 EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0x98A54E2B EQ PUSH2 0x9DE JUMPI DUP1 PUSH4 0x9904ED8D EQ PUSH2 0x9E6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x8A13725D EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9BE JUMPI DUP1 PUSH4 0x90CC59EB EQ PUSH2 0x9C6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x49B46787 GT PUSH2 0x59E JUMPI DUP1 PUSH4 0x728D23AB GT PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x8360034D GT PUSH2 0x457 JUMPI DUP1 PUSH4 0x8724450F GT PUSH2 0x426 JUMPI DUP1 PUSH4 0x8724450F EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x87CE6311 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x893B2A76 EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0x89B212D3 EQ PUSH2 0x9AE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x8360034D EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0x83CC6EF2 EQ PUSH2 0x97E JUMPI DUP1 PUSH4 0x849F9F0A EQ PUSH2 0x986 JUMPI DUP1 PUSH4 0x86B0B4C5 EQ PUSH2 0x98E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x7A0EC25B GT PUSH2 0x493 JUMPI DUP1 PUSH4 0x7A0EC25B EQ PUSH2 0x956 JUMPI DUP1 PUSH4 0x7A34DA67 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0x7D630CB0 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0x7E8603E9 EQ PUSH2 0x96E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x728D23AB EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x72E54030 EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x75DC6130 EQ PUSH2 0x93B JUMPI DUP1 PUSH4 0x779231B2 EQ PUSH2 0x94E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x557C1ABE GT PUSH2 0x53C JUMPI DUP1 PUSH4 0x61879075 GT PUSH2 0x50B JUMPI DUP1 PUSH4 0x61879075 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x6785F847 EQ PUSH2 0x913 JUMPI DUP1 PUSH4 0x6A8E0ECE EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x923 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x557C1ABE EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0x55A35F5C EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x5CB361F6 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0x5D1C3182 EQ PUSH2 0x8F8 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x4ED60B2A GT PUSH2 0x578 JUMPI DUP1 PUSH4 0x4ED60B2A EQ PUSH2 0x8B5 JUMPI DUP1 PUSH4 0x51912F29 EQ PUSH2 0x8BD JUMPI DUP1 PUSH4 0x531780BB EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0x5492F302 EQ PUSH2 0x8CD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x49B46787 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0x4E5638F5 EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0x4E87C5A8 EQ PUSH2 0x8AD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2B0AFAB3 GT PUSH2 0x68E JUMPI DUP1 PUSH4 0x3692616A GT PUSH2 0x621 JUMPI DUP1 PUSH4 0x42DF5641 GT PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x42DF5641 EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0x444D62B6 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x463444B7 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x484DF80A EQ PUSH2 0x895 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x3692616A EQ PUSH2 0x850 JUMPI DUP1 PUSH4 0x36FC43FC EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0x386D0976 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x3968EC84 EQ PUSH2 0x875 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2E2F93F3 GT PUSH2 0x65D JUMPI DUP1 PUSH4 0x2E2F93F3 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0x30C0BB79 EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0x31911C91 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0x34C37E21 EQ PUSH2 0x848 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2B0AFAB3 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x2BE05960 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x2BF8ABB3 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x2D09A8E3 EQ PUSH2 0x81D JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xA5A4C20 GT PUSH2 0x706 JUMPI DUP1 PUSH4 0x175BF630 GT PUSH2 0x6D5 JUMPI DUP1 PUSH4 0x175BF630 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x1D0FB88E EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x29A47BC7 EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x29E3DD1F EQ PUSH2 0x7FD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xA5A4C20 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xB08BFD9 EQ PUSH2 0x7CD JUMPI DUP1 PUSH4 0xF1F0FFE EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xF78CC76 EQ PUSH2 0x7DD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x6606D67 GT PUSH2 0x742 JUMPI DUP1 PUSH4 0x6606D67 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x855D151 EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x8E7F0DB EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x92A5CCE EQ PUSH2 0x7BB JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH3 0x653FF8 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x363A1BF EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0x4E76C8F EQ PUSH2 0x78E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x770 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xC06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x770 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x796 PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x82B CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x796 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x860 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x860 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x796 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x8EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x949 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x796 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x796 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11EA JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB04 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH2 0x770 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB7A CALLDATASIZE PUSH1 0x4 PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x27 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x37 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2D SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC0E PUSH2 0x149A JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x2A SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2C SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x25 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC74 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND ISZERO PUSH2 0xC9F JUMPI PUSH1 0x30 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0xCCA JUMPI PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x31 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xD20 JUMPI PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xD4B JUMPI PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD76 JUMPI PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xDCC JUMPI PUSH1 0x38 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x39 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE22 JUMPI PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xE4D JUMPI PUSH1 0x2F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x25 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x29 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x20 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x39 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2E SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x27 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF0D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xF1C JUMPI PUSH1 0x27 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xF2B JUMPI PUSH1 0x2A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xF3A JUMPI PUSH1 0x28 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xF49 JUMPI PUSH1 0x29 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0xF58 JUMPI PUSH1 0x2B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0xF67 JUMPI PUSH1 0x2C DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0xF76 JUMPI PUSH1 0x2E DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x2D DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x28 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xFAC JUMPI PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x2 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xFCA JUMPI PUSH1 0x3 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFED PUSH2 0x149A JUMP JUMPDEST PUSH2 0xFF7 PUSH1 0x0 PUSH2 0x14D9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x101C JUMPI PUSH1 0x1F DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x102B JUMPI PUSH1 0x22 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x103A JUMPI PUSH1 0x20 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x1049 JUMPI PUSH1 0x21 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x1058 JUMPI PUSH1 0x23 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x1067 JUMPI PUSH1 0x24 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x1076 JUMPI PUSH1 0x26 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x25 SSTORE POP JUMP JUMPDEST PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x30 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x26 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2D SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1E SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x23 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x31 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x28 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x29 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x36 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x39 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x30 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x36 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x1234 JUMPI PUSH1 0x17 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x1243 JUMPI PUSH1 0x1A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x1252 JUMPI PUSH1 0x18 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x1261 JUMPI PUSH1 0x19 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x1270 JUMPI PUSH1 0x1B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x127F JUMPI PUSH1 0x1C DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x128E JUMPI PUSH1 0x1E DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x1D SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x21 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x31 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E4 PUSH2 0x149A JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0x12F3 JUMPI PUSH1 0x5 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0x1302 JUMPI PUSH1 0x6 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x3 EQ ISZERO PUSH2 0x1311 JUMPI PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x4 EQ ISZERO PUSH2 0x1320 JUMPI PUSH1 0x8 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x5 EQ ISZERO PUSH2 0x132F JUMPI PUSH1 0x9 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x6 EQ ISZERO PUSH2 0x133E JUMPI PUSH1 0xA DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x7 EQ ISZERO PUSH2 0x134D JUMPI PUSH1 0xB DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x8 EQ ISZERO PUSH2 0x135C JUMPI PUSH1 0xC DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x9 EQ ISZERO PUSH2 0x136B JUMPI PUSH1 0xD DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA EQ ISZERO PUSH2 0x137A JUMPI PUSH1 0xE DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xB EQ ISZERO PUSH2 0x1389 JUMPI PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xC EQ ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xD EQ ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x11 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xE EQ ISZERO PUSH2 0x13BF JUMPI PUSH1 0x12 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xF EQ ISZERO PUSH2 0x13CE JUMPI PUSH1 0x13 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x10 EQ ISZERO PUSH2 0x13DD JUMPI PUSH1 0x14 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x11 EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x15 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x12 EQ ISZERO PUSH2 0x13FB JUMPI PUSH1 0x16 DUP3 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x140E PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x143D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1446 DUP2 PUSH2 0x14D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x37 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14A2 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B3 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1563 DUP3 PUSH2 0x152D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x158B JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x1594 DUP13 PUSH2 0x152D JUMP JUMPDEST SWAP11 POP PUSH2 0x15A2 PUSH1 0x20 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP10 POP PUSH2 0x15B0 PUSH1 0x40 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP9 POP PUSH2 0x15BE PUSH1 0x60 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP8 POP PUSH2 0x15CC PUSH1 0x80 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP7 POP PUSH2 0x15DA PUSH1 0xA0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP6 POP PUSH2 0x15E8 PUSH1 0xC0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP5 POP PUSH2 0x15F6 PUSH1 0xE0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP4 POP PUSH2 0x1605 PUSH2 0x100 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP3 POP PUSH2 0x1614 PUSH2 0x120 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP2 POP PUSH2 0x1623 PUSH2 0x140 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1647 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1687 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xB3 0xF8 0xDA CALLER SWAP3 0x5E 0xF6 CREATE2 0xEC CALLDATALOAD 0xC2 PUSH2 0xFE9 0xC MSTORE BLOCKHASH SWAP1 PUSH20 0x6371BCAFE9008CEBA454F56964736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "351:23009:5:-:0;;;494:4;459:39;;535:2;505:32;;587:2;547:42;;645:6;599:52;;749:1;711:39;;789:15;757:47;;862:1;812:51;;923:1;873:51;;975:3;931:47;;1029:3;985:47;;1088:14;1046:56;;1149:15;1109:55;;1219:14;1171:62;;1286:15;1240:61;;1386:3;1338:51;;1430:4;1396:38;;;;;;;;;;;;;;;;;;;;1483:5;1441:47;;1558:4;1508:54;;1621:2;1569:54;;1666:1;1630:37;;1715:1;1674:42;;1779:4;1727:56;;1903:1;1859:45;;1968:1;1912:57;;2033:1;1977:57;;2082:15;2044:53;;2155:3;2105:53;;2215:3;2165:53;;2281:14;2227:68;;2354:15;2302:67;;2470:1;2428:43;;2533:1;2479:55;;2596:1;2542:55;;2643:15;2607:51;;2714:3;2666:51;;2772:3;2724:51;;2836:14;2784:66;;2907:15;2857:65;;3022:1;2979:44;;3086:1;3031:56;;3150:1;3095:56;;3198:15;3161:52;;3270:3;3221:52;;3329:3;3280:52;;3394:14;3341:67;;3466:15;3415:66;;351:23009;;;;;;;;;-1:-1:-1;936:32:0;955:12;:10;:12::i;:::-;936:18;:32::i;:::-;351:23009:5;;640:96:2;719:10;640:96;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;351:23009:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3414:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "167:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "179:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "169:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "169:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "152:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "157:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "148:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "148:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "161:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "144:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "144:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:50:6"
															},
															"nodeType": "YulIf",
															"src": "113:2:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:6",
														"type": ""
													}
												],
												"src": "14:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "264:128:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "310:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "319:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "327:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "312:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "312:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "312:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "285:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "281:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "306:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "277:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:32:6"
															},
															"nodeType": "YulIf",
															"src": "274:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "376:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "355:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "230:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "241:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "253:6:6",
														"type": ""
													}
												],
												"src": "194:198:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:727:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "685:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "694:6:6"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "702:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "687:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "687:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "687:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "659:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "668:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "655:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "655:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "680:3:6",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:33:6"
															},
															"nodeType": "YulIf",
															"src": "648:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "720:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "751:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "730:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "730:31:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "770:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "816:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "801:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "801:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "780:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "780:40:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "829:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "864:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "875:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "860:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "839:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:40:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "829:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "888:50:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "934:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "919:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "898:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:40:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "888:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "947:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "982:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "993:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "978:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "957:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:41:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "947:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1007:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1053:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1017:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:41:6"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1007:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1102:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1113:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1098:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1077:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:41:6"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1127:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1173:3:6",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1158:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1158:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1137:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:41:6"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1233:3:6",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1197:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:41:6"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1247:51:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1282:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1293:3:6",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1257:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:41:6"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1307:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1354:3:6",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1339:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1318:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:41:6"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nodeType": "YulIdentifier",
																	"src": "1307:7:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "523:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "534:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "546:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "554:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "562:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "570:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "578:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "594:6:6",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "602:6:6",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "610:6:6",
														"type": ""
													},
													{
														"name": "value9",
														"nodeType": "YulTypedName",
														"src": "618:6:6",
														"type": ""
													},
													{
														"name": "value10",
														"nodeType": "YulTypedName",
														"src": "626:7:6",
														"type": ""
													}
												],
												"src": "397:968:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1457:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1503:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1512:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1520:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1505:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1505:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1478:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1487:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1474:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1499:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1470:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:32:6"
															},
															"nodeType": "YulIf",
															"src": "1467:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1538:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1561:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1548:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1548:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1538:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1580:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1607:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1618:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1603:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1603:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1590:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1415:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1426:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1438:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1446:6:6",
														"type": ""
													}
												],
												"src": "1370:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1734:328:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1780:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1789:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1797:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1782:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1782:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1782:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1755:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1764:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1751:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1751:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1747:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:32:6"
															},
															"nodeType": "YulIf",
															"src": "1744:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1815:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1825:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1825:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1857:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1895:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1880:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1867:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1908:45:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1938:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1949:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1921:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1921:32:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1912:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2006:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2015:6:6"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2023:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2008:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2008:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2008:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1975:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1996:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1989:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1989:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1982:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1982:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1972:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:40:6"
															},
															"nodeType": "YulIf",
															"src": "1962:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2051:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1684:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1695:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1707:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1715:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1723:6:6",
														"type": ""
													}
												],
												"src": "1633:429:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2178:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2201:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2186:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2178:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2220:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2235:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2251:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2256:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2247:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2247:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2260:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2243:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2243:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2231:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2213:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2213:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2137:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2148:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2159:4:6",
														"type": ""
													}
												],
												"src": "2067:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2380:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2447:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2440:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2440:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2433:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2339:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2350:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2361:4:6",
														"type": ""
													}
												],
												"src": "2275:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2641:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2658:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2669:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2703:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2681:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2681:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2747:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2720:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2802:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2813:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2798:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2798:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2818:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2836:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2848:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2844:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2836:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2618:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2632:4:6",
														"type": ""
													}
												],
												"src": "2467:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3048:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3065:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3076:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3058:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3058:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3110:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3115:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3088:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3088:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3088:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3149:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3154:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3127:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3210:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3206:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3198:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3025:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3039:4:6",
														"type": ""
													}
												],
												"src": "2874:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3336:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3346:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3358:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3369:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3346:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3388:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3399:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3381:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3381:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3305:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3316:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3327:4:6",
														"type": ""
													}
												],
												"src": "3235:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := abi_decode_t_address(add(headStart, 64))\n        value3 := abi_decode_t_address(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n        value6 := abi_decode_t_address(add(headStart, 192))\n        value7 := abi_decode_t_address(add(headStart, 224))\n        value8 := abi_decode_t_address(add(headStart, 256))\n        value9 := abi_decode_t_address(add(headStart, 288))\n        value10 := abi_decode_t_address(add(headStart, 320))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106107635760003560e01c80638a13725d116103c9578063cb3a2a88116101ff578063e6fdd4c011610125578063f5bec1ad116100b8578063fbf1485111610087578063fbf1485114610ba7578063fc0c546a14610baf578063ff622dda14610bb7578063fff5f94614610bbf57610763565b8063f5bec1ad14610b87578063f67362fe14610b8f578063f80de0a014610b97578063fb50a47314610b9f57610763565b8063ee37f4a6116100f4578063ee37f4a614610b51578063f116c4e014610b64578063f2fde38b14610b6c578063f4e20b9c14610b7f57610763565b8063e6fdd4c014610b31578063e9704f8114610b39578063e992dca714610b41578063ea19733c14610b4957610763565b8063dfeceed71161019d578063e3dfc0b21161016c578063e3dfc0b214610b11578063e5f1482414610b19578063e66d543a14610b21578063e68c9c3014610b2957610763565b8063dfeceed714610ae6578063e0de3d7c14610aee578063e168063c14610af6578063e3115d3c14610b0957610763565b8063d4efd2ba116101d9578063d4efd2ba14610ac6578063d81109ce14610ace578063d8645d3714610ad6578063dc7048c114610ade57610763565b8063cb3a2a8814610aae578063d0eed96714610ab6578063d1a89a4614610abe57610763565b8063abb10b9b116102ef578063be25098811610282578063c6eacbfe11610251578063c6eacbfe14610a8e578063c7761fab14610a96578063c95b53c514610a9e578063ca64f9e714610aa657610763565b8063be25098814610a6e578063bf09ff7014610a76578063bf34f74914610a7e578063c4a306f814610a8657610763565b8063b45d9d8d116102be578063b45d9d8d14610a4e578063b611845014610a56578063b6c6ec0214610a5e578063bd40ef4c14610a6657610763565b8063abb10b9b14610a2e578063ac846e7914610a36578063b1562f6714610a3e578063b38e885e14610a4657610763565b8063995adbdd11610367578063a1a4575a11610336578063a1a4575a14610a0e578063a327181b14610a16578063a35b3b0914610a1e578063ab43e78d14610a2657610763565b8063995adbdd146109ee5780639a175938146109f65780639d1f2ada146109fe5780639fb491f614610a0657610763565b806390d10b6e116103a357806390d10b6e146109ce5780639279e9d4146109d657806398a54e2b146109de5780639904ed8d146109e657610763565b80638a13725d146109b65780638da5cb5b146109be57806390cc59eb146109c657610763565b806349b467871161059e578063728d23ab116104c45780638360034d116104575780638724450f116104265780638724450f1461099657806387ce63111461099e578063893b2a76146109a657806389b212d3146109ae57610763565b80638360034d1461097657806383cc6ef21461097e578063849f9f0a1461098657806386b0b4c51461098e57610763565b80637a0ec25b116104935780637a0ec25b146109565780637a34da671461095e5780637d630cb0146109665780637e8603e91461096e57610763565b8063728d23ab1461092b57806372e540301461093357806375dc61301461093b578063779231b21461094e57610763565b8063557c1abe1161053c578063618790751161050b57806361879075146109005780636785f847146109135780636a8e0ece1461091b578063715018a61461092357610763565b8063557c1abe146108d557806355a35f5c146108dd5780635cb361f6146108f05780635d1c3182146108f857610763565b80634ed60b2a116105785780634ed60b2a146108b557806351912f29146108bd578063531780bb146108c55780635492f302146108cd57610763565b806349b467871461089d5780634e5638f5146108a55780634e87c5a8146108ad57610763565b80632b0afab31161068e5780633692616a1161062157806342df5641116105f057806342df56411461087d578063444d62b614610885578063463444b71461088d578063484df80a1461089557610763565b80633692616a1461085057806336fc43fc14610858578063386d09761461086d5780633968ec841461087557610763565b80632e2f93f31161065d5780632e2f93f31461083057806330c0bb791461083857806331911c911461084057806334c37e211461084857610763565b80632b0afab3146108055780632be059601461080d5780632bf8abb3146108155780632d09a8e31461081d57610763565b80630a5a4c2011610706578063175bf630116106d5578063175bf630146107e55780631d0fb88e146107ed57806329a47bc7146107f557806329e3dd1f146107fd57610763565b80630a5a4c20146107c55780630b08bfd9146107cd5780630f1f0ffe146107d55780630f78cc76146107dd57610763565b806306606d671161074257806306606d67146107a35780630855d151146107ab57806308e7f0db146107b3578063092a5cce146107bb57610763565b8062653ff8146107685780630363a1bf1461078657806304e76c8f1461078e575b600080fd5b610770610bc7565b60405161077d919061172c565b60405180910390f35b610770610bcd565b610796610bd3565b60405161077d9190611692565b610796610be2565b610796610bf1565b610770610c00565b6107c3610c06565b005b610770610c21565b610770610c27565b610770610c2d565b610770610c33565b610770610c39565b610770610c3f565b610796610c45565b610770610c54565b610770610c5a565b610770610c60565b610770610c66565b6107c361082b36600461156a565b610c6c565b610796610e5a565b610770610e69565b610770610e6f565b610770610e75565b610770610e7b565b610860610e81565b60405161077d91906116a6565b610770610e8a565b610770610e90565b610770610e96565b610770610e9c565b610796610ea2565b610770610eb1565b610770610eb7565b610770610ebd565b610860610ec3565b610770610ecc565b610796610ed2565b610770610ee1565b610796610ee7565b610796610ef6565b6107c36108eb366004611635565b610f05565b610770610f89565b610770610f8f565b6107c361090e366004611635565b610f95565b610770610fd9565b610770610fdf565b6107c3610fe5565b610770610ff9565b610770610fff565b6107c3610949366004611635565b611005565b610770611085565b61079661108b565b61079661109a565b6107706110a9565b6107706110af565b6107706110b5565b6107966110bb565b6107706110ca565b6107706110d0565b6107706110d6565b6107706110dc565b6107706110e2565b6107706110e8565b6107706110ee565b6107966110f4565b610770611103565b610770611109565b61077061110f565b610770611115565b61079661111b565b61077061112a565b610770611130565b610770611136565b61077061113c565b610770611142565b610770611148565b61077061114e565b610796611154565b610770611163565b610770611169565b61077061116f565b610770611175565b61079661117b565b61077061118a565b610796611190565b61077061119f565b6107706111a5565b6107706111ab565b6107706111b1565b6107706111b7565b6107706111bd565b6107706111c3565b6107706111c9565b6107966111cf565b6107706111de565b6107706111e4565b6107706111ea565b6107706111f0565b6107706111f6565b6107966111fc565b61077061120b565b610770611211565b610770611217565b6107c3610b04366004611635565b61121d565b61077061129d565b6107706112a3565b6107706112a9565b6107706112af565b6107706112b5565b6107706112bb565b6107706112c1565b6107966112c7565b6107706112d6565b6107c3610b5f366004611656565b6112dc565b610770611400565b6107c3610b7a366004611549565b611406565b610770611449565b61077061144f565b610796611455565b610770611464565b61077061146a565b610796611470565b61079661147f565b61077061148e565b610770611494565b60065481565b60275490565b6033546001600160a01b031690565b6037546001600160a01b031681565b6032546001600160a01b031690565b602d5481565b610c0e61149a565b610c166110f4565b6001600160a01b0316ff5b602a5481565b600e5490565b60165490565b60115490565b60175481565b600a5481565b6032546001600160a01b031681565b602c5490565b601c5490565b60265481565b60255481565b610c7461149a565b6001600160a01b038b1615610c9f57603080546001600160a01b0319166001600160a01b038d161790555b6001600160a01b038a1615610cca57603280546001600160a01b0319166001600160a01b038c161790555b6001600160a01b03891615610cf557603180546001600160a01b0319166001600160a01b038b161790555b6001600160a01b03881615610d2057603380546001600160a01b0319166001600160a01b038a161790555b6001600160a01b03871615610d4b57603480546001600160a01b0319166001600160a01b0389161790555b6001600160a01b03851615610d7657603780546001600160a01b0319166001600160a01b0387161790555b6001600160a01b03861615610da157603680546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03841615610dcc57603880546001600160a01b0319166001600160a01b0386161790555b6001600160a01b03831615610df757603980546001600160a01b0319166001600160a01b0385161790555b6001600160a01b03821615610e2257603580546001600160a01b0319166001600160a01b0384161790555b6001600160a01b03811615610e4d57602f80546001600160a01b0319166001600160a01b0383161790555b5050505050505050505050565b602f546001600160a01b031690565b600b5490565b60195481565b601d5481565b60095490565b60105460ff1681565b60255490565b60295490565b601a5481565b60205481565b6039546001600160a01b031690565b601b5490565b602e5490565b60045481565b60105460ff1690565b60275481565b6033546001600160a01b031681565b602b5481565b6034546001600160a01b031690565b6035546001600160a01b031690565b610f0d61149a565b8160011415610f1c5760278190555b8160021415610f2b57602a8190555b8160031415610f3a5760288190555b8160041415610f495760298190555b8160051415610f5857602b8190555b8160061415610f6757602c8190555b8160071415610f7657602e8190555b8160081415610f8557602d8190555b5050565b600c5481565b60285481565b610f9d61149a565b8160011415610fac5760018190555b8160021415610fbb5760028190555b8160031415610fca5760038190555b8160041415610f855760045550565b601b5481565b601e5481565b610fed61149a565b610ff760006114d9565b565b60185481565b600a5490565b61100d61149a565b816001141561101c57601f8190555b816002141561102b5760228190555b816003141561103a5760208190555b81600414156110495760218190555b81600514156110585760238190555b81600614156110675760248190555b81600714156110765760268190555b8160081415610f855760255550565b60225481565b6038546001600160a01b031690565b6034546001600160a01b031681565b60035490565b60245481565b602c5481565b6030546001600160a01b031681565b60265490565b600e5481565b600d5481565b60115481565b602d5490565b601e5490565b60245490565b6000546001600160a01b031690565b60235490565b60035481565b602b5490565b60015490565b6031546001600160a01b031681565b60285490565b601c5481565b60055490565b60155490565b60205490565b60015481565b60085481565b6035546001600160a01b031681565b600c5490565b60295481565b602a5490565b60125490565b6036546001600160a01b031690565b60145481565b6039546001600160a01b031681565b60075490565b60135490565b60135481565b60225490565b600f5490565b60055481565b60025481565b601f5481565b6030546001600160a01b031690565b601f5490565b60165481565b60175490565b60155481565b600b5481565b6036546001600160a01b031681565b60195490565b60085490565b60125481565b61122561149a565b81600114156112345760178190555b816002141561124357601a8190555b81600314156112525760188190555b81600414156112615760198190555b816005141561127057601b8190555b816006141561127f57601c8190555b816007141561128e57601e8190555b8160081415610f8557601d5550565b60045490565b601a5490565b600f5481565b60145490565b60215490565b60095481565b60235481565b6031546001600160a01b031690565b60025490565b6112e461149a565b82600114156112f35760058290555b82600214156113025760068290555b82600314156113115760078290555b82600414156113205760088290555b826005141561132f5760098290555b826006141561133e57600a8290555b826007141561134d57600b8290555b826008141561135c57600c8290555b826009141561136b57600d8290555b82600a141561137a57600e8290555b82600b141561138957600f8290555b82600c14156113a1576010805460ff19168215151790555b82600d14156113b05760118290555b82600e14156113bf5760128290555b82600f14156113ce5760138290555b82601014156113dd5760148290555b82601114156113ec5760158290555b82601214156113fb5760168290555b505050565b601d5490565b61140e61149a565b6001600160a01b03811661143d5760405162461bcd60e51b8152600401611434906116b1565b60405180910390fd5b611446816114d9565b50565b60215481565b602e5481565b6037546001600160a01b031690565b600d5490565b60075481565b6038546001600160a01b031681565b602f546001600160a01b031681565b60065490565b60185490565b6114a2611529565b6001600160a01b03166114b36110f4565b6001600160a01b031614610ff75760405162461bcd60e51b8152600401611434906116f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b80356001600160a01b038116811461154457600080fd5b919050565b60006020828403121561155a578081fd5b6115638261152d565b9392505050565b60008060008060008060008060008060006101608c8e03121561158b578687fd5b6115948c61152d565b9a506115a260208d0161152d565b99506115b060408d0161152d565b98506115be60608d0161152d565b97506115cc60808d0161152d565b96506115da60a08d0161152d565b95506115e860c08d0161152d565b94506115f660e08d0161152d565b93506116056101008d0161152d565b92506116146101208d0161152d565b91506116236101408d0161152d565b90509295989b509295989b9093969950565b60008060408385031215611647578182fd5b50508035926020909101359150565b60008060006060848603121561166a578283fd5b833592506020840135915060408401358015158114611687578182fd5b809150509250925092565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b9081526020019056fea2646970667358221220a0b3f8da33925ef6f5ec35c2610fe90c524090736371bcafe9008ceba454f56964736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x763 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A13725D GT PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xCB3A2A88 GT PUSH2 0x1FF JUMPI DUP1 PUSH4 0xE6FDD4C0 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xF5BEC1AD GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xFBF14851 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xFBF14851 EQ PUSH2 0xBA7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xBAF JUMPI DUP1 PUSH4 0xFF622DDA EQ PUSH2 0xBB7 JUMPI DUP1 PUSH4 0xFFF5F946 EQ PUSH2 0xBBF JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xF5BEC1AD EQ PUSH2 0xB87 JUMPI DUP1 PUSH4 0xF67362FE EQ PUSH2 0xB8F JUMPI DUP1 PUSH4 0xF80DE0A0 EQ PUSH2 0xB97 JUMPI DUP1 PUSH4 0xFB50A473 EQ PUSH2 0xB9F JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xEE37F4A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xEE37F4A6 EQ PUSH2 0xB51 JUMPI DUP1 PUSH4 0xF116C4E0 EQ PUSH2 0xB64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB6C JUMPI DUP1 PUSH4 0xF4E20B9C EQ PUSH2 0xB7F JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xE6FDD4C0 EQ PUSH2 0xB31 JUMPI DUP1 PUSH4 0xE9704F81 EQ PUSH2 0xB39 JUMPI DUP1 PUSH4 0xE992DCA7 EQ PUSH2 0xB41 JUMPI DUP1 PUSH4 0xEA19733C EQ PUSH2 0xB49 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xDFECEED7 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xE3DFC0B2 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0xE3DFC0B2 EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0xE5F14824 EQ PUSH2 0xB19 JUMPI DUP1 PUSH4 0xE66D543A EQ PUSH2 0xB21 JUMPI DUP1 PUSH4 0xE68C9C30 EQ PUSH2 0xB29 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xDFECEED7 EQ PUSH2 0xAE6 JUMPI DUP1 PUSH4 0xE0DE3D7C EQ PUSH2 0xAEE JUMPI DUP1 PUSH4 0xE168063C EQ PUSH2 0xAF6 JUMPI DUP1 PUSH4 0xE3115D3C EQ PUSH2 0xB09 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xD4EFD2BA GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xD4EFD2BA EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xD81109CE EQ PUSH2 0xACE JUMPI DUP1 PUSH4 0xD8645D37 EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0xDC7048C1 EQ PUSH2 0xADE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xCB3A2A88 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD0EED967 EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0xD1A89A46 EQ PUSH2 0xABE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xABB10B9B GT PUSH2 0x2EF JUMPI DUP1 PUSH4 0xBE250988 GT PUSH2 0x282 JUMPI DUP1 PUSH4 0xC6EACBFE GT PUSH2 0x251 JUMPI DUP1 PUSH4 0xC6EACBFE EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0xC7761FAB EQ PUSH2 0xA96 JUMPI DUP1 PUSH4 0xC95B53C5 EQ PUSH2 0xA9E JUMPI DUP1 PUSH4 0xCA64F9E7 EQ PUSH2 0xAA6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xBE250988 EQ PUSH2 0xA6E JUMPI DUP1 PUSH4 0xBF09FF70 EQ PUSH2 0xA76 JUMPI DUP1 PUSH4 0xBF34F749 EQ PUSH2 0xA7E JUMPI DUP1 PUSH4 0xC4A306F8 EQ PUSH2 0xA86 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xB45D9D8D GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0xB45D9D8D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB6118450 EQ PUSH2 0xA56 JUMPI DUP1 PUSH4 0xB6C6EC02 EQ PUSH2 0xA5E JUMPI DUP1 PUSH4 0xBD40EF4C EQ PUSH2 0xA66 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xABB10B9B EQ PUSH2 0xA2E JUMPI DUP1 PUSH4 0xAC846E79 EQ PUSH2 0xA36 JUMPI DUP1 PUSH4 0xB1562F67 EQ PUSH2 0xA3E JUMPI DUP1 PUSH4 0xB38E885E EQ PUSH2 0xA46 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x995ADBDD GT PUSH2 0x367 JUMPI DUP1 PUSH4 0xA1A4575A GT PUSH2 0x336 JUMPI DUP1 PUSH4 0xA1A4575A EQ PUSH2 0xA0E JUMPI DUP1 PUSH4 0xA327181B EQ PUSH2 0xA16 JUMPI DUP1 PUSH4 0xA35B3B09 EQ PUSH2 0xA1E JUMPI DUP1 PUSH4 0xAB43E78D EQ PUSH2 0xA26 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x995ADBDD EQ PUSH2 0x9EE JUMPI DUP1 PUSH4 0x9A175938 EQ PUSH2 0x9F6 JUMPI DUP1 PUSH4 0x9D1F2ADA EQ PUSH2 0x9FE JUMPI DUP1 PUSH4 0x9FB491F6 EQ PUSH2 0xA06 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x90D10B6E GT PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x90D10B6E EQ PUSH2 0x9CE JUMPI DUP1 PUSH4 0x9279E9D4 EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0x98A54E2B EQ PUSH2 0x9DE JUMPI DUP1 PUSH4 0x9904ED8D EQ PUSH2 0x9E6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x8A13725D EQ PUSH2 0x9B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9BE JUMPI DUP1 PUSH4 0x90CC59EB EQ PUSH2 0x9C6 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x49B46787 GT PUSH2 0x59E JUMPI DUP1 PUSH4 0x728D23AB GT PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x8360034D GT PUSH2 0x457 JUMPI DUP1 PUSH4 0x8724450F GT PUSH2 0x426 JUMPI DUP1 PUSH4 0x8724450F EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0x87CE6311 EQ PUSH2 0x99E JUMPI DUP1 PUSH4 0x893B2A76 EQ PUSH2 0x9A6 JUMPI DUP1 PUSH4 0x89B212D3 EQ PUSH2 0x9AE JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x8360034D EQ PUSH2 0x976 JUMPI DUP1 PUSH4 0x83CC6EF2 EQ PUSH2 0x97E JUMPI DUP1 PUSH4 0x849F9F0A EQ PUSH2 0x986 JUMPI DUP1 PUSH4 0x86B0B4C5 EQ PUSH2 0x98E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x7A0EC25B GT PUSH2 0x493 JUMPI DUP1 PUSH4 0x7A0EC25B EQ PUSH2 0x956 JUMPI DUP1 PUSH4 0x7A34DA67 EQ PUSH2 0x95E JUMPI DUP1 PUSH4 0x7D630CB0 EQ PUSH2 0x966 JUMPI DUP1 PUSH4 0x7E8603E9 EQ PUSH2 0x96E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x728D23AB EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0x72E54030 EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x75DC6130 EQ PUSH2 0x93B JUMPI DUP1 PUSH4 0x779231B2 EQ PUSH2 0x94E JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x557C1ABE GT PUSH2 0x53C JUMPI DUP1 PUSH4 0x61879075 GT PUSH2 0x50B JUMPI DUP1 PUSH4 0x61879075 EQ PUSH2 0x900 JUMPI DUP1 PUSH4 0x6785F847 EQ PUSH2 0x913 JUMPI DUP1 PUSH4 0x6A8E0ECE EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x923 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x557C1ABE EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0x55A35F5C EQ PUSH2 0x8DD JUMPI DUP1 PUSH4 0x5CB361F6 EQ PUSH2 0x8F0 JUMPI DUP1 PUSH4 0x5D1C3182 EQ PUSH2 0x8F8 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x4ED60B2A GT PUSH2 0x578 JUMPI DUP1 PUSH4 0x4ED60B2A EQ PUSH2 0x8B5 JUMPI DUP1 PUSH4 0x51912F29 EQ PUSH2 0x8BD JUMPI DUP1 PUSH4 0x531780BB EQ PUSH2 0x8C5 JUMPI DUP1 PUSH4 0x5492F302 EQ PUSH2 0x8CD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x49B46787 EQ PUSH2 0x89D JUMPI DUP1 PUSH4 0x4E5638F5 EQ PUSH2 0x8A5 JUMPI DUP1 PUSH4 0x4E87C5A8 EQ PUSH2 0x8AD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2B0AFAB3 GT PUSH2 0x68E JUMPI DUP1 PUSH4 0x3692616A GT PUSH2 0x621 JUMPI DUP1 PUSH4 0x42DF5641 GT PUSH2 0x5F0 JUMPI DUP1 PUSH4 0x42DF5641 EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0x444D62B6 EQ PUSH2 0x885 JUMPI DUP1 PUSH4 0x463444B7 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x484DF80A EQ PUSH2 0x895 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x3692616A EQ PUSH2 0x850 JUMPI DUP1 PUSH4 0x36FC43FC EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0x386D0976 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x3968EC84 EQ PUSH2 0x875 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2E2F93F3 GT PUSH2 0x65D JUMPI DUP1 PUSH4 0x2E2F93F3 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0x30C0BB79 EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0x31911C91 EQ PUSH2 0x840 JUMPI DUP1 PUSH4 0x34C37E21 EQ PUSH2 0x848 JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x2B0AFAB3 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x2BE05960 EQ PUSH2 0x80D JUMPI DUP1 PUSH4 0x2BF8ABB3 EQ PUSH2 0x815 JUMPI DUP1 PUSH4 0x2D09A8E3 EQ PUSH2 0x81D JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xA5A4C20 GT PUSH2 0x706 JUMPI DUP1 PUSH4 0x175BF630 GT PUSH2 0x6D5 JUMPI DUP1 PUSH4 0x175BF630 EQ PUSH2 0x7E5 JUMPI DUP1 PUSH4 0x1D0FB88E EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x29A47BC7 EQ PUSH2 0x7F5 JUMPI DUP1 PUSH4 0x29E3DD1F EQ PUSH2 0x7FD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0xA5A4C20 EQ PUSH2 0x7C5 JUMPI DUP1 PUSH4 0xB08BFD9 EQ PUSH2 0x7CD JUMPI DUP1 PUSH4 0xF1F0FFE EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xF78CC76 EQ PUSH2 0x7DD JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH4 0x6606D67 GT PUSH2 0x742 JUMPI DUP1 PUSH4 0x6606D67 EQ PUSH2 0x7A3 JUMPI DUP1 PUSH4 0x855D151 EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0x8E7F0DB EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x92A5CCE EQ PUSH2 0x7BB JUMPI PUSH2 0x763 JUMP JUMPDEST DUP1 PUSH3 0x653FF8 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0x363A1BF EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0x4E76C8F EQ PUSH2 0x78E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x770 PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xC06 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x770 PUSH2 0xC21 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x796 PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC54 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC5A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x82B CALLDATASIZE PUSH1 0x4 PUSH2 0x156A JUMP JUMPDEST PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x796 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE75 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x860 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x860 PUSH2 0xEC3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xECC JUMP JUMPDEST PUSH2 0x796 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x8EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x90E CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFD9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFDF JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0x949 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1085 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x796 PUSH2 0x109A JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10E8 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x796 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1103 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1109 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x111B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1136 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x113C JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1169 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x116F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1175 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x119F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11A5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11B7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11BD JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x11CF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11DE JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11EA JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1217 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB04 CALLDATASIZE PUSH1 0x4 PUSH2 0x1635 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH2 0x770 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12C1 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB5F CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xB7A CALLDATASIZE PUSH1 0x4 PUSH2 0x1549 JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x144F JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1455 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x770 PUSH2 0x146A JUMP JUMPDEST PUSH2 0x796 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x796 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x770 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x770 PUSH2 0x1494 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x27 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x37 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2D SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC0E PUSH2 0x149A JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x2A SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2C SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x25 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC74 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND ISZERO PUSH2 0xC9F JUMPI PUSH1 0x30 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH2 0xCCA JUMPI PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x31 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0xD20 JUMPI PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND ISZERO PUSH2 0xD4B JUMPI PUSH1 0x34 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0xD76 JUMPI PUSH1 0x37 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND ISZERO PUSH2 0xDA1 JUMPI PUSH1 0x36 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xDCC JUMPI PUSH1 0x38 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x39 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0xE22 JUMPI PUSH1 0x35 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xE4D JUMPI PUSH1 0x2F DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x25 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x29 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH1 0x20 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x39 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2E SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x27 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF0D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xF1C JUMPI PUSH1 0x27 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xF2B JUMPI PUSH1 0x2A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xF3A JUMPI PUSH1 0x28 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xF49 JUMPI PUSH1 0x29 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0xF58 JUMPI PUSH1 0x2B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0xF67 JUMPI PUSH1 0x2C DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0xF76 JUMPI PUSH1 0x2E DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x2D DUP2 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x28 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0xFAC JUMPI PUSH1 0x1 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x2 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xFCA JUMPI PUSH1 0x3 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x4 SSTORE POP JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1E SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFED PUSH2 0x149A JUMP JUMPDEST PUSH2 0xFF7 PUSH1 0x0 PUSH2 0x14D9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x100D PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x101C JUMPI PUSH1 0x1F DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x102B JUMPI PUSH1 0x22 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x103A JUMPI PUSH1 0x20 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x1049 JUMPI PUSH1 0x21 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x1058 JUMPI PUSH1 0x23 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x1067 JUMPI PUSH1 0x24 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x1076 JUMPI PUSH1 0x26 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x25 SSTORE POP JUMP JUMPDEST PUSH1 0x22 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x34 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x30 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x26 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2D SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1E SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x23 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2B SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x31 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x28 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x29 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x36 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x39 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x22 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x30 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1F SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x36 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x149A JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x1234 JUMPI PUSH1 0x17 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x1243 JUMPI PUSH1 0x1A DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x1252 JUMPI PUSH1 0x18 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x1261 JUMPI PUSH1 0x19 DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x1270 JUMPI PUSH1 0x1B DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x127F JUMPI PUSH1 0x1C DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x128E JUMPI PUSH1 0x1E DUP2 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x8 EQ ISZERO PUSH2 0xF85 JUMPI PUSH1 0x1D SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1A SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x21 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x23 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x31 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12E4 PUSH2 0x149A JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0x12F3 JUMPI PUSH1 0x5 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0x1302 JUMPI PUSH1 0x6 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x3 EQ ISZERO PUSH2 0x1311 JUMPI PUSH1 0x7 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x4 EQ ISZERO PUSH2 0x1320 JUMPI PUSH1 0x8 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x5 EQ ISZERO PUSH2 0x132F JUMPI PUSH1 0x9 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x6 EQ ISZERO PUSH2 0x133E JUMPI PUSH1 0xA DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x7 EQ ISZERO PUSH2 0x134D JUMPI PUSH1 0xB DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x8 EQ ISZERO PUSH2 0x135C JUMPI PUSH1 0xC DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x9 EQ ISZERO PUSH2 0x136B JUMPI PUSH1 0xD DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA EQ ISZERO PUSH2 0x137A JUMPI PUSH1 0xE DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xB EQ ISZERO PUSH2 0x1389 JUMPI PUSH1 0xF DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xC EQ ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xD EQ ISZERO PUSH2 0x13B0 JUMPI PUSH1 0x11 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xE EQ ISZERO PUSH2 0x13BF JUMPI PUSH1 0x12 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xF EQ ISZERO PUSH2 0x13CE JUMPI PUSH1 0x13 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x10 EQ ISZERO PUSH2 0x13DD JUMPI PUSH1 0x14 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x11 EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x15 DUP3 SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x12 EQ ISZERO PUSH2 0x13FB JUMPI PUSH1 0x16 DUP3 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x140E PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x143D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1446 DUP2 PUSH2 0x14D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x37 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x38 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2F SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x18 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x14A2 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B3 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1563 DUP3 PUSH2 0x152D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x158B JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x1594 DUP13 PUSH2 0x152D JUMP JUMPDEST SWAP11 POP PUSH2 0x15A2 PUSH1 0x20 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP10 POP PUSH2 0x15B0 PUSH1 0x40 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP9 POP PUSH2 0x15BE PUSH1 0x60 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP8 POP PUSH2 0x15CC PUSH1 0x80 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP7 POP PUSH2 0x15DA PUSH1 0xA0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP6 POP PUSH2 0x15E8 PUSH1 0xC0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP5 POP PUSH2 0x15F6 PUSH1 0xE0 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP4 POP PUSH2 0x1605 PUSH2 0x100 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP3 POP PUSH2 0x1614 PUSH2 0x120 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP2 POP PUSH2 0x1623 PUSH2 0x140 DUP14 ADD PUSH2 0x152D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1647 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1687 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xB3 0xF8 0xDA CALLER SWAP3 0x5E 0xF6 CREATE2 0xEC CALLDATALOAD 0xC2 PUSH2 0xFE9 0xC MSTORE BLOCKHASH SWAP1 PUSH20 0x6371BCAFE9008CEBA454F56964736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "351:23009:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22263:120;;;:::i;16800:95::-;;;:::i;:::-;;;;;;;:::i;3785:31::-;;;:::i;16501:89::-;;;:::i;3341:67::-;;;:::i;8973:93::-;;;:::i;:::-;;3161:52;;;:::i;18564:124::-;;;:::i;19723:136::-;;;:::i;19081:116::-;;;:::i;1859:45::-;;;:::i;985:47::-;;;:::i;3613:25::-;;;:::i;22937:132::-;;;:::i;20616:134::-;;;:::i;2857:65::-;;;:::i;2784:66::-;;;:::i;9562:1431::-;;;;;;:::i;:::-;;:::i;17414:85::-;;;:::i;18440:118::-;;;:::i;1977:57::-;;;:::i;2227:68::-;;;:::i;18066:122::-;;;:::i;1396:38::-;;;:::i;:::-;;;;;;;:::i;21913:138::-;;;:::i;22651:142::-;;;:::i;2044:53::-;;;:::i;2479:55::-;;;:::i;17218:99::-;;;:::i;20476:134::-;;;:::i;23221:::-;;;:::i;599:52::-;;;:::i;18966:105::-;;;:::i;2979:44::-;;;:::i;3645:28::-;;;:::i;3221:52::-;;;:::i;16697:97::-;;;:::i;17323:85::-;;;:::i;14870:939::-;;;;;;:::i;:::-;;:::i;1109:55::-;;;:::i;3031:56::-;;;:::i;9078:476::-;;;;;;:::i;:::-;;:::i;2105:53::-;;;:::i;2302:67::-;;;:::i;1831:101:0:-;;;:::i;1912:57:5:-;;;:::i;18194:122::-;;;:::i;13930:930::-;;;;;;:::i;:::-;;:::i;2607:51::-;;;:::i;17115:97::-;;;:::i;3684:29::-;;;:::i;16084:112::-;;;:::i;2724:51::-;;;:::i;3280:52::-;;;:::i;3547:27::-;;;:::i;22057:132::-;;;:::i;1240:61::-;;;:::i;1171:62::-;;;:::i;1441:47::-;;;:::i;23075:140::-;;;:::i;20904:136::-;;;:::i;21777:130::-;;;:::i;1201:85:0:-;;;:::i;21641:130:5:-;;;:::i;547:42::-;;;:::i;22799:132::-;;;:::i;15881:101::-;;;:::i;3581:25::-;;;:::i;22503:142::-;;;:::i;2165:53::-;;;:::i;17570:110::-;;;:::i;19603:114::-;;;:::i;21349:140::-;;;:::i;459:39::-;;;:::i;873:51::-;;;:::i;3720:20::-;;;:::i;18322:112::-;;;:::i;3095:56::-;;;:::i;22389:108::-;;;:::i;19207:132::-;;;:::i;16905:97::-;;;:::i;1630:37::-;;;:::i;3859:30::-;;;:::i;17790:132::-;;;:::i;19349:136::-;;;:::i;1569:54::-;;;:::i;21237:106::-;;;:::i;18830:130::-;;;:::i;711:39::-;;;:::i;505:32::-;;;:::i;2428:43::-;;;:::i;16402:93::-;;;:::i;21113:118::-;;;:::i;1727:56::-;;;:::i;19932:122::-;;;:::i;1674:42::-;;;:::i;1046:56::-;;;:::i;3749:29::-;;;:::i;20326:144::-;;;:::i;17928:132::-;;;:::i;1508:54::-;;;:::i;12972:948::-;;;;;;:::i;:::-;;:::i;16202:124::-;;;:::i;20060:110::-;;;:::i;1338:51::-;;;:::i;19491:106::-;;;:::i;21495:140::-;;;:::i;931:47::-;;;:::i;2666:51::-;;;:::i;16596:95::-;;;:::i;15988:90::-;;;:::i;11013:1949::-;;;;;;:::i;:::-;;:::i;20756:142::-;;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2542:55:5:-;;;:::i;3415:66::-;;;:::i;17008:101::-;;;:::i;18694:130::-;;;:::i;812:51::-;;;:::i;3823:29::-;;;:::i;3520:20::-;;;:::i;17686:98::-;;;:::i;20176:144::-;;;:::i;757:47::-;;;;:::o;22263:120::-;22350:25;;22263:120;:::o;16800:95::-;16874:13;;-1:-1:-1;;;;;16874:13:5;16800:95;:::o;3785:31::-;;;-1:-1:-1;;;;;3785:31:5;;:::o;16501:89::-;16572:10;;-1:-1:-1;;;;;16572:10:5;16501:89;:::o;3341:67::-;;;;:::o;8973:93::-;1094:13:0;:11;:13::i;:::-;9049:7:5::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;9028:30:5::1;;3161:52:::0;;;;:::o;18564:124::-;18653:27;;18564:124;:::o;19723:136::-;19818:33;;19723:136;:::o;19081:116::-;19166:23;;19081:116;:::o;1859:45::-;;;;:::o;985:47::-;;;;:::o;3613:25::-;;;-1:-1:-1;;;;;3613:25:5;;:::o;22937:132::-;23030:31;;22937:132;:::o;20616:134::-;20710:32;;20616:134;:::o;2857:65::-;;;;:::o;2784:66::-;;;;:::o;9562:1431::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;9955:27:5;::::1;::::0;9952:86:::1;;9998:12;:28:::0;;-1:-1:-1;;;;;;9998:28:5::1;-1:-1:-1::0;;;;;9998:28:5;::::1;;::::0;;9952:86:::1;-1:-1:-1::0;;;;;10051:25:5;::::1;::::0;10048:80:::1;;10092:10;:24:::0;;-1:-1:-1;;;;;;10092:24:5::1;-1:-1:-1::0;;;;;10092:24:5;::::1;;::::0;;10048:80:::1;-1:-1:-1::0;;;;;10141:25:5;::::1;::::0;10138:80:::1;;10182:10;:24:::0;;-1:-1:-1;;;;;;10182:24:5::1;-1:-1:-1::0;;;;;10182:24:5;::::1;;::::0;;10138:80:::1;-1:-1:-1::0;;;;;10231:28:5;::::1;::::0;10228:89:::1;;10275:13;:30:::0;;-1:-1:-1;;;;;;10275:30:5::1;-1:-1:-1::0;;;;;10275:30:5;::::1;;::::0;;10228:89:::1;-1:-1:-1::0;;;;;10330:29:5;::::1;::::0;10327:92:::1;;10375:14;:32:::0;;-1:-1:-1;;;;;;10375:32:5::1;-1:-1:-1::0;;;;;10375:32:5;::::1;;::::0;;10327:92:::1;-1:-1:-1::0;;;;;10432:31:5;::::1;::::0;10429:98:::1;;10479:16;:36:::0;;-1:-1:-1;;;;;;10479:36:5::1;-1:-1:-1::0;;;;;10479:36:5;::::1;;::::0;;10429:98:::1;-1:-1:-1::0;;;;;10540:29:5;::::1;::::0;10537:92:::1;;10585:14;:32:::0;;-1:-1:-1;;;;;;10585:32:5::1;-1:-1:-1::0;;;;;10585:32:5;::::1;;::::0;;10537:92:::1;-1:-1:-1::0;;;;;10642:29:5;::::1;::::0;10639:92:::1;;10687:14;:32:::0;;-1:-1:-1;;;;;;10687:32:5::1;-1:-1:-1::0;;;;;10687:32:5;::::1;;::::0;;10639:92:::1;-1:-1:-1::0;;;;;10744:30:5;::::1;::::0;10741:95:::1;;10790:15;:34:::0;;-1:-1:-1;;;;;;10790:34:5::1;-1:-1:-1::0;;;;;10790:34:5;::::1;;::::0;;10741:95:::1;-1:-1:-1::0;;;;;10849:20:5;::::1;::::0;10846:65:::1;;10885:5;:14:::0;;-1:-1:-1;;;;;;10885:14:5::1;-1:-1:-1::0;;;;;10885:14:5;::::1;;::::0;;10846:65:::1;-1:-1:-1::0;;;;;10924:20:5;::::1;::::0;10921:65:::1;;10960:5;:14:::0;;-1:-1:-1;;;;;;10960:14:5::1;-1:-1:-1::0;;;;;10960:14:5;::::1;;::::0;;10921:65:::1;9562:1431:::0;;;;;;;;;;;:::o;17414:85::-;17486:5;;-1:-1:-1;;;;;17486:5:5;17414:85;:::o;18440:118::-;18526:24;;18440:118;:::o;1977:57::-;;;;:::o;2227:68::-;;;;:::o;18066:122::-;18154:26;;18066:122;:::o;1396:38::-;;;;;;:::o;21913:138::-;22009:34;;21913:138;:::o;22651:142::-;22749:36;;22651:142;:::o;2044:53::-;;;;:::o;2479:55::-;;;;:::o;17218:99::-;17294:15;;-1:-1:-1;;;;;17294:15:5;17218:99;:::o;20476:134::-;20570:32;;20476:134;:::o;23221:::-;23315:32;;23221:134;:::o;599:52::-;;;;:::o;18966:105::-;19044:19;;;;18966:105;:::o;2979:44::-;;;;:::o;3645:28::-;;;-1:-1:-1;;;;;3645:28:5;;:::o;3221:52::-;;;;:::o;16697:97::-;16772:14;;-1:-1:-1;;;;;16772:14:5;16697:97;:::o;17323:85::-;17395:5;;-1:-1:-1;;;;;17395:5:5;17323:85;:::o;14870:939::-;1094:13:0;:11;:13::i;:::-;14987:14:5::1;15005:1;14987:19;14984:87;;;15022:25;:37:::0;;;14984:87:::1;15084:14;15102:1;15084:19;15081:82;;;15119:19;:32:::0;;;15081:82:::1;15176:14;15194:1;15176:19;15173:99;;;15211:36;:49:::0;;;15173:99:::1;15285:14;15303:1;15285:19;15282:99;;;15320:36;:49:::0;;;15282:99:::1;15394:14;15412:1;15394:19;15391:94;;;15429:31;:44:::0;;;15391:94:::1;15498:14;15516:1;15498:19;15495:94;;;15533:31;:44:::0;;;15495:94:::1;15602:14;15620:1;15602:19;15599:95;;;15637:32;:45:::0;;;15599:95:::1;15707:14;15725:1;15707:19;15704:98;;;15742:35;:48:::0;;;15704:98:::1;14870:939:::0;;:::o;1109:55::-;;;;:::o;3031:56::-;;;;:::o;9078:476::-;1094:13:0;:11;:13::i;:::-;9193:14:5::1;9211:1;9193:19;9190:79;;;9228:17;:29:::0;;;9190:79:::1;9282:14;9300:1;9282:19;9279:74;;;9317:11;:24:::0;;;9279:74:::1;9366:14;9384:1;9366:19;9363:84;;;9401:21;:34:::0;;;9363:84:::1;9460:14;9478:1;9460:19;9457:90;;;9495:27;:40:::0;-1:-1:-1;9078:476:5:o;2105:53::-;;;;:::o;2302:67::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1912:57:5:-;;;;:::o;18194:122::-;18282:26;;18194:122;:::o;13930:930::-;1094:13:0;:11;:13::i;:::-;14046:14:5::1;14064:1;14046:19;14043:86;;;14081:24;:36:::0;;;14043:86:::1;14142:14;14160:1;14142:19;14139:81;;;14177:18;:31:::0;;;14139:81:::1;14233:14;14251:1;14233:19;14230:98;;;14268:35;:48:::0;;;14230:98:::1;14341:14;14359:1;14341:19;14338:98;;;14376:35;:48:::0;;;14338:98:::1;14449:14;14467:1;14449:19;14446:93;;;14484:30;:43:::0;;;14446:93:::1;14552:14;14570:1;14552:19;14549:93;;;14587:30;:43:::0;;;14549:93:::1;14655:14;14673:1;14655:19;14652:94;;;14690:31;:44:::0;;;14652:94:::1;14759:14;14777:1;14759:19;14756:97;;;14794:34;:47:::0;-1:-1:-1;13930:930:5:o;2607:51::-;;;;:::o;17115:97::-;17190:14;;-1:-1:-1;;;;;17190:14:5;17115:97;:::o;3684:29::-;;;-1:-1:-1;;;;;3684:29:5;;:::o;16084:112::-;16167:21;;16084:112;:::o;2724:51::-;;;;:::o;3280:52::-;;;;:::o;3547:27::-;;;-1:-1:-1;;;;;3547:27:5;;:::o;22057:132::-;22150:31;;22057:132;:::o;1240:61::-;;;;:::o;1171:62::-;;;;:::o;1441:47::-;;;;:::o;23075:140::-;23172:35;;23075:140;:::o;20904:136::-;20999:33;;20904:136;:::o;21777:130::-;21869:30;;21777:130;:::o;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;:::o;21641:130:5:-;21733:30;;21641:130;:::o;547:42::-;;;;:::o;22799:132::-;22892:31;;22799:132;:::o;15881:101::-;15957:17;;15881:101;:::o;3581:25::-;;;-1:-1:-1;;;;;3581:25:5;;:::o;22503:142::-;22601:36;;22503:142;:::o;2165:53::-;;;;:::o;17570:110::-;17652:20;;17570:110;:::o;19603:114::-;19687:22;;19603:114;:::o;21349:140::-;21446:35;;21349:140;:::o;459:39::-;;;;:::o;873:51::-;;;;:::o;3720:20::-;;;-1:-1:-1;;;;;3720:20:5;;:::o;18322:112::-;18405:21;;18322:112;:::o;3095:56::-;;;;:::o;22389:108::-;22470:19;;22389:108;:::o;19207:132::-;19300:31;;19207:132;:::o;16905:97::-;16980:14;;-1:-1:-1;;;;;16980:14:5;16905:97;:::o;1630:37::-;;;;:::o;3859:30::-;;;-1:-1:-1;;;;;3859:30:5;;:::o;17790:132::-;17883:31;;17790:132;:::o;19349:136::-;19444:33;;19349:136;:::o;1569:54::-;;;;:::o;21237:106::-;21317:18;;21237:106;:::o;18830:130::-;18922:30;;18830:130;:::o;711:39::-;;;;:::o;505:32::-;;;;:::o;2428:43::-;;;;:::o;16402:93::-;16475:12;;-1:-1:-1;;;;;16475:12:5;16402:93;:::o;21113:118::-;21199:24;;21113:118;:::o;1727:56::-;;;;:::o;19932:122::-;20020:26;;19932:122;:::o;1674:42::-;;;;:::o;1046:56::-;;;;:::o;3749:29::-;;;-1:-1:-1;;;;;3749:29:5;;:::o;20326:144::-;20425:37;;20326:144;:::o;17928:132::-;18021:31;;17928:132;:::o;1508:54::-;;;;:::o;12972:948::-;1094:13:0;:11;:13::i;:::-;13090:14:5::1;13108:1;13090:19;13087:88;;;13125:26;:38:::0;;;13087:88:::1;13188:14;13206:1;13188:19;13185:83;;;13223:20;:33:::0;;;13185:83:::1;13281:14;13299:1;13281:19;13278:100;;;13316:37;:50:::0;;;13278:100:::1;13391:14;13409:1;13391:19;13388:100;;;13426:37;:50:::0;;;13388:100:::1;13501:14;13519:1;13501:19;13498:95;;;13536:32;:45:::0;;;13498:95:::1;13606:14;13624:1;13606:19;13603:95;;;13641:32;:45:::0;;;13603:95:::1;13711:14;13729:1;13711:19;13708:96;;;13746:33;:46:::0;;;13708:96:::1;13817:14;13835:1;13817:19;13814:99;;;13852:36;:49:::0;-1:-1:-1;12972:948:5:o;16202:124::-;16291:27;;16202:124;:::o;20060:110::-;20142:20;;20060:110;:::o;1338:51::-;;;;:::o;19491:106::-;19571:18;;19491:106;:::o;21495:140::-;21592:35;;21495:140;:::o;931:47::-;;;;:::o;2666:51::-;;;;:::o;16596:95::-;16673:10;;-1:-1:-1;;;;;16673:10:5;16596:95;:::o;15988:90::-;16059:11;;15988:90;:::o;11013:1949::-;1094:13:0;:11;:13::i;:::-;11145:14:5::1;11163:1;11145:19;11142:83;;;11180:20;:33:::0;;;11142:83:::1;11238:14;11256:1;11238:19;11235:77;;;11273:14;:27:::0;;;11235:77:::1;11325:14;11343:1;11325:19;11322:94;;;11360:31;:44:::0;;;11322:94:::1;11429:14;11447:1;11429:19;11426:94;;;11464:31;:44:::0;;;11426:94:::1;11533:14;11551:1;11533:19;11530:89;;;11568:26;:39:::0;;;11530:89:::1;11632:14;11650:1;11632:19;11629:89;;;11667:26;:39:::0;;;11629:89:::1;11731:14;11749:1;11731:19;11728:87;;;11766:24;:37:::0;;;11728:87:::1;11828:14;11846:1;11828:19;11825:84;;;11863:21;:34:::0;;;11825:84:::1;11922:14;11940:1;11922:19;11919:93;;;11957:30;:43:::0;;;11919:93:::1;12025:14;12043:2;12025:20;12022:91;;;12061:27;:40:::0;;;12022:91:::1;12175:14;12193:2;12175:20;12172:93;;;12211:30;:42:::0;;;12172:93:::1;12278:14;12296:2;12278:20;12275:82;;;12314:19;:31:::0;;-1:-1:-1;;12314:31:5::1;::::0;::::1;;;::::0;;12275:82:::1;12370:14;12388:2;12370:20;12367:86;;;12406:23;:35:::0;;;12367:86:::1;12466:14;12484:2;12466:20;12463:94;;;12502:31;:43:::0;;;12463:94:::1;12570:14;12588:2;12570:20;12567:96;;;12606:33;:45:::0;;;12567:96:::1;12676:14;12694:2;12676:20;12673:81;;;12712:18;:30:::0;;;12673:81:::1;12767:14;12785:2;12767:20;12764:85;;;12803:22;:34:::0;;;12764:85:::1;12862:14;12880:2;12862:20;12859:96;;;12898:33;:45:::0;;;12859:96:::1;11013:1949:::0;;;:::o;20756:142::-;20854:36;;20756:142;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;;-1:-1:-1::0;;;2161:73:0::1;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2542:55:5:-;;;;:::o;3415:66::-;;;;:::o;17008:101::-;17085:16;;-1:-1:-1;;;;;17085:16:5;17008:101;:::o;18694:130::-;18786:30;;18694:130;:::o;812:51::-;;;;:::o;3823:29::-;;;-1:-1:-1;;;;;3823:29:5;;:::o;3520:20::-;;;-1:-1:-1;;;;;3520:20:5;;:::o;17686:98::-;17762:14;;17686:98;:::o;20176:144::-;20275:37;;20176:144;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;-1:-1:-1;;;;;1422:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;;;;;;:::i;2433:187::-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2433:187;;:::o;640:96:2:-;719:10;640:96;:::o;14:175:6:-;84:20;;-1:-1:-1;;;;;133:31:6;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:198::-;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:6:o;397:968::-;;;;;;;;;;;;680:3;668:9;659:7;655:23;651:33;648:2;;;702:6;694;687:22;648:2;730:31;751:9;730:31;:::i;:::-;720:41;;780:40;816:2;805:9;801:18;780:40;:::i;:::-;770:50;;839:40;875:2;864:9;860:18;839:40;:::i;:::-;829:50;;898:40;934:2;923:9;919:18;898:40;:::i;:::-;888:50;;957:41;993:3;982:9;978:19;957:41;:::i;:::-;947:51;;1017:41;1053:3;1042:9;1038:19;1017:41;:::i;:::-;1007:51;;1077:41;1113:3;1102:9;1098:19;1077:41;:::i;:::-;1067:51;;1137:41;1173:3;1162:9;1158:19;1137:41;:::i;:::-;1127:51;;1197:41;1233:3;1222:9;1218:19;1197:41;:::i;:::-;1187:51;;1257:41;1293:3;1282:9;1278:19;1257:41;:::i;:::-;1247:51;;1318:41;1354:3;1343:9;1339:19;1318:41;:::i;:::-;1307:52;;638:727;;;;;;;;;;;;;;:::o;1370:258::-;;;1499:2;1487:9;1478:7;1474:23;1470:32;1467:2;;;1520:6;1512;1505:22;1467:2;-1:-1:-1;;1548:23:6;;;1618:2;1603:18;;;1590:32;;-1:-1:-1;1457:171:6:o;1633:429::-;;;;1776:2;1764:9;1755:7;1751:23;1747:32;1744:2;;;1797:6;1789;1782:22;1744:2;1838:9;1825:23;1815:33;;1895:2;1884:9;1880:18;1867:32;1857:42;;1949:2;1938:9;1934:18;1921:32;1996:5;1989:13;1982:21;1975:5;1972:32;1962:2;;2023:6;2015;2008:22;1962:2;2051:5;2041:15;;;1734:328;;;;;:::o;2067:203::-;-1:-1:-1;;;;;2231:32:6;;;;2213:51;;2201:2;2186:18;;2168:102::o;2275:187::-;2440:14;;2433:22;2415:41;;2403:2;2388:18;;2370:92::o;2467:402::-;2669:2;2651:21;;;2708:2;2688:18;;;2681:30;2747:34;2742:2;2727:18;;2720:62;-1:-1:-1;;;2813:2:6;2798:18;;2791:36;2859:3;2844:19;;2641:228::o;2874:356::-;3076:2;3058:21;;;3095:18;;;3088:30;3154:34;3149:2;3134:18;;3127:62;3221:2;3206:18;;3048:182::o;3235:177::-;3381:25;;;3369:2;3354:18;;3336:76::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1199000",
								"executionCost": "944853",
								"totalCost": "2143853"
							},
							"external": {
								"ARCHIVING_COMMIT_ROUND_DURATION()": "1163",
								"ARCHIVING_DATA_BATCH_SIZE()": "1119",
								"ARCHIVING_MAX_CONSENSUS_WORKER_COUNT()": "1141",
								"ARCHIVING_MIN_CONSENSUS_WORKER_COUNT()": "1185",
								"ARCHIVING_MIN_REP_DataValidation()": "1117",
								"ARCHIVING_MIN_REWARD_DataValidation()": "1164",
								"ARCHIVING_MIN_STAKE()": "1120",
								"ARCHIVING_REVEAL_ROUND_DURATION()": "1118",
								"AddressManager()": "1182",
								"ArchivingSystem()": "1204",
								"COMPLIANCE_COMMIT_ROUND_DURATION()": "1140",
								"COMPLIANCE_DATA_BATCH_SIZE()": "1119",
								"COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT()": "1163",
								"COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT()": "1119",
								"COMPLIANCE_MIN_REP_DataValidation()": "1162",
								"COMPLIANCE_MIN_REWARD_DataValidation()": "1185",
								"COMPLIANCE_MIN_STAKE()": "1118",
								"COMPLIANCE_REVEAL_ROUND_DURATION()": "1141",
								"ComplianceSystem()": "1162",
								"INDEXING_COMMIT_ROUND_DURATION()": "1140",
								"INDEXING_DATA_BATCH_SIZE()": "1161",
								"INDEXING_MAX_CONSENSUS_WORKER_COUNT()": "1183",
								"INDEXING_MIN_CONSENSUS_WORKER_COUNT()": "1140",
								"INDEXING_MIN_REP_DataValidation()": "1142",
								"INDEXING_MIN_REWARD_DataValidation()": "1164",
								"INDEXING_MIN_STAKE()": "1185",
								"INDEXING_REVEAL_ROUND_DURATION()": "1184",
								"IndexingSystem()": "1158",
								"MAX_CONTRACT_STORED_BATCHES()": "1142",
								"MAX_SUCCEEDING_NOVOTES()": "1118",
								"MAX_TOTAL_WORKERS()": "1140",
								"MAX_UPDATE_ITERATIONS()": "1119",
								"NOVOTE_REGISTRATION_WAIT_DURATION()": "1141",
								"RepManager()": "1205",
								"Reputation()": "1227",
								"RewardManager()": "1183",
								"SPOT_COMMIT_ROUND_DURATION()": "1118",
								"SPOT_DATA_BATCH_SIZE()": "1117",
								"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "1140",
								"SPOT_INTER_ALLOCATION_DURATION()": "1139",
								"SPOT_MAX_CONSENSUS_WORKER_COUNT()": "1162",
								"SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "1140",
								"SPOT_MIN_CONSENSUS_WORKER_COUNT()": "1183",
								"SPOT_MIN_REP_DataValidation()": "1184",
								"SPOT_MIN_REP_SpotData()": "1163",
								"SPOT_MIN_REWARD_DataValidation()": "1117",
								"SPOT_MIN_REWARD_SpotData()": "1140",
								"SPOT_MIN_STAKE()": "1121",
								"SPOT_NB_TIMEFRAMES()": "1140",
								"SPOT_REVEAL_ROUND_DURATION()": "1141",
								"SPOT_TIMEFRAME_DURATION()": "1139",
								"SPOT_TOGGLE_ENABLED()": "1153",
								"SpottingSystem()": "1204",
								"StakeManager()": "1182",
								"VOTE_QUORUM()": "1139",
								"destroyContract()": "infinite",
								"getAddressManager()": "1227",
								"getArchivingSystem()": "1204",
								"getComplianceSystem()": "1181",
								"getExordeToken()": "1161",
								"getIndexingSystem()": "1160",
								"getMaxTotalWorkers()": "1163",
								"getRepManager()": "1184",
								"getReputationSystem()": "1204",
								"getRewardManager()": "1207",
								"getSpottingSystem()": "1160",
								"getStakeManager()": "1225",
								"getVoteQuorum()": "1184",
								"get_ARCHIVING_COMMIT_ROUND_DURATION()": "1141",
								"get_ARCHIVING_DATA_BATCH_SIZE()": "1143",
								"get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT()": "1185",
								"get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT()": "1119",
								"get_ARCHIVING_MIN_REP_DataValidation()": "1120",
								"get_ARCHIVING_MIN_REWARD_DataValidation()": "1161",
								"get_ARCHIVING_MIN_STAKE()": "1163",
								"get_ARCHIVING_REVEAL_ROUND_DURATION()": "1185",
								"get_COMPLIANCE_COMMIT_ROUND_DURATION()": "1184",
								"get_COMPLIANCE_DATA_BATCH_SIZE()": "1163",
								"get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT()": "1184",
								"get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT()": "1182",
								"get_COMPLIANCE_MIN_REP_DataValidation()": "1183",
								"get_COMPLIANCE_MIN_REWARD_DataValidation()": "1139",
								"get_COMPLIANCE_MIN_STAKE()": "1117",
								"get_COMPLIANCE_REVEAL_ROUND_DURATION()": "1120",
								"get_INDEXING_COMMIT_ROUND_DURATION()": "1164",
								"get_INDEXING_DATA_BATCH_SIZE()": "1119",
								"get_INDEXING_MAX_CONSENSUS_WORKER_COUNT()": "1183",
								"get_INDEXING_MIN_CONSENSUS_WORKER_COUNT()": "1118",
								"get_INDEXING_MIN_REP_DataValidation()": "1162",
								"get_INDEXING_MIN_REWARD_DataValidation()": "1163",
								"get_INDEXING_MIN_STAKE()": "1162",
								"get_INDEXING_REVEAL_ROUND_DURATION()": "1120",
								"get_MAX_CONTRACT_STORED_BATCHES()": "1184",
								"get_MAX_SUCCEEDING_NOVOTES()": "1185",
								"get_MAX_UPDATE_ITERATIONS()": "1162",
								"get_NOVOTE_REGISTRATION_WAIT_DURATION()": "1164",
								"get_SPOT_COMMIT_ROUND_DURATION()": "1119",
								"get_SPOT_DATA_BATCH_SIZE()": "1163",
								"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "1185",
								"get_SPOT_INTER_ALLOCATION_DURATION()": "1184",
								"get_SPOT_MAX_CONSENSUS_WORKER_COUNT()": "1118",
								"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "1118",
								"get_SPOT_MIN_CONSENSUS_WORKER_COUNT()": "1184",
								"get_SPOT_MIN_REP_DataValidation()": "1142",
								"get_SPOT_MIN_REP_SpotData()": "1119",
								"get_SPOT_MIN_REWARD_DataValidation()": "1161",
								"get_SPOT_MIN_REWARD_SpotData()": "1141",
								"get_SPOT_MIN_STAKE()": "1160",
								"get_SPOT_NB_TIMEFRAMES()": "1161",
								"get_SPOT_REVEAL_ROUND_DURATION()": "1141",
								"get_SPOT_TIMEFRAME_DURATION()": "1186",
								"get_SPOT_TOGGLE_ENABLED()": "1176",
								"getsFuelSystem()": "1161",
								"owner()": "1184",
								"renounceOwnership()": "infinite",
								"sFuel()": "1226",
								"token()": "1180",
								"transferOwnership(address)": "23856",
								"updateArchivingParameters(uint256,uint256)": "161595",
								"updateComplianceParameters(uint256,uint256)": "161607",
								"updateContractsAddresses(address,address,address,address,address,address,address,address,address,address,address)": "infinite",
								"updateGeneralParameters(uint256,uint256)": "81423",
								"updateIndexingParameters(uint256,uint256)": "161608",
								"updateSpottingParameters(uint256,uint256,bool)": "362806"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 494,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 459,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 498,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 535,
									"end": 537,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 505,
									"end": 537,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 505,
									"end": 537,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 587,
									"end": 589,
									"name": "PUSH",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 547,
									"end": 589,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 547,
									"end": 589,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "30D40"
								},
								{
									"begin": 599,
									"end": 651,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 599,
									"end": 651,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 711,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 711,
									"end": 750,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 757,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 757,
									"end": 804,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 862,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 812,
									"end": 863,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 812,
									"end": 863,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 873,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 873,
									"end": 924,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 975,
									"end": 978,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 931,
									"end": 978,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 931,
									"end": 978,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1029,
									"end": 1032,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 985,
									"end": 1032,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 985,
									"end": 1032,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1088,
									"end": 1102,
									"name": "PUSH",
									"source": 5,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 1046,
									"end": 1102,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1046,
									"end": 1102,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1164,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1109,
									"end": 1164,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1109,
									"end": 1164,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1219,
									"end": 1233,
									"name": "PUSH",
									"source": 5,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 1171,
									"end": 1233,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 1171,
									"end": 1233,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1301,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 1240,
									"end": 1301,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1389,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 1338,
									"end": 1389,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 1338,
									"end": 1389,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1396,
									"end": 1434,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1483,
									"end": 1488,
									"name": "PUSH",
									"source": 5,
									"value": "384"
								},
								{
									"begin": 1441,
									"end": 1488,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1441,
									"end": 1488,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1562,
									"name": "PUSH",
									"source": 5,
									"value": "3E8"
								},
								{
									"begin": 1508,
									"end": 1562,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1508,
									"end": 1562,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1623,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1569,
									"end": 1623,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1569,
									"end": 1623,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1666,
									"end": 1667,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1630,
									"end": 1667,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1630,
									"end": 1667,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1715,
									"end": 1716,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1674,
									"end": 1716,
									"name": "PUSH",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1674,
									"end": 1716,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1779,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "E10"
								},
								{
									"begin": 1727,
									"end": 1783,
									"name": "PUSH",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1727,
									"end": 1783,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1859,
									"end": 1904,
									"name": "PUSH",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1859,
									"end": 1904,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1968,
									"end": 1969,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1912,
									"end": 1969,
									"name": "PUSH",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1912,
									"end": 1969,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2033,
									"end": 2034,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1977,
									"end": 2034,
									"name": "PUSH",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1977,
									"end": 2034,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2097,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 2044,
									"end": 2097,
									"name": "PUSH",
									"source": 5,
									"value": "1A"
								},
								{
									"begin": 2044,
									"end": 2097,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 2105,
									"end": 2158,
									"name": "PUSH",
									"source": 5,
									"value": "1B"
								},
								{
									"begin": 2105,
									"end": 2158,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2215,
									"end": 2218,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 2165,
									"end": 2218,
									"name": "PUSH",
									"source": 5,
									"value": "1C"
								},
								{
									"begin": 2165,
									"end": 2218,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2295,
									"name": "PUSH",
									"source": 5,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 2227,
									"end": 2295,
									"name": "PUSH",
									"source": 5,
									"value": "1D"
								},
								{
									"begin": 2227,
									"end": 2295,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2354,
									"end": 2369,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 2302,
									"end": 2369,
									"name": "PUSH",
									"source": 5,
									"value": "1E"
								},
								{
									"begin": 2302,
									"end": 2369,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2470,
									"end": 2471,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2428,
									"end": 2471,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2428,
									"end": 2471,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2533,
									"end": 2534,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2479,
									"end": 2534,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2479,
									"end": 2534,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2596,
									"end": 2597,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2542,
									"end": 2597,
									"name": "PUSH",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2542,
									"end": 2597,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2643,
									"end": 2658,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 2607,
									"end": 2658,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2607,
									"end": 2658,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2714,
									"end": 2717,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 2666,
									"end": 2717,
									"name": "PUSH",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2666,
									"end": 2717,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 2724,
									"end": 2775,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2724,
									"end": 2775,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2836,
									"end": 2850,
									"name": "PUSH",
									"source": 5,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 2784,
									"end": 2850,
									"name": "PUSH",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 2784,
									"end": 2850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2907,
									"end": 2922,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 2857,
									"end": 2922,
									"name": "PUSH",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 2857,
									"end": 2922,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3022,
									"end": 3023,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2979,
									"end": 3023,
									"name": "PUSH",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 2979,
									"end": 3023,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3086,
									"end": 3087,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3031,
									"end": 3087,
									"name": "PUSH",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 3031,
									"end": 3087,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3095,
									"end": 3151,
									"name": "PUSH",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 3095,
									"end": 3151,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3198,
									"end": 3213,
									"name": "PUSH",
									"source": 5,
									"value": "15AF1D78B58C40000"
								},
								{
									"begin": 3161,
									"end": 3213,
									"name": "PUSH",
									"source": 5,
									"value": "2A"
								},
								{
									"begin": 3161,
									"end": 3213,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3270,
									"end": 3273,
									"name": "PUSH",
									"source": 5,
									"value": "190"
								},
								{
									"begin": 3221,
									"end": 3273,
									"name": "PUSH",
									"source": 5,
									"value": "2B"
								},
								{
									"begin": 3221,
									"end": 3273,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3332,
									"name": "PUSH",
									"source": 5,
									"value": "B4"
								},
								{
									"begin": 3280,
									"end": 3332,
									"name": "PUSH",
									"source": 5,
									"value": "2C"
								},
								{
									"begin": 3280,
									"end": 3332,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3394,
									"end": 3408,
									"name": "PUSH",
									"source": 5,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 3341,
									"end": 3408,
									"name": "PUSH",
									"source": 5,
									"value": "2D"
								},
								{
									"begin": 3341,
									"end": 3408,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3481,
									"name": "PUSH",
									"source": 5,
									"value": "2386F26FC10000"
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "PUSH",
									"source": 5,
									"value": "2E"
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 23360,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0b3f8da33925ef6f5ec35c2610fe90c524090736371bcafe9008ceba454f56964736f6c63430008000033",
									".code": [
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8A13725D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "CB3A2A88"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E6FDD4C0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F5BEC1AD"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FBF14851"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FBF14851"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FF622DDA"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FFF5F946"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F5BEC1AD"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F67362FE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F80DE0A0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "FB50A473"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "EE37F4A6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "EE37F4A6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F116C4E0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F4E20B9C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E6FDD4C0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E9704F81"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E992DCA7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "EA19733C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "DFECEED7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E3DFC0B2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E3DFC0B2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E5F14824"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E66D543A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E68C9C30"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "DFECEED7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E0DE3D7C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E168063C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "E3115D3C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D4EFD2BA"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D4EFD2BA"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D81109CE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D8645D37"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "DC7048C1"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "CB3A2A88"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D0EED967"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "D1A89A46"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "ABB10B9B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "BE250988"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "C6EACBFE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "C6EACBFE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "C7761FAB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "C95B53C5"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "CA64F9E7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "BE250988"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "BF09FF70"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "BF34F749"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "C4A306F8"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B45D9D8D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B45D9D8D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B6118450"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B6C6EC02"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "BD40EF4C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "ABB10B9B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "AC846E79"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B1562F67"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B38E885E"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "995ADBDD"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A1A4575A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A1A4575A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A327181B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A35B3B09"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "AB43E78D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "995ADBDD"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "9A175938"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "9D1F2ADA"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "9FB491F6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "90D10B6E"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "90D10B6E"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "9279E9D4"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "98A54E2B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "9904ED8D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8A13725D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "90CC59EB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "49B46787"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "728D23AB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8360034D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8724450F"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8724450F"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "87CE6311"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "893B2A76"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "89B212D3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8360034D"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "83CC6EF2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "849F9F0A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "86B0B4C5"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "7A0EC25B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "7A0EC25B"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "7A34DA67"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "7D630CB0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "7E8603E9"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "728D23AB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "72E54030"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "75DC6130"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "779231B2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "557C1ABE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "61879075"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "61879075"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "6785F847"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "6A8E0ECE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "557C1ABE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "55A35F5C"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "5CB361F6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "5D1C3182"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4ED60B2A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4ED60B2A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "51912F29"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "531780BB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "5492F302"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "49B46787"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4E5638F5"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4E87C5A8"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2B0AFAB3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "3692616A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "42DF5641"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "42DF5641"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "444D62B6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "463444B7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "484DF80A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "3692616A"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "36FC43FC"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "386D0976"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "3968EC84"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2E2F93F3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2E2F93F3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "30C0BB79"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "31911C91"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "34C37E21"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2B0AFAB3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2BE05960"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2BF8ABB3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "2D09A8E3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A5A4C20"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "175BF630"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "175BF630"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "1D0FB88E"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "29A47BC7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "29E3DD1F"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "A5A4C20"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "B08BFD9"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F1F0FFE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "F78CC76"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "6606D67"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "6606D67"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "855D151"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "8E7F0DB"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "92A5CCE"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "653FF8"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "363A1BF"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "4E76C8F"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 351,
											"end": 23360,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "tag",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "471"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "499"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "tag",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "518"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "521"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "527"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 757,
											"end": 804,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 804,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22350,
											"end": 22375,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 22350,
											"end": 22375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22263,
											"end": 22383,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16874,
											"end": 16887,
											"name": "PUSH",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16874,
											"end": 16887,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16874,
											"end": 16887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16800,
											"end": 16895,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3816,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16572,
											"end": 16582,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16572,
											"end": 16582,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16572,
											"end": 16582,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16501,
											"end": 16590,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8973,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 9049,
											"end": 9054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "tag",
											"source": 5,
											"value": "542"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9058,
											"name": "SELFDESTRUCT",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3213,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18653,
											"end": 18680,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 18653,
											"end": 18680,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18564,
											"end": 18688,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19818,
											"end": 19851,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 19818,
											"end": 19851,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19723,
											"end": 19859,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19166,
											"end": 19189,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 19166,
											"end": 19189,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19081,
											"end": 19197,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1904,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3613,
											"end": 3638,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23030,
											"end": 23061,
											"name": "PUSH",
											"source": 5,
											"value": "2C"
										},
										{
											"begin": 23030,
											"end": 23061,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22937,
											"end": 23069,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20710,
											"end": 20742,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 20710,
											"end": 20742,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20616,
											"end": 20750,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2922,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2850,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9982,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9982,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9952,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 9952,
											"end": 10038,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10010,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10026,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9952,
											"end": 10038,
											"name": "tag",
											"source": 5,
											"value": "551"
										},
										{
											"begin": 9952,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10076,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10048,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 10048,
											"end": 10128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10102,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10092,
											"end": 10116,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10048,
											"end": 10128,
											"name": "tag",
											"source": 5,
											"value": "552"
										},
										{
											"begin": 10048,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10141,
											"end": 10166,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10166,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 10138,
											"end": 10218,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10192,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10206,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10218,
											"name": "tag",
											"source": 5,
											"value": "553"
										},
										{
											"begin": 10138,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10231,
											"end": 10259,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10259,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10259,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 10228,
											"end": 10317,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "PUSH",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10305,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10317,
											"name": "tag",
											"source": 5,
											"value": "554"
										},
										{
											"begin": 10228,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10330,
											"end": 10359,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10359,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10330,
											"end": 10359,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10327,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 10327,
											"end": 10419,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10389,
											"name": "PUSH",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10375,
											"end": 10407,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10327,
											"end": 10419,
											"name": "tag",
											"source": 5,
											"value": "555"
										},
										{
											"begin": 10327,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10432,
											"end": 10463,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10432,
											"end": 10463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10432,
											"end": 10463,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 10429,
											"end": 10527,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10495,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10527,
											"name": "tag",
											"source": 5,
											"value": "556"
										},
										{
											"begin": 10429,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10540,
											"end": 10569,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10569,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10540,
											"end": 10569,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "557"
										},
										{
											"begin": 10537,
											"end": 10629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10599,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10617,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10537,
											"end": 10629,
											"name": "tag",
											"source": 5,
											"value": "557"
										},
										{
											"begin": 10537,
											"end": 10629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10642,
											"end": 10671,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10671,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10639,
											"end": 10731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 10639,
											"end": 10731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10701,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10719,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10639,
											"end": 10731,
											"name": "tag",
											"source": 5,
											"value": "558"
										},
										{
											"begin": 10639,
											"end": 10731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10744,
											"end": 10774,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10744,
											"end": 10774,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10744,
											"end": 10774,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "559"
										},
										{
											"begin": 10741,
											"end": 10836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10805,
											"name": "PUSH",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10836,
											"name": "tag",
											"source": 5,
											"value": "559"
										},
										{
											"begin": 10741,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10849,
											"end": 10869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "560"
										},
										{
											"begin": 10846,
											"end": 10911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10890,
											"name": "PUSH",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10885,
											"end": 10899,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10911,
											"name": "tag",
											"source": 5,
											"value": "560"
										},
										{
											"begin": 10846,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "561"
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10965,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10960,
											"end": 10974,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "tag",
											"source": 5,
											"value": "561"
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9562,
											"end": 10993,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17486,
											"end": 17491,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 17486,
											"end": 17491,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17486,
											"end": 17491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17414,
											"end": 17499,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18526,
											"end": 18550,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 18526,
											"end": 18550,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18440,
											"end": 18558,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2034,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2295,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18154,
											"end": 18180,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 18154,
											"end": 18180,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18066,
											"end": 18188,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22009,
											"end": 22043,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 22009,
											"end": 22043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21913,
											"end": 22051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22749,
											"end": 22785,
											"name": "PUSH",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 22749,
											"end": 22785,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22651,
											"end": 22793,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2097,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2534,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17309,
											"name": "PUSH",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 17294,
											"end": 17309,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17294,
											"end": 17309,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17218,
											"end": 17317,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20570,
											"end": 20602,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 20570,
											"end": 20602,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20610,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23315,
											"end": 23347,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 23315,
											"end": 23347,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23221,
											"end": 23355,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 599,
											"end": 651,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 599,
											"end": 651,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 19044,
											"end": 19063,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18966,
											"end": 19071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2979,
											"end": 3023,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "PUSH",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3673,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3273,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "PUSH",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16772,
											"end": 16786,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16697,
											"end": 16794,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17395,
											"end": 17400,
											"name": "PUSH",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 17395,
											"end": 17400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17395,
											"end": 17400,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17323,
											"end": 17408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14987,
											"end": 15001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14987,
											"end": 15006,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14984,
											"end": 15071,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14984,
											"end": 15071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "576"
										},
										{
											"begin": 14984,
											"end": 15071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15022,
											"end": 15047,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 15022,
											"end": 15059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15022,
											"end": 15059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15022,
											"end": 15059,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14984,
											"end": 15071,
											"name": "tag",
											"source": 5,
											"value": "576"
										},
										{
											"begin": 14984,
											"end": 15071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15084,
											"end": 15098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15102,
											"end": 15103,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 15084,
											"end": 15103,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15081,
											"end": 15163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15081,
											"end": 15163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "577"
										},
										{
											"begin": 15081,
											"end": 15163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15119,
											"end": 15138,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 15119,
											"end": 15151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15119,
											"end": 15151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15119,
											"end": 15151,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15081,
											"end": 15163,
											"name": "tag",
											"source": 5,
											"value": "577"
										},
										{
											"begin": 15081,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15176,
											"end": 15190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15194,
											"end": 15195,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 15176,
											"end": 15195,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15173,
											"end": 15272,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15173,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 15173,
											"end": 15272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15247,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 15211,
											"end": 15260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15260,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15173,
											"end": 15272,
											"name": "tag",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 15173,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15285,
											"end": 15299,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15304,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15285,
											"end": 15304,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "579"
										},
										{
											"begin": 15282,
											"end": 15381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15320,
											"end": 15356,
											"name": "PUSH",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 15320,
											"end": 15369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15320,
											"end": 15369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15320,
											"end": 15369,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15282,
											"end": 15381,
											"name": "tag",
											"source": 5,
											"value": "579"
										},
										{
											"begin": 15282,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15394,
											"end": 15408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15412,
											"end": 15413,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15394,
											"end": 15413,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15391,
											"end": 15485,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15391,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "580"
										},
										{
											"begin": 15391,
											"end": 15485,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15429,
											"end": 15460,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 15429,
											"end": 15473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15429,
											"end": 15473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15429,
											"end": 15473,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15391,
											"end": 15485,
											"name": "tag",
											"source": 5,
											"value": "580"
										},
										{
											"begin": 15391,
											"end": 15485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15498,
											"end": 15512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15516,
											"end": 15517,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 15498,
											"end": 15517,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15495,
											"end": 15589,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15495,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "581"
										},
										{
											"begin": 15495,
											"end": 15589,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15533,
											"end": 15564,
											"name": "PUSH",
											"source": 5,
											"value": "2C"
										},
										{
											"begin": 15533,
											"end": 15577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15533,
											"end": 15577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15533,
											"end": 15577,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15495,
											"end": 15589,
											"name": "tag",
											"source": 5,
											"value": "581"
										},
										{
											"begin": 15495,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15602,
											"end": 15616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15620,
											"end": 15621,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 15602,
											"end": 15621,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 15694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "582"
										},
										{
											"begin": 15599,
											"end": 15694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15637,
											"end": 15669,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 15637,
											"end": 15682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15637,
											"end": 15682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15637,
											"end": 15682,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15599,
											"end": 15694,
											"name": "tag",
											"source": 5,
											"value": "582"
										},
										{
											"begin": 15599,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15707,
											"end": 15721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15725,
											"end": 15726,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 15707,
											"end": 15726,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15704,
											"end": 15802,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15704,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 15704,
											"end": 15802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15777,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 15742,
											"end": 15790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15742,
											"end": 15790,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15704,
											"end": 15802,
											"name": "tag",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 15704,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14870,
											"end": 15809,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1164,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3031,
											"end": 3087,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9193,
											"end": 9207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9193,
											"end": 9212,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "587"
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9245,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9228,
											"end": 9257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9257,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "tag",
											"source": 5,
											"value": "587"
										},
										{
											"begin": 9190,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9282,
											"end": 9296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9301,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9282,
											"end": 9301,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9353,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "588"
										},
										{
											"begin": 9279,
											"end": 9353,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9328,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9317,
											"end": 9341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9341,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9353,
											"name": "tag",
											"source": 5,
											"value": "588"
										},
										{
											"begin": 9279,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9380,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9366,
											"end": 9385,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9363,
											"end": 9447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9363,
											"end": 9447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "589"
										},
										{
											"begin": 9363,
											"end": 9447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9401,
											"end": 9422,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9401,
											"end": 9435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9401,
											"end": 9435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9401,
											"end": 9435,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9363,
											"end": 9447,
											"name": "tag",
											"source": 5,
											"value": "589"
										},
										{
											"begin": 9363,
											"end": 9447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9460,
											"end": 9474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9479,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9460,
											"end": 9479,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9547,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 9457,
											"end": 9547,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9495,
											"end": 9522,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9495,
											"end": 9535,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9078,
											"end": 9554,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2158,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1969,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18282,
											"end": 18308,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 18282,
											"end": 18308,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18194,
											"end": 18316,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14046,
											"end": 14060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14065,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14046,
											"end": 14065,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14043,
											"end": 14129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14043,
											"end": 14129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "600"
										},
										{
											"begin": 14043,
											"end": 14129,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14081,
											"end": 14105,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 14081,
											"end": 14117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14081,
											"end": 14117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14081,
											"end": 14117,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14043,
											"end": 14129,
											"name": "tag",
											"source": 5,
											"value": "600"
										},
										{
											"begin": 14043,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14142,
											"end": 14156,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14160,
											"end": 14161,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14142,
											"end": 14161,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14139,
											"end": 14220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14139,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "601"
										},
										{
											"begin": 14139,
											"end": 14220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14177,
											"end": 14195,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 14177,
											"end": 14208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14177,
											"end": 14208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14177,
											"end": 14208,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14139,
											"end": 14220,
											"name": "tag",
											"source": 5,
											"value": "601"
										},
										{
											"begin": 14139,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14233,
											"end": 14247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14251,
											"end": 14252,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 14233,
											"end": 14252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14230,
											"end": 14328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14230,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 14230,
											"end": 14328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14268,
											"end": 14303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14268,
											"end": 14316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14268,
											"end": 14316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14268,
											"end": 14316,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14230,
											"end": 14328,
											"name": "tag",
											"source": 5,
											"value": "602"
										},
										{
											"begin": 14230,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14341,
											"end": 14355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14359,
											"end": 14360,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14341,
											"end": 14360,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14338,
											"end": 14436,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14338,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "603"
										},
										{
											"begin": 14338,
											"end": 14436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14376,
											"end": 14411,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 14376,
											"end": 14424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14376,
											"end": 14424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14376,
											"end": 14424,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14338,
											"end": 14436,
											"name": "tag",
											"source": 5,
											"value": "603"
										},
										{
											"begin": 14338,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14449,
											"end": 14463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14467,
											"end": 14468,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 14449,
											"end": 14468,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14539,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "604"
										},
										{
											"begin": 14446,
											"end": 14539,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14514,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14539,
											"name": "tag",
											"source": 5,
											"value": "604"
										},
										{
											"begin": 14446,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14552,
											"end": 14566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14570,
											"end": 14571,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 14552,
											"end": 14571,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14549,
											"end": 14642,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14549,
											"end": 14642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "605"
										},
										{
											"begin": 14549,
											"end": 14642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14587,
											"end": 14617,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 14587,
											"end": 14630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14587,
											"end": 14630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14587,
											"end": 14630,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14549,
											"end": 14642,
											"name": "tag",
											"source": 5,
											"value": "605"
										},
										{
											"begin": 14549,
											"end": 14642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14655,
											"end": 14669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14674,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 14655,
											"end": 14674,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14652,
											"end": 14746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14652,
											"end": 14746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "606"
										},
										{
											"begin": 14652,
											"end": 14746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14690,
											"end": 14721,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 14690,
											"end": 14734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14690,
											"end": 14734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14690,
											"end": 14734,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14652,
											"end": 14746,
											"name": "tag",
											"source": 5,
											"value": "606"
										},
										{
											"begin": 14652,
											"end": 14746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14759,
											"end": 14773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14777,
											"end": 14778,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 14759,
											"end": 14778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14756,
											"end": 14853,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14756,
											"end": 14853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 14756,
											"end": 14853,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14794,
											"end": 14828,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 14794,
											"end": 14841,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13930,
											"end": 14860,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2658,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17204,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 17190,
											"end": 17204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17204,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17115,
											"end": 17212,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "PUSH",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3713,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16167,
											"end": 16188,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 16167,
											"end": 16188,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16084,
											"end": 16196,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2724,
											"end": 2775,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "PUSH",
											"source": 5,
											"value": "2C"
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3332,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22150,
											"end": 22181,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 22150,
											"end": 22181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22057,
											"end": 22189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1301,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1171,
											"end": 1233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1488,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23172,
											"end": 23207,
											"name": "PUSH",
											"source": 5,
											"value": "2D"
										},
										{
											"begin": 23172,
											"end": 23207,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23075,
											"end": 23215,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20999,
											"end": 21032,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 20999,
											"end": 21032,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20904,
											"end": 21040,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21869,
											"end": 21899,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 21869,
											"end": 21899,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21777,
											"end": 21907,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21733,
											"end": 21763,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 21733,
											"end": 21763,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21641,
											"end": 21771,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22892,
											"end": 22923,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 22892,
											"end": 22923,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22799,
											"end": 22931,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15957,
											"end": 15974,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 15957,
											"end": 15974,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15881,
											"end": 15982,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3606,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22601,
											"end": 22637,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 22601,
											"end": 22637,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22503,
											"end": 22645,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17652,
											"end": 17672,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 17652,
											"end": 17672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17570,
											"end": 17680,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19687,
											"end": 19709,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 19687,
											"end": 19709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19603,
											"end": 19717,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21446,
											"end": 21481,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21446,
											"end": 21481,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21349,
											"end": 21489,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 498,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 459,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 873,
											"end": 924,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 924,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "PUSH",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3740,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18405,
											"end": 18426,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 18405,
											"end": 18426,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18322,
											"end": 18434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3151,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22389,
											"end": 22497,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "tag",
											"source": 5,
											"value": "402"
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19300,
											"end": 19331,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 19300,
											"end": 19331,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19207,
											"end": 19339,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16980,
											"end": 16994,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 16980,
											"end": 16994,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16980,
											"end": 16994,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16905,
											"end": 17002,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1667,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17883,
											"end": 17914,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17883,
											"end": 17914,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17790,
											"end": 17922,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19444,
											"end": 19477,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 19444,
											"end": 19477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19349,
											"end": 19485,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1623,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21317,
											"end": 21335,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 21317,
											"end": 21335,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21237,
											"end": 21343,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18922,
											"end": 18952,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 18922,
											"end": 18952,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18830,
											"end": 18960,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 711,
											"end": 750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 711,
											"end": 750,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 505,
											"end": 537,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2471,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16475,
											"end": 16487,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 16475,
											"end": 16487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16475,
											"end": 16487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16402,
											"end": 16495,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21199,
											"end": 21223,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 21199,
											"end": 21223,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21113,
											"end": 21231,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1783,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20020,
											"end": 20046,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 20020,
											"end": 20046,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19932,
											"end": 20054,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1716,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1102,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "PUSH",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3778,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "tag",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20425,
											"end": 20462,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 20425,
											"end": 20462,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20326,
											"end": 20470,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "tag",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18021,
											"end": 18052,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 18021,
											"end": 18052,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17928,
											"end": 18060,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "tag",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "tag",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13090,
											"end": 13109,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13087,
											"end": 13175,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13087,
											"end": 13175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "638"
										},
										{
											"begin": 13087,
											"end": 13175,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13151,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 13125,
											"end": 13163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13125,
											"end": 13163,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13087,
											"end": 13175,
											"name": "tag",
											"source": 5,
											"value": "638"
										},
										{
											"begin": 13087,
											"end": 13175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13188,
											"end": 13202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13206,
											"end": 13207,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 13188,
											"end": 13207,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13268,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "639"
										},
										{
											"begin": 13185,
											"end": 13268,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13223,
											"end": 13243,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 13223,
											"end": 13256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13223,
											"end": 13256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13223,
											"end": 13256,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13268,
											"name": "tag",
											"source": 5,
											"value": "639"
										},
										{
											"begin": 13185,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13281,
											"end": 13295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13299,
											"end": 13300,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 13281,
											"end": 13300,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13278,
											"end": 13378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13278,
											"end": 13378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "640"
										},
										{
											"begin": 13278,
											"end": 13378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13316,
											"end": 13353,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 13316,
											"end": 13366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13316,
											"end": 13366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13316,
											"end": 13366,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13278,
											"end": 13378,
											"name": "tag",
											"source": 5,
											"value": "640"
										},
										{
											"begin": 13278,
											"end": 13378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13391,
											"end": 13405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13409,
											"end": 13410,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "641"
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13426,
											"end": 13463,
											"name": "PUSH",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 13426,
											"end": 13476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13426,
											"end": 13476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13426,
											"end": 13476,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "tag",
											"source": 5,
											"value": "641"
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13501,
											"end": 13520,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13593,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "642"
										},
										{
											"begin": 13498,
											"end": 13593,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13568,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13498,
											"end": 13593,
											"name": "tag",
											"source": 5,
											"value": "642"
										},
										{
											"begin": 13498,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13606,
											"end": 13620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 13606,
											"end": 13625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13603,
											"end": 13698,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13603,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "643"
										},
										{
											"begin": 13603,
											"end": 13698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13673,
											"name": "PUSH",
											"source": 5,
											"value": "1C"
										},
										{
											"begin": 13641,
											"end": 13686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13641,
											"end": 13686,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13603,
											"end": 13698,
											"name": "tag",
											"source": 5,
											"value": "643"
										},
										{
											"begin": 13603,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13729,
											"end": 13730,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 13711,
											"end": 13730,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13708,
											"end": 13804,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13708,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "644"
										},
										{
											"begin": 13708,
											"end": 13804,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13779,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 13746,
											"end": 13792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13792,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 13708,
											"end": 13804,
											"name": "tag",
											"source": 5,
											"value": "644"
										},
										{
											"begin": 13708,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13817,
											"end": 13831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13835,
											"end": 13836,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 13817,
											"end": 13836,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13814,
											"end": 13913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13814,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 13814,
											"end": 13913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13852,
											"end": 13888,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 13852,
											"end": 13901,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12972,
											"end": 13920,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "tag",
											"source": 5,
											"value": "471"
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16291,
											"end": 16318,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16291,
											"end": 16318,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16202,
											"end": 16326,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "tag",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20060,
											"end": 20170,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "tag",
											"source": 5,
											"value": "477"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1389,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 19571,
											"end": 19589,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19491,
											"end": 19597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "tag",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21592,
											"end": 21627,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 21592,
											"end": 21627,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21495,
											"end": 21635,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "tag",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 931,
											"end": 978,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 978,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "tag",
											"source": 5,
											"value": "489"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2717,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16673,
											"end": 16683,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16673,
											"end": 16683,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16673,
											"end": 16683,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16596,
											"end": 16691,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "tag",
											"source": 5,
											"value": "495"
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16059,
											"end": 16070,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 16059,
											"end": 16070,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15988,
											"end": 16078,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11163,
											"end": 11164,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11145,
											"end": 11164,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "655"
										},
										{
											"begin": 11142,
											"end": 11225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11180,
											"end": 11213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11180,
											"end": 11213,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11142,
											"end": 11225,
											"name": "tag",
											"source": 5,
											"value": "655"
										},
										{
											"begin": 11142,
											"end": 11225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11238,
											"end": 11252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11238,
											"end": 11257,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11235,
											"end": 11312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11235,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "656"
										},
										{
											"begin": 11235,
											"end": 11312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11273,
											"end": 11287,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11273,
											"end": 11300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11273,
											"end": 11300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11273,
											"end": 11300,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11235,
											"end": 11312,
											"name": "tag",
											"source": 5,
											"value": "656"
										},
										{
											"begin": 11235,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11325,
											"end": 11339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11343,
											"end": 11344,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 11325,
											"end": 11344,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11322,
											"end": 11416,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11322,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "657"
										},
										{
											"begin": 11322,
											"end": 11416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11391,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11360,
											"end": 11404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11360,
											"end": 11404,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11322,
											"end": 11416,
											"name": "tag",
											"source": 5,
											"value": "657"
										},
										{
											"begin": 11322,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11429,
											"end": 11443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11429,
											"end": 11448,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11426,
											"end": 11520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11426,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "658"
										},
										{
											"begin": 11426,
											"end": 11520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11495,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 11464,
											"end": 11508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11464,
											"end": 11508,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11426,
											"end": 11520,
											"name": "tag",
											"source": 5,
											"value": "658"
										},
										{
											"begin": 11426,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11533,
											"end": 11547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11551,
											"end": 11552,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 11533,
											"end": 11552,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11619,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "659"
										},
										{
											"begin": 11530,
											"end": 11619,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11568,
											"end": 11594,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11568,
											"end": 11607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11568,
											"end": 11607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11568,
											"end": 11607,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11619,
											"name": "tag",
											"source": 5,
											"value": "659"
										},
										{
											"begin": 11530,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11632,
											"end": 11646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11632,
											"end": 11651,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11629,
											"end": 11718,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11629,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "660"
										},
										{
											"begin": 11629,
											"end": 11718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11693,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11667,
											"end": 11706,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11629,
											"end": 11718,
											"name": "tag",
											"source": 5,
											"value": "660"
										},
										{
											"begin": 11629,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11731,
											"end": 11745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 11731,
											"end": 11750,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11728,
											"end": 11815,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11728,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "661"
										},
										{
											"begin": 11728,
											"end": 11815,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11766,
											"end": 11790,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 11766,
											"end": 11803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11766,
											"end": 11803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11766,
											"end": 11803,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11728,
											"end": 11815,
											"name": "tag",
											"source": 5,
											"value": "661"
										},
										{
											"begin": 11728,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11828,
											"end": 11842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11846,
											"end": 11847,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 11828,
											"end": 11847,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11825,
											"end": 11909,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11825,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "662"
										},
										{
											"begin": 11825,
											"end": 11909,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11863,
											"end": 11884,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 11863,
											"end": 11897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11863,
											"end": 11897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11863,
											"end": 11897,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11825,
											"end": 11909,
											"name": "tag",
											"source": 5,
											"value": "662"
										},
										{
											"begin": 11825,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11922,
											"end": 11936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 11941,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11922,
											"end": 11941,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "663"
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 11987,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 11957,
											"end": 12000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 12000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 12000,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "tag",
											"source": 5,
											"value": "663"
										},
										{
											"begin": 11919,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12025,
											"end": 12039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12043,
											"end": 12045,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 12025,
											"end": 12045,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12113,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "664"
										},
										{
											"begin": 12022,
											"end": 12113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12061,
											"end": 12088,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 12061,
											"end": 12101,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12061,
											"end": 12101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12061,
											"end": 12101,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12113,
											"name": "tag",
											"source": 5,
											"value": "664"
										},
										{
											"begin": 12022,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12175,
											"end": 12189,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12193,
											"end": 12195,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 12175,
											"end": 12195,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12172,
											"end": 12265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12172,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "665"
										},
										{
											"begin": 12172,
											"end": 12265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12241,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 12211,
											"end": 12253,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12211,
											"end": 12253,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12172,
											"end": 12265,
											"name": "tag",
											"source": 5,
											"value": "665"
										},
										{
											"begin": 12172,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12296,
											"end": 12298,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 12278,
											"end": 12298,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12357,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "666"
										},
										{
											"begin": 12275,
											"end": 12357,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12333,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12314,
											"end": 12345,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12357,
											"name": "tag",
											"source": 5,
											"value": "666"
										},
										{
											"begin": 12275,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12370,
											"end": 12384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12388,
											"end": 12390,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 12370,
											"end": 12390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12453,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "667"
										},
										{
											"begin": 12367,
											"end": 12453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12429,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12406,
											"end": 12441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12406,
											"end": 12441,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12367,
											"end": 12453,
											"name": "tag",
											"source": 5,
											"value": "667"
										},
										{
											"begin": 12367,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12466,
											"end": 12480,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12484,
											"end": 12486,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 12466,
											"end": 12486,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12463,
											"end": 12557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12463,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "668"
										},
										{
											"begin": 12463,
											"end": 12557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12502,
											"end": 12545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12545,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12545,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12463,
											"end": 12557,
											"name": "tag",
											"source": 5,
											"value": "668"
										},
										{
											"begin": 12463,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12570,
											"end": 12584,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12588,
											"end": 12590,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 12570,
											"end": 12590,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12663,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "669"
										},
										{
											"begin": 12567,
											"end": 12663,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12606,
											"end": 12639,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 12606,
											"end": 12651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12606,
											"end": 12651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12606,
											"end": 12651,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12663,
											"name": "tag",
											"source": 5,
											"value": "669"
										},
										{
											"begin": 12567,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12676,
											"end": 12690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12694,
											"end": 12696,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 12676,
											"end": 12696,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12673,
											"end": 12754,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12673,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "670"
										},
										{
											"begin": 12673,
											"end": 12754,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 12712,
											"end": 12742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12712,
											"end": 12742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12712,
											"end": 12742,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12673,
											"end": 12754,
											"name": "tag",
											"source": 5,
											"value": "670"
										},
										{
											"begin": 12673,
											"end": 12754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12785,
											"end": 12787,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 12767,
											"end": 12787,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12764,
											"end": 12849,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12764,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "671"
										},
										{
											"begin": 12764,
											"end": 12849,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 12825,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 12803,
											"end": 12837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 12837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 12837,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12764,
											"end": 12849,
											"name": "tag",
											"source": 5,
											"value": "671"
										},
										{
											"begin": 12764,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12862,
											"end": 12876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 12882,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12862,
											"end": 12882,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12859,
											"end": 12955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12859,
											"end": 12955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "672"
										},
										{
											"begin": 12859,
											"end": 12955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12898,
											"end": 12931,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 12898,
											"end": 12943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12898,
											"end": 12943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12898,
											"end": 12943,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 12859,
											"end": 12955,
											"name": "tag",
											"source": 5,
											"value": "672"
										},
										{
											"begin": 12859,
											"end": 12955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 12962,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20854,
											"end": 20890,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 20854,
											"end": 20890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20756,
											"end": 20898,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "675"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "tag",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2597,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "tag",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "PUSH",
											"source": 5,
											"value": "2E"
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "tag",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17085,
											"end": 17101,
											"name": "PUSH",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 17085,
											"end": 17101,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17085,
											"end": 17101,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17008,
											"end": 17109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "tag",
											"source": 5,
											"value": "518"
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18786,
											"end": 18816,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 18786,
											"end": 18816,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18694,
											"end": 18824,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "tag",
											"source": 5,
											"value": "521"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 812,
											"end": 863,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 812,
											"end": 863,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3852,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "527"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "2F"
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3540,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "tag",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17762,
											"end": 17776,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 17762,
											"end": 17776,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17686,
											"end": 17784,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "tag",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20275,
											"end": 20312,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 20275,
											"end": 20312,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20176,
											"end": 20320,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "687"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "tag",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 14,
											"end": 189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 133,
											"end": 164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 123,
											"end": 165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "697"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 179,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 169,
											"end": 181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 113,
											"end": 115,
											"name": "tag",
											"source": 6,
											"value": "697"
										},
										{
											"begin": 113,
											"end": 115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 65,
											"end": 189,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "506"
										},
										{
											"begin": 194,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 285,
											"end": 292,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 281,
											"end": 304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 277,
											"end": 309,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "699"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 327,
											"end": 333,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 312,
											"end": 334,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 274,
											"end": 276,
											"name": "tag",
											"source": 6,
											"value": "699"
										},
										{
											"begin": 274,
											"end": 276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "700"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 355,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "700"
										},
										{
											"begin": 355,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 386,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 264,
											"end": 392,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 264,
											"end": 392,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 397,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 683,
											"name": "PUSH",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 668,
											"end": 677,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 659,
											"end": 666,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 655,
											"end": 678,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 651,
											"end": 684,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 648,
											"end": 650,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "702"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 694,
											"end": 700,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 687,
											"end": 709,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 648,
											"end": 650,
											"name": "tag",
											"source": 6,
											"value": "702"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 730,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "703"
										},
										{
											"begin": 751,
											"end": 760,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 730,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 730,
											"end": 761,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 730,
											"end": 761,
											"name": "tag",
											"source": 6,
											"value": "703"
										},
										{
											"begin": 730,
											"end": 761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 720,
											"end": 761,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 720,
											"end": 761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 780,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "704"
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 801,
											"end": 819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 780,
											"end": 820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 780,
											"end": 820,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 820,
											"name": "tag",
											"source": 6,
											"value": "704"
										},
										{
											"begin": 780,
											"end": 820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 820,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 770,
											"end": 820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 839,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "705"
										},
										{
											"begin": 875,
											"end": 877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 860,
											"end": 878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 839,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 839,
											"end": 879,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 879,
											"name": "tag",
											"source": 6,
											"value": "705"
										},
										{
											"begin": 839,
											"end": 879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 829,
											"end": 879,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 829,
											"end": 879,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "706"
										},
										{
											"begin": 934,
											"end": 936,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 919,
											"end": 937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 898,
											"end": 938,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 898,
											"end": 938,
											"name": "tag",
											"source": 6,
											"value": "706"
										},
										{
											"begin": 898,
											"end": 938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 888,
											"end": 938,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 888,
											"end": 938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 957,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "707"
										},
										{
											"begin": 993,
											"end": 996,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 982,
											"end": 991,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 978,
											"end": 997,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 957,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 957,
											"end": 998,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 998,
											"name": "tag",
											"source": 6,
											"value": "707"
										},
										{
											"begin": 957,
											"end": 998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 947,
											"end": 998,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 947,
											"end": 998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "708"
										},
										{
											"begin": 1053,
											"end": 1056,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1017,
											"end": 1058,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1058,
											"name": "tag",
											"source": 6,
											"value": "708"
										},
										{
											"begin": 1017,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1058,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "709"
										},
										{
											"begin": 1113,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 1102,
											"end": 1111,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1077,
											"end": 1118,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1118,
											"name": "tag",
											"source": 6,
											"value": "709"
										},
										{
											"begin": 1077,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1118,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1067,
											"end": 1118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "710"
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "tag",
											"source": 6,
											"value": "710"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1178,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "711"
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "tag",
											"source": 6,
											"value": "711"
										},
										{
											"begin": 1197,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1238,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "712"
										},
										{
											"begin": 1293,
											"end": 1296,
											"name": "PUSH",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1282,
											"end": 1291,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1278,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1257,
											"end": 1298,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1257,
											"end": 1298,
											"name": "tag",
											"source": 6,
											"value": "712"
										},
										{
											"begin": 1257,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "713"
										},
										{
											"begin": 1354,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "695"
										},
										{
											"begin": 1318,
											"end": 1359,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1359,
											"name": "tag",
											"source": 6,
											"value": "713"
										},
										{
											"begin": 1318,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 1365,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1370,
											"end": 1628,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 1370,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1485,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1497,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "715"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1527,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "715"
										},
										{
											"begin": 1467,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1590,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1628,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1633,
											"end": 2062,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 1633,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 2062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 2062,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 2062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1764,
											"end": 1773,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1762,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1779,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "717"
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1789,
											"end": 1795,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1782,
											"end": 1804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "tag",
											"source": 6,
											"value": "717"
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1884,
											"end": 1893,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 1899,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1953,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 2003,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2004,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "718"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "718"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 2062,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2067,
											"end": 2270,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2067,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2203,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2168,
											"end": 2270,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2275,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 2275,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2455,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2462,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2467,
											"end": 2869,
											"name": "tag",
											"source": 6,
											"value": "679"
										},
										{
											"begin": 2467,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2672,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2710,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2781,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2813,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2844,
											"end": 2863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2869,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2874,
											"end": 3230,
											"name": "tag",
											"source": 6,
											"value": "691"
										},
										{
											"begin": 2874,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3079,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3154,
											"end": 3188,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3149,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3189,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3230,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3412,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3235,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3354,
											"end": 3372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3412,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ARCHIVING_COMMIT_ROUND_DURATION()": "531780bb",
							"ARCHIVING_DATA_BATCH_SIZE()": "4ed60b2a",
							"ARCHIVING_MAX_CONSENSUS_WORKER_COUNT()": "ac846e79",
							"ARCHIVING_MIN_CONSENSUS_WORKER_COUNT()": "5d1c3182",
							"ARCHIVING_MIN_REP_DataValidation()": "f5bec1ad",
							"ARCHIVING_MIN_REWARD_DataValidation()": "08e7f0db",
							"ARCHIVING_MIN_STAKE()": "0a5a4c20",
							"ARCHIVING_REVEAL_ROUND_DURATION()": "8360034d",
							"AddressManager()": "7a34da67",
							"ArchivingSystem()": "b6c6ec02",
							"COMPLIANCE_COMMIT_ROUND_DURATION()": "6785f847",
							"COMPLIANCE_DATA_BATCH_SIZE()": "175bf630",
							"COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT()": "31911c91",
							"COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT()": "728d23ab",
							"COMPLIANCE_MIN_REP_DataValidation()": "6a8e0ece",
							"COMPLIANCE_MIN_REWARD_DataValidation()": "34c37e21",
							"COMPLIANCE_MIN_STAKE()": "42df5641",
							"COMPLIANCE_REVEAL_ROUND_DURATION()": "9a175938",
							"ComplianceSystem()": "06606d67",
							"INDEXING_COMMIT_ROUND_DURATION()": "e9704f81",
							"INDEXING_DATA_BATCH_SIZE()": "c95b53c5",
							"INDEXING_MAX_CONSENSUS_WORKER_COUNT()": "f4e20b9c",
							"INDEXING_MIN_CONSENSUS_WORKER_COUNT()": "444d62b6",
							"INDEXING_MIN_REP_DataValidation()": "2be05960",
							"INDEXING_MIN_REWARD_DataValidation()": "2bf8abb3",
							"INDEXING_MIN_STAKE()": "779231b2",
							"INDEXING_REVEAL_ROUND_DURATION()": "7e8603e9",
							"IndexingSystem()": "fbf14851",
							"MAX_CONTRACT_STORED_BATCHES()": "4e5638f5",
							"MAX_SUCCEEDING_NOVOTES()": "d4efd2ba",
							"MAX_TOTAL_WORKERS()": "a327181b",
							"MAX_UPDATE_ITERATIONS()": "90d10b6e",
							"NOVOTE_REGISTRATION_WAIT_DURATION()": "d0eed967",
							"RepManager()": "29a47bc7",
							"Reputation()": "9904ed8d",
							"RewardManager()": "51912f29",
							"SPOT_COMMIT_ROUND_DURATION()": "e6fdd4c0",
							"SPOT_DATA_BATCH_SIZE()": "c6eacbfe",
							"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "e0de3d7c",
							"SPOT_INTER_ALLOCATION_DURATION()": "e5f14824",
							"SPOT_MAX_CONSENSUS_WORKER_COUNT()": "a35b3b09",
							"SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "bf09ff70",
							"SPOT_MIN_CONSENSUS_WORKER_COUNT()": "fb50a473",
							"SPOT_MIN_REP_DataValidation()": "86b0b4c5",
							"SPOT_MIN_REP_SpotData()": "5cb361f6",
							"SPOT_MIN_REWARD_DataValidation()": "8724450f",
							"SPOT_MIN_REWARD_SpotData()": "d81109ce",
							"SPOT_MIN_STAKE()": "00653ff8",
							"SPOT_NB_TIMEFRAMES()": "b6118450",
							"SPOT_REVEAL_ROUND_DURATION()": "1d0fb88e",
							"SPOT_TIMEFRAME_DURATION()": "87ce6311",
							"SPOT_TOGGLE_ENABLED()": "36fc43fc",
							"SpottingSystem()": "d8645d37",
							"StakeManager()": "83cc6ef2",
							"VOTE_QUORUM()": "c7761fab",
							"destroyContract()": "092a5cce",
							"getAddressManager()": "5492f302",
							"getArchivingSystem()": "463444b7",
							"getComplianceSystem()": "f67362fe",
							"getExordeToken()": "2e2f93f3",
							"getIndexingSystem()": "7a0ec25b",
							"getMaxTotalWorkers()": "98a54e2b",
							"getRepManager()": "0855d151",
							"getReputationSystem()": "e992dca7",
							"getRewardManager()": "04e76c8f",
							"getSpottingSystem()": "b45d9d8d",
							"getStakeManager()": "ca64f9e7",
							"getVoteQuorum()": "ea19733c",
							"get_ARCHIVING_COMMIT_ROUND_DURATION()": "9279e9d4",
							"get_ARCHIVING_DATA_BATCH_SIZE()": "0363a1bf",
							"get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT()": "3968ec84",
							"get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT()": "995adbdd",
							"get_ARCHIVING_MIN_REP_DataValidation()": "49b46787",
							"get_ARCHIVING_MIN_REWARD_DataValidation()": "893b2a76",
							"get_ARCHIVING_MIN_STAKE()": "b1562f67",
							"get_ARCHIVING_REVEAL_ROUND_DURATION()": "29e3dd1f",
							"get_COMPLIANCE_COMMIT_ROUND_DURATION()": "484df80a",
							"get_COMPLIANCE_DATA_BATCH_SIZE()": "d1a89a46",
							"get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT()": "dc7048c1",
							"get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT()": "fff5f946",
							"get_COMPLIANCE_MIN_REP_DataValidation()": "89b212d3",
							"get_COMPLIANCE_MIN_REWARD_DataValidation()": "f116c4e0",
							"get_COMPLIANCE_MIN_STAKE()": "e3dfc0b2",
							"get_COMPLIANCE_REVEAL_ROUND_DURATION()": "2b0afab3",
							"get_INDEXING_COMMIT_ROUND_DURATION()": "90cc59eb",
							"get_INDEXING_DATA_BATCH_SIZE()": "cb3a2a88",
							"get_INDEXING_MAX_CONSENSUS_WORKER_COUNT()": "e68c9c30",
							"get_INDEXING_MIN_CONSENSUS_WORKER_COUNT()": "a1a4575a",
							"get_INDEXING_MIN_REP_DataValidation()": "849f9f0a",
							"get_INDEXING_MIN_REWARD_DataValidation()": "386d0976",
							"get_INDEXING_MIN_STAKE()": "bf34f749",
							"get_INDEXING_REVEAL_ROUND_DURATION()": "8a13725d",
							"get_MAX_CONTRACT_STORED_BATCHES()": "e3115d3c",
							"get_MAX_SUCCEEDING_NOVOTES()": "9fb491f6",
							"get_MAX_UPDATE_ITERATIONS()": "7d630cb0",
							"get_NOVOTE_REGISTRATION_WAIT_DURATION()": "0f1f0ffe",
							"get_SPOT_COMMIT_ROUND_DURATION()": "3692616a",
							"get_SPOT_DATA_BATCH_SIZE()": "9d1f2ada",
							"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD()": "b38e885e",
							"get_SPOT_INTER_ALLOCATION_DURATION()": "c4a306f8",
							"get_SPOT_MAX_CONSENSUS_WORKER_COUNT()": "dfeceed7",
							"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD()": "be250988",
							"get_SPOT_MIN_CONSENSUS_WORKER_COUNT()": "bd40ef4c",
							"get_SPOT_MIN_REP_DataValidation()": "0b08bfd9",
							"get_SPOT_MIN_REP_SpotData()": "abb10b9b",
							"get_SPOT_MIN_REWARD_DataValidation()": "f80de0a0",
							"get_SPOT_MIN_REWARD_SpotData()": "30c0bb79",
							"get_SPOT_MIN_STAKE()": "ff622dda",
							"get_SPOT_NB_TIMEFRAMES()": "e66d543a",
							"get_SPOT_REVEAL_ROUND_DURATION()": "72e54030",
							"get_SPOT_TIMEFRAME_DURATION()": "0f78cc76",
							"get_SPOT_TOGGLE_ENABLED()": "4e87c5a8",
							"getsFuelSystem()": "557c1abe",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sFuel()": "ab43e78d",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"updateArchivingParameters(uint256,uint256)": "55a35f5c",
							"updateComplianceParameters(uint256,uint256)": "e168063c",
							"updateContractsAddresses(address,address,address,address,address,address,address,address,address,address,address)": "2d09a8e3",
							"updateGeneralParameters(uint256,uint256)": "61879075",
							"updateIndexingParameters(uint256,uint256)": "75dc6130",
							"updateSpottingParameters(uint256,uint256,bool)": "ee37f4a6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARCHIVING_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARCHIVING_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AddressManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ArchivingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ComplianceSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INDEXING_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IndexingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONTRACT_STORED_BATCHES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUCCEEDING_NOVOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_WORKERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_UPDATE_ITERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOVOTE_REGISTRATION_WAIT_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RepManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Reputation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RewardManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_GLOBAL_MAX_SPOT_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_INTER_ALLOCATION_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MAX_SPOT_PER_USER_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REP_SpotData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_REWARD_SpotData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_NB_TIMEFRAMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_TIMEFRAME_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPOT_TOGGLE_ENABLED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SpottingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_QUORUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddressManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArchivingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComplianceSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExordeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIndexingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxTotalWorkers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRepManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReputationSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpottingSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVoteQuorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_ARCHIVING_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_COMPLIANCE_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_INDEXING_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_CONTRACT_STORED_BATCHES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_SUCCEEDING_NOVOTES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_MAX_UPDATE_ITERATIONS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_NOVOTE_REGISTRATION_WAIT_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_COMMIT_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_DATA_BATCH_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_INTER_ALLOCATION_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MAX_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_CONSENSUS_WORKER_COUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REP_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REP_SpotData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REWARD_DataValidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_REWARD_SpotData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_MIN_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_NB_TIMEFRAMES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_REVEAL_ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_TIMEFRAME_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_SPOT_TOGGLE_ENABLED\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getsFuelSystem\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sFuel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateArchivingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateComplianceParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"StakeManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RepManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"Reputation_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"RewardManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"AddressManager_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"SpottingSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ComplianceSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"IndexingSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ArchivingSystem_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sFuel_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"updateContractsAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateGeneralParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"}],\"name\":\"updateIndexingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ParameterIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uintValue\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"boolValue\",\"type\":\"bool\"}],\"name\":\"updateSpottingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mathias Dail\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Parameters  v0.1\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"worksystems/Parameters.sol\":\"Parameters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"worksystems/Parameters.sol\":{\"keccak256\":\"0x1a13c67146d2380bf91faaf0bf14fcb1e4579101c6889b06a4c778530338b42d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7ff4859ac3befa6eb8b1d1c5b938fd5f0463075a6e43a7a7dced4577ab661593\",\"dweb:/ipfs/QmNqsGUjbsfthocxGBXMi541AiamSiyFu2yBLtqATY8RoE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1040,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "MAX_TOTAL_WORKERS",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1043,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "VOTE_QUORUM",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1046,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "MAX_UPDATE_ITERATIONS",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1049,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "MAX_CONTRACT_STORED_BATCHES",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1052,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1060,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_STAKE",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1063,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1066,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1069,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1080,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REWARD_SpotData",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1088,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REP_SpotData",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1096,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REWARD_DataValidation",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1104,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MIN_REP_DataValidation",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1107,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_INTER_ALLOCATION_DURATION",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1110,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_TOGGLE_ENABLED",
								"offset": 0,
								"slot": "16",
								"type": "t_bool"
							},
							{
								"astId": 1115,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_TIMEFRAME_DURATION",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1118,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1121,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 1124,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SPOT_NB_TIMEFRAMES",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 1127,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "MAX_SUCCEEDING_NOVOTES",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1130,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "NOVOTE_REGISTRATION_WAIT_DURATION",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1133,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 1136,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 1139,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 1147,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_MIN_STAKE",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 1150,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 1153,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 1161,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_MIN_REWARD_DataValidation",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							},
							{
								"astId": 1169,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "COMPLIANCE_MIN_REP_DataValidation",
								"offset": 0,
								"slot": "30",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "31",
								"type": "t_uint256"
							},
							{
								"astId": 1175,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "32",
								"type": "t_uint256"
							},
							{
								"astId": 1178,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "33",
								"type": "t_uint256"
							},
							{
								"astId": 1186,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_MIN_STAKE",
								"offset": 0,
								"slot": "34",
								"type": "t_uint256"
							},
							{
								"astId": 1189,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "35",
								"type": "t_uint256"
							},
							{
								"astId": 1192,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "36",
								"type": "t_uint256"
							},
							{
								"astId": 1200,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_MIN_REWARD_DataValidation",
								"offset": 0,
								"slot": "37",
								"type": "t_uint256"
							},
							{
								"astId": 1208,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "INDEXING_MIN_REP_DataValidation",
								"offset": 0,
								"slot": "38",
								"type": "t_uint256"
							},
							{
								"astId": 1211,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_DATA_BATCH_SIZE",
								"offset": 0,
								"slot": "39",
								"type": "t_uint256"
							},
							{
								"astId": 1214,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "40",
								"type": "t_uint256"
							},
							{
								"astId": 1217,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
								"offset": 0,
								"slot": "41",
								"type": "t_uint256"
							},
							{
								"astId": 1225,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_MIN_STAKE",
								"offset": 0,
								"slot": "42",
								"type": "t_uint256"
							},
							{
								"astId": 1228,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_COMMIT_ROUND_DURATION",
								"offset": 0,
								"slot": "43",
								"type": "t_uint256"
							},
							{
								"astId": 1231,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_REVEAL_ROUND_DURATION",
								"offset": 0,
								"slot": "44",
								"type": "t_uint256"
							},
							{
								"astId": 1239,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_MIN_REWARD_DataValidation",
								"offset": 0,
								"slot": "45",
								"type": "t_uint256"
							},
							{
								"astId": 1247,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ARCHIVING_MIN_REP_DataValidation",
								"offset": 0,
								"slot": "46",
								"type": "t_uint256"
							},
							{
								"astId": 1249,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "token",
								"offset": 0,
								"slot": "47",
								"type": "t_address"
							},
							{
								"astId": 1251,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "StakeManager",
								"offset": 0,
								"slot": "48",
								"type": "t_address"
							},
							{
								"astId": 1253,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "Reputation",
								"offset": 0,
								"slot": "49",
								"type": "t_address"
							},
							{
								"astId": 1255,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "RepManager",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 1257,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "RewardManager",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1259,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "AddressManager",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 1261,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "sFuel",
								"offset": 0,
								"slot": "53",
								"type": "t_address"
							},
							{
								"astId": 1263,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "SpottingSystem",
								"offset": 0,
								"slot": "54",
								"type": "t_address"
							},
							{
								"astId": 1265,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ComplianceSystem",
								"offset": 0,
								"slot": "55",
								"type": "t_address"
							},
							{
								"astId": 1267,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "IndexingSystem",
								"offset": 0,
								"slot": "56",
								"type": "t_address"
							},
							{
								"astId": 1269,
								"contract": "worksystems/Parameters.sol:Parameters",
								"label": "ArchivingSystem",
								"offset": 0,
								"slot": "57",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 213,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								212
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								212
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0"
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 124,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 133,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1"
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 198,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 197,
												"id": 200,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 212,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 206,
												"id": 209,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 212,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "608:235:2"
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							716
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 219,
									"members": [
										{
											"id": 216,
											"name": "Down",
											"nodeType": "EnumValue",
											"src": "245:4:3"
										},
										{
											"id": 217,
											"name": "Up",
											"nodeType": "EnumValue",
											"src": "287:2:3"
										},
										{
											"id": 218,
											"name": "Zero",
											"nodeType": "EnumValue",
											"src": "318:4:3"
										}
									],
									"name": "Rounding",
									"nodeType": "EnumDefinition",
									"src": "221:122:3"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "480:38:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 229,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "497:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 230,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "502:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 233,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "510:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:14:3",
													"trueExpression": {
														"id": 232,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "506:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 235,
												"nodeType": "Return",
												"src": "490:21:3"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "426:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "437:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:3"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "471:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:3"
									},
									"scope": 716,
									"src": "413:105:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "656:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 247,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "673:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 248,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "677:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "673:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "685:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "673:13:3",
													"trueExpression": {
														"id": 250,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "681:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 253,
												"nodeType": "Return",
												"src": "666:20:3"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "524:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "602:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "613:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:3"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "647:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:9:3"
									},
									"scope": 716,
									"src": "589:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "877:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 265,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "932:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 266,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "936:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "932:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 268,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "931:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 269,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "942:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 270,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "946:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "942:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 272,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "951:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "941:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "931:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 276,
												"nodeType": "Return",
												"src": "924:28:3"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "699:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "823:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "834:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:22:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "868:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:3"
									},
									"scope": 716,
									"src": "806:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1229:123:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 288,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1317:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1317:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 292,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "1331:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1335:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1331:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1330:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 296,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "1340:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1330:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1344:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1330:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1317:28:3",
													"trueExpression": {
														"hexValue": "30",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1326:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 301,
												"nodeType": "Return",
												"src": "1310:35:3"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "965:188:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1175:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1186:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1174:22:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "1220:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:9:3"
									},
									"scope": 716,
									"src": "1158:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1796:3797:3",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "1806:3781:3",
												"statements": [
													{
														"assignments": [
															316
														],
														"declarations": [
															{
																"constant": false,
																"id": 316,
																"mutability": "mutable",
																"name": "prod0",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "2127:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 315,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2127:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 317,
														"nodeType": "VariableDeclarationStatement",
														"src": "2127:13:3"
													},
													{
														"assignments": [
															319
														],
														"declarations": [
															{
																"constant": false,
																"id": 319,
																"mutability": "mutable",
																"name": "prod1",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "2199:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 318,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2199:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 320,
														"nodeType": "VariableDeclarationStatement",
														"src": "2199:13:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2279:157:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2297:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2314:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2317:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2324:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2320:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2320:6:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2307:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:20:3"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2301:2:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2344:18:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2357:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2360:1:3"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:9:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2344:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2415:5:3"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2408:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:34:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2379:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "istanbul",
														"externalReferences": [
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:5:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "2400:5:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "2415:5:3",
																"valueSize": 1
															},
															{
																"declaration": 319,
																"isOffset": false,
																"isSlot": false,
																"src": "2379:5:3",
																"valueSize": 1
															},
															{
																"declaration": 306,
																"isOffset": false,
																"isSlot": false,
																"src": "2314:1:3",
																"valueSize": 1
															},
															{
																"declaration": 306,
																"isOffset": false,
																"isSlot": false,
																"src": "2357:1:3",
																"valueSize": 1
															},
															{
																"declaration": 308,
																"isOffset": false,
																"isSlot": false,
																"src": "2317:1:3",
																"valueSize": 1
															},
															{
																"declaration": 308,
																"isOffset": false,
																"isSlot": false,
																"src": "2360:1:3",
																"valueSize": 1
															}
														],
														"id": 321,
														"nodeType": "InlineAssembly",
														"src": "2270:166:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "2517:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2526:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2517:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 330,
														"nodeType": "IfStatement",
														"src": "2513:75:3",
														"trueBody": {
															"id": 329,
															"nodeType": "Block",
															"src": "2529:59:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 325,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 316,
																			"src": "2554:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 326,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2562:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2554:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 314,
																	"id": 328,
																	"nodeType": "Return",
																	"src": "2547:26:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 332,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "2698:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 333,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "2712:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2698:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 331,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2690:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2690:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "2690:28:3"
													},
													{
														"assignments": [
															338
														],
														"declarations": [
															{
																"constant": false,
																"id": 338,
																"mutability": "mutable",
																"name": "remainder",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "2974:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 337,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2974:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 339,
														"nodeType": "VariableDeclarationStatement",
														"src": "2974:17:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3014:291:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3083:38:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3103:1:3"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3106:1:3"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3109:11:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:25:3"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3083:9:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3203:41:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3226:9:3"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3237:5:3"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3223:2:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:20:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:32:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3203:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3261:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:5:3"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3281:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:21:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3261:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "istanbul",
														"externalReferences": [
															{
																"declaration": 310,
																"isOffset": false,
																"isSlot": false,
																"src": "3109:11:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "3237:5:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "3261:5:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "3274:5:3",
																"valueSize": 1
															},
															{
																"declaration": 319,
																"isOffset": false,
																"isSlot": false,
																"src": "3203:5:3",
																"valueSize": 1
															},
															{
																"declaration": 319,
																"isOffset": false,
																"isSlot": false,
																"src": "3216:5:3",
																"valueSize": 1
															},
															{
																"declaration": 338,
																"isOffset": false,
																"isSlot": false,
																"src": "3083:9:3",
																"valueSize": 1
															},
															{
																"declaration": 338,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:9:3",
																"valueSize": 1
															},
															{
																"declaration": 338,
																"isOffset": false,
																"isSlot": false,
																"src": "3281:9:3",
																"valueSize": 1
															},
															{
																"declaration": 306,
																"isOffset": false,
																"isSlot": false,
																"src": "3103:1:3",
																"valueSize": 1
															},
															{
																"declaration": 308,
																"isOffset": false,
																"isSlot": false,
																"src": "3106:1:3",
																"valueSize": 1
															}
														],
														"id": 340,
														"nodeType": "InlineAssembly",
														"src": "3005:300:3"
													},
													{
														"assignments": [
															342
														],
														"declarations": [
															{
																"constant": false,
																"id": 342,
																"mutability": "mutable",
																"name": "twos",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "3612:12:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3612:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 343,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "3627:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3642:12:3",
																			"subExpression": {
																				"id": 344,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 310,
																				"src": "3643:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3657:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3642:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 348,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3641:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3627:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3612:47:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3682:362:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3747:37:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3766:11:3"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3779:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3762:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3762:22:3"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3747:11:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3851:25:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3864:5:3"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3860:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3860:16:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3851:5:3"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3991:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4014:4:3"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4007:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4007:12:3"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4021:4:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4003:23:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:31:3"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3991:4:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "istanbul",
														"externalReferences": [
															{
																"declaration": 310,
																"isOffset": false,
																"isSlot": false,
																"src": "3747:11:3",
																"valueSize": 1
															},
															{
																"declaration": 310,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:11:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "3851:5:3",
																"valueSize": 1
															},
															{
																"declaration": 316,
																"isOffset": false,
																"isSlot": false,
																"src": "3864:5:3",
																"valueSize": 1
															},
															{
																"declaration": 342,
																"isOffset": false,
																"isSlot": false,
																"src": "3779:4:3",
																"valueSize": 1
															},
															{
																"declaration": 342,
																"isOffset": false,
																"isSlot": false,
																"src": "3871:4:3",
																"valueSize": 1
															},
															{
																"declaration": 342,
																"isOffset": false,
																"isSlot": false,
																"src": "3991:4:3",
																"valueSize": 1
															},
															{
																"declaration": 342,
																"isOffset": false,
																"isSlot": false,
																"src": "4014:4:3",
																"valueSize": 1
															},
															{
																"declaration": 342,
																"isOffset": false,
																"isSlot": false,
																"src": "4021:4:3",
																"valueSize": 1
															}
														],
														"id": 351,
														"nodeType": "InlineAssembly",
														"src": "3673:371:3"
													},
													{
														"expression": {
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 352,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "4110:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 353,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4119:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 354,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "4127:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4119:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4110:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 357,
														"nodeType": "ExpressionStatement",
														"src": "4110:21:3"
													},
													{
														"assignments": [
															359
														],
														"declarations": [
															{
																"constant": false,
																"id": 359,
																"mutability": "mutable",
																"name": "inverse",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "4449:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 358,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4449:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4468:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 361,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "4472:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4468:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 363,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4467:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4487:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4467:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4449:39:3"
													},
													{
														"expression": {
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 367,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4705:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4716:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 369,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "4720:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 370,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "4734:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4720:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4716:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4705:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 374,
														"nodeType": "ExpressionStatement",
														"src": "4705:36:3"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 375,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4774:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4785:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 377,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "4789:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 378,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "4803:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4789:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4785:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4774:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "4774:36:3"
													},
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 383,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4844:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4855:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 385,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "4859:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 386,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "4873:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4859:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4855:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4844:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "4844:36:3"
													},
													{
														"expression": {
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 391,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4914:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4925:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 393,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "4929:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 394,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "4943:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4929:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4925:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4914:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 398,
														"nodeType": "ExpressionStatement",
														"src": "4914:36:3"
													},
													{
														"expression": {
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 399,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4984:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4995:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "4999:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 402,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "5013:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4999:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4995:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4984:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 406,
														"nodeType": "ExpressionStatement",
														"src": "4984:36:3"
													},
													{
														"expression": {
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 407,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5055:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5066:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 409,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "5070:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 410,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "5084:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5070:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5066:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 414,
														"nodeType": "ExpressionStatement",
														"src": "5055:36:3"
													},
													{
														"expression": {
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 415,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "5525:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 416,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "5534:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 417,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5534:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5525:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 420,
														"nodeType": "ExpressionStatement",
														"src": "5525:24:3"
													},
													{
														"expression": {
															"id": 421,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5570:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 314,
														"id": 422,
														"nodeType": "Return",
														"src": "5563:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1358:305:3",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1693:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1712:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1731:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1731:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:73:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1780:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:16:3"
									},
									"scope": 716,
									"src": "1668:3925:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "5873:189:3",
										"statements": [
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "5883:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5883:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "5907:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 444,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5910:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "5913:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															425,
															469
														],
														"referencedDeclaration": 425,
														"src": "5900:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5900:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5883:42:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$219",
															"typeString": "enum Math.Rounding"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 448,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "5939:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$219",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 449,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "5951:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$219_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"src": "5951:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$219",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5939:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 453,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "5973:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 454,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "5976:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 455,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "5979:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 452,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5966:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5966:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5994:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5966:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5939:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "5935:98:3",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "5997:36:3",
													"statements": [
														{
															"expression": {
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 460,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "6011:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6021:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6011:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 463,
															"nodeType": "ExpressionStatement",
															"src": "6011:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 466,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "6049:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 467,
												"nodeType": "Return",
												"src": "6042:13:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "5599:121:3",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5750:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5769:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5788:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "rounding",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5817:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$219",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "5817:8:3"
													},
													"referencedDeclaration": 219,
													"src": "5817:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$219",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:100:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "5864:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5863:9:3"
									},
									"scope": 716,
									"src": "5725:337:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6338:2149:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "6352:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6357:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "6348:45:3",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "6360:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6381:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 476,
															"id": 481,
															"nodeType": "Return",
															"src": "6374:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "7058:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"hexValue": "31",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7075:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7058:18:3"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 678,
														"src": "7086:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"id": 490,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 472,
													"src": "7098:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7086:13:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 492,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7113:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "313238",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7118:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"src": "7113:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7124:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7113:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "7109:79:3",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "7127:61:3",
													"statements": [
														{
															"expression": {
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 497,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7141:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7147:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "7141:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 500,
															"nodeType": "ExpressionStatement",
															"src": "7141:9:3"
														},
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 501,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7164:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7175:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7164:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "7164:13:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 507,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7201:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3634",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7206:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "64"
														},
														"src": "7201:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7211:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7201:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "7197:77:3",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "7214:60:3",
													"statements": [
														{
															"expression": {
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 512,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7228:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7234:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "7228:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "7228:8:3"
														},
														{
															"expression": {
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 516,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7250:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7261:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7250:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 519,
															"nodeType": "ExpressionStatement",
															"src": "7250:13:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 522,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7287:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3332",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7292:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "7287:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7297:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7287:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7283:77:3",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7300:60:3",
													"statements": [
														{
															"expression": {
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 527,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7314:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7320:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7314:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"nodeType": "ExpressionStatement",
															"src": "7314:8:3"
														},
														{
															"expression": {
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 531,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7336:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7347:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7336:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 534,
															"nodeType": "ExpressionStatement",
															"src": "7336:13:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 537,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7373:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "3136",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7378:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "16"
														},
														"src": "7373:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7383:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7373:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "7369:76:3",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "7386:59:3",
													"statements": [
														{
															"expression": {
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 542,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7400:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7406:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "7400:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"nodeType": "ExpressionStatement",
															"src": "7400:8:3"
														},
														{
															"expression": {
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 546,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7422:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7433:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7422:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "7422:12:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 552,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7458:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "38",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7463:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "7458:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7467:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7458:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 566,
												"nodeType": "IfStatement",
												"src": "7454:74:3",
												"trueBody": {
													"id": 565,
													"nodeType": "Block",
													"src": "7470:58:3",
													"statements": [
														{
															"expression": {
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 557,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7484:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7490:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7484:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "7484:7:3"
														},
														{
															"expression": {
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 561,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7505:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7516:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "7505:12:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7541:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "34",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7546:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "7541:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7550:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7541:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "7537:74:3",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "7553:58:3",
													"statements": [
														{
															"expression": {
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 572,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "7567:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7573:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7567:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 575,
															"nodeType": "ExpressionStatement",
															"src": "7567:7:3"
														},
														{
															"expression": {
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 576,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7588:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7599:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7588:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "7588:12:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 582,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "7624:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">>",
														"rightExpression": {
															"hexValue": "32",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7629:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "7624:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7633:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7624:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 592,
												"nodeType": "IfStatement",
												"src": "7620:53:3",
												"trueBody": {
													"id": 591,
													"nodeType": "Block",
													"src": "7636:37:3",
													"statements": [
														{
															"expression": {
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 587,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "7650:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "<<=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7661:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 590,
															"nodeType": "ExpressionStatement",
															"src": "7650:12:3"
														}
													]
												}
											},
											{
												"id": 677,
												"nodeType": "UncheckedBlock",
												"src": "8073:408:3",
												"statements": [
													{
														"expression": {
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 593,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8097:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 594,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8107:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 595,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8116:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 596,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8120:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8116:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8107:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 599,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8106:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8097:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 603,
														"nodeType": "ExpressionStatement",
														"src": "8097:35:3"
													},
													{
														"expression": {
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8146:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 605,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8156:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 606,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8165:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 607,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8169:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8165:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8156:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8155:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8180:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8155:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8146:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 614,
														"nodeType": "ExpressionStatement",
														"src": "8146:35:3"
													},
													{
														"expression": {
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 615,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8195:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 616,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8205:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 617,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8214:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 618,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8218:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8205:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 621,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8204:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8229:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8204:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8195:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 625,
														"nodeType": "ExpressionStatement",
														"src": "8195:35:3"
													},
													{
														"expression": {
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8244:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 627,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8254:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 628,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8263:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 629,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8267:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8263:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8254:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 632,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8253:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8278:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8253:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8244:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 636,
														"nodeType": "ExpressionStatement",
														"src": "8244:35:3"
													},
													{
														"expression": {
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8293:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 638,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8303:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 639,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8312:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 640,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8316:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8312:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8303:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 643,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8302:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8327:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8293:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 647,
														"nodeType": "ExpressionStatement",
														"src": "8293:35:3"
													},
													{
														"expression": {
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 648,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8342:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 649,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8352:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 650,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8361:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 651,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8365:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8361:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8352:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 654,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8351:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8376:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8351:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8342:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 658,
														"nodeType": "ExpressionStatement",
														"src": "8342:35:3"
													},
													{
														"expression": {
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 659,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "8391:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 660,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "8401:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 661,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 472,
																					"src": "8410:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 662,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 485,
																					"src": "8414:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8410:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8401:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8400:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8425:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8400:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8391:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 669,
														"nodeType": "ExpressionStatement",
														"src": "8391:35:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 671,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "8451:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 672,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "8459:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 673,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "8463:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8459:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 670,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "8447:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8447:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 476,
														"id": 676,
														"nodeType": "Return",
														"src": "8440:30:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "6068:208:3",
										"text": " @dev Returns the square root of a number. It the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6295:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6295:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6294:11:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6329:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6329:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6328:9:3"
									},
									"scope": 716,
									"src": "6281:2206:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "8663:161:3",
										"statements": [
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "8673:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8673:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "8695:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 692,
														"name": "sqrt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															679,
															715
														],
														"referencedDeclaration": 679,
														"src": "8690:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8690:7:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8673:24:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$219",
															"typeString": "enum Math.Rounding"
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 696,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8711:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$219",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 697,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "8723:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$219_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"src": "8723:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$219",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "8711:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 700,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "8738:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 701,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "8747:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8738:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 703,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "8756:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8738:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8711:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "IfStatement",
												"src": "8707:88:3",
												"trueBody": {
													"id": 710,
													"nodeType": "Block",
													"src": "8759:36:3",
													"statements": [
														{
															"expression": {
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 706,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "8773:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8783:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8773:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "8773:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 712,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "8811:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 689,
												"id": 713,
												"nodeType": "Return",
												"src": "8804:13:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8493:89:3",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "8601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "rounding",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "8612:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$219",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 684,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 683,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 219,
														"src": "8612:8:3"
													},
													"referencedDeclaration": 219,
													"src": "8612:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$219",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:30:3"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "8654:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8654:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8653:9:3"
									},
									"scope": 716,
									"src": "8587:237:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 717,
							"src": "202:8624:3"
						}
					],
					"src": "103:8724:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1028
						]
					},
					"id": 1029,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1028,
							"linearizedBaseContracts": [
								1028
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 749,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															732
														],
														"declarations": [
															{
																"constant": false,
																"id": 732,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 749,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 731,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 736,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 734,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 737,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 738,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 744,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 730,
															"id": 743,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 746,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 747,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 730,
														"id": 748,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 726,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 1028,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 777,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 763,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 764,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 770,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 762,
															"id": 769,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 772,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 775,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 762,
														"id": 776,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 1028,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 819,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 791,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 798,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 796,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 790,
															"id": 797,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															800
														],
														"declarations": [
															{
																"constant": false,
																"id": 800,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 819,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 799,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 804,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 802,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 805,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 806,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 814,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 790,
															"id": 813,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 816,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 817,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 790,
														"id": 818,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 1028,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 847,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 832,
															"id": 839,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 842,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 843,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 845,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 832,
														"id": 846,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 1028,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 875,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 868,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 866,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 860,
															"id": 867,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 870,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 871,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 873,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 860,
														"id": 874,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 1028,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 888,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 886,
												"id": 890,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 1028,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 903,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 905,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 1028,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 916,
												"id": 920,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 1028,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 1028,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 1028,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 975,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 965,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 966,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 968,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 964,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 970,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 971,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 972,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 963,
														"id": 974,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 1028,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 1000,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 990,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 982,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 993,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 989,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 997,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 988,
														"id": 999,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 1028,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 1025,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1015,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1018,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1014,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1020,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1005,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1022,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1013,
														"id": 1024,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 1028,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1029,
							"src": "482:6300:4"
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"worksystems/Parameters.sol": {
				"ast": {
					"absolutePath": "worksystems/Parameters.sol",
					"exportedSymbols": {
						"Context": [
							212
						],
						"IERC20": [
							190
						],
						"Math": [
							716
						],
						"Ownable": [
							112
						],
						"Parameters": [
							2366
						],
						"SafeMath": [
							1028
						]
					},
					"id": 2367,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1030,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:22:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1031,
							"nodeType": "ImportDirective",
							"scope": 2367,
							"sourceUnit": 191,
							"src": "67:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1032,
							"nodeType": "ImportDirective",
							"scope": 2367,
							"sourceUnit": 1029,
							"src": "125:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 1033,
							"nodeType": "ImportDirective",
							"scope": 2367,
							"sourceUnit": 717,
							"src": "184:53:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1034,
							"nodeType": "ImportDirective",
							"scope": 2367,
							"sourceUnit": 113,
							"src": "239:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1036,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "374:7:5"
									},
									"id": 1037,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:5"
								}
							],
							"contractDependencies": [
								112,
								212
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1035,
								"nodeType": "StructuredDocumentation",
								"src": "295:54:5",
								"text": "@title Parameters  v0.1\n@author Mathias Dail"
							},
							"fullyImplemented": true,
							"id": 2366,
							"linearizedBaseContracts": [
								2366,
								112,
								212
							],
							"name": "Parameters",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a327181b",
									"id": 1040,
									"mutability": "mutable",
									"name": "MAX_TOTAL_WORKERS",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "459:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1038,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "459:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1039,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "494:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7761fab",
									"id": 1043,
									"mutability": "mutable",
									"name": "VOTE_QUORUM",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "505:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1042,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "535:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "90d10b6e",
									"id": 1046,
									"mutability": "mutable",
									"name": "MAX_UPDATE_ITERATIONS",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "547:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "547:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1045,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "587:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4e5638f5",
									"id": 1049,
									"mutability": "mutable",
									"name": "MAX_CONTRACT_STORED_BATCHES",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "599:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323030303030",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "645:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000_by_1",
											"typeString": "int_const 200000"
										},
										"value": "200000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6eacbfe",
									"id": 1052,
									"mutability": "mutable",
									"name": "SPOT_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "711:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "711:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1051,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "749:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "00653ff8",
									"id": 1060,
									"mutability": "mutable",
									"name": "SPOT_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "757:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "757:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 1054,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "789:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "795:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "801:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "795:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1058,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "794:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "789:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb50a473",
									"id": 1063,
									"mutability": "mutable",
									"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "812:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "812:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1062,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "862:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a35b3b09",
									"id": 1066,
									"mutability": "mutable",
									"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "873:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "873:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "923:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fdd4c0",
									"id": 1069,
									"mutability": "mutable",
									"name": "SPOT_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "931:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "931:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "975:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0fb88e",
									"id": 1072,
									"mutability": "mutable",
									"name": "SPOT_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "985:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1070,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "985:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1071,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1029:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d81109ce",
									"id": 1080,
									"mutability": "mutable",
									"name": "SPOT_MIN_REWARD_SpotData",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1046:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1079,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1074,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1088:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1099:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1093:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1078,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1092:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "1088:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5cb361f6",
									"id": 1088,
									"mutability": "mutable",
									"name": "SPOT_MIN_REP_SpotData",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1109:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1087,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1082,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1149:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1155:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1161:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1155:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1086,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1154:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "1149:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8724450f",
									"id": 1096,
									"mutability": "mutable",
									"name": "SPOT_MIN_REWARD_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1171:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1089,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1090,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1219:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1224:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1230:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1224:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1094,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1223:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "1219:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86b0b4c5",
									"id": 1104,
									"mutability": "mutable",
									"name": "SPOT_MIN_REP_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1240:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1240:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1098,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1286:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1292:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1298:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1292:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1102,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1291:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "1286:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5f14824",
									"id": 1107,
									"mutability": "mutable",
									"name": "SPOT_INTER_ALLOCATION_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1338:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1338:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1386:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36fc43fc",
									"id": 1110,
									"mutability": "mutable",
									"name": "SPOT_TOGGLE_ENABLED",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1396:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1108,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1396:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 1109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1430:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87ce6311",
									"id": 1115,
									"mutability": "mutable",
									"name": "SPOT_TIMEFRAME_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1441:47:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1441:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										},
										"id": 1114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3135",
											"id": 1112,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1483:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_15_by_1",
												"typeString": "int_const 15"
											},
											"value": "15"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 1113,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1486:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "1483:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e0de3d7c",
									"id": 1118,
									"mutability": "mutable",
									"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1508:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1508:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1558:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf09ff70",
									"id": 1121,
									"mutability": "mutable",
									"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1569:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1569:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 1120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1621:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6118450",
									"id": 1124,
									"mutability": "mutable",
									"name": "SPOT_NB_TIMEFRAMES",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1630:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1666:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4efd2ba",
									"id": 1127,
									"mutability": "mutable",
									"name": "MAX_SUCCEEDING_NOVOTES",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1674:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1715:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0eed967",
									"id": 1130,
									"mutability": "mutable",
									"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1727:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33363030",
										"id": 1129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1779:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "3600"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "175bf630",
									"id": 1133,
									"mutability": "mutable",
									"name": "COMPLIANCE_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1859:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1903:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "728d23ab",
									"id": 1136,
									"mutability": "mutable",
									"name": "COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1912:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1134,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1912:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1968:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "31911c91",
									"id": 1139,
									"mutability": "mutable",
									"name": "COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "1977:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1977:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1138,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2033:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42df5641",
									"id": 1147,
									"mutability": "mutable",
									"name": "COMPLIANCE_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2044:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2044:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 1146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 1141,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2082:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2088:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2088:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1145,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2087:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2082:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6785f847",
									"id": 1150,
									"mutability": "mutable",
									"name": "COMPLIANCE_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2105:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2105:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1149,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2155:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a175938",
									"id": 1153,
									"mutability": "mutable",
									"name": "COMPLIANCE_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2165:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2165:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2215:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "34c37e21",
									"id": 1161,
									"mutability": "mutable",
									"name": "COMPLIANCE_MIN_REWARD_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2227:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2227:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1160,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1155,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2281:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2286:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2292:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "2286:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1159,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2285:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "2281:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6a8e0ece",
									"id": 1169,
									"mutability": "mutable",
									"name": "COMPLIANCE_MIN_REP_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2302:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2302:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1163,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2354:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2360:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2366:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "2360:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1167,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2359:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "2354:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95b53c5",
									"id": 1172,
									"mutability": "mutable",
									"name": "INDEXING_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2428:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2428:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2470:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "444d62b6",
									"id": 1175,
									"mutability": "mutable",
									"name": "INDEXING_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2479:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2479:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2533:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f4e20b9c",
									"id": 1178,
									"mutability": "mutable",
									"name": "INDEXING_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2542:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2542:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2596:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "779231b2",
									"id": 1186,
									"mutability": "mutable",
									"name": "INDEXING_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2607:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2607:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 1185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 1180,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2643:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2649:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2655:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2649:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1184,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2648:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "2643:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9704f81",
									"id": 1189,
									"mutability": "mutable",
									"name": "INDEXING_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2666:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2666:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1188,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e8603e9",
									"id": 1192,
									"mutability": "mutable",
									"name": "INDEXING_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2724:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2724:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1191,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2772:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2bf8abb3",
									"id": 1200,
									"mutability": "mutable",
									"name": "INDEXING_MIN_REWARD_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2784:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1193,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2784:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1199,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1194,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2836:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2841:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2847:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "2841:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1198,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2840:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "2836:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2be05960",
									"id": 1208,
									"mutability": "mutable",
									"name": "INDEXING_MIN_REP_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2857:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2857:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1202,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2907:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2913:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2919:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "2913:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1206,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2912:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "2907:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ed60b2a",
									"id": 1211,
									"mutability": "mutable",
									"name": "ARCHIVING_DATA_BATCH_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "2979:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2979:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3022:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5d1c3182",
									"id": 1214,
									"mutability": "mutable",
									"name": "ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3031:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3031:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3086:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac846e79",
									"id": 1217,
									"mutability": "mutable",
									"name": "ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3095:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3095:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 1216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3150:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a5a4c20",
									"id": 1225,
									"mutability": "mutable",
									"name": "ARCHIVING_MIN_STAKE",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3161:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1218,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3161:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										},
										"id": 1224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3235",
											"id": 1219,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3198:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_25_by_1",
												"typeString": "int_const 25"
											},
											"value": "25"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3204:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3210:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3204:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 1223,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3203:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "3198:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "531780bb",
									"id": 1228,
									"mutability": "mutable",
									"name": "ARCHIVING_COMMIT_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3221:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3221:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343030",
										"id": 1227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3270:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400_by_1",
											"typeString": "int_const 400"
										},
										"value": "400"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8360034d",
									"id": 1231,
									"mutability": "mutable",
									"name": "ARCHIVING_REVEAL_ROUND_DURATION",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3280:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1229,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3280:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1230,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_180_by_1",
											"typeString": "int_const 180"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08e7f0db",
									"id": 1239,
									"mutability": "mutable",
									"name": "ARCHIVING_MIN_REWARD_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3341:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3341:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1238,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1233,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3394:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3399:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3405:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "3399:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1237,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3398:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "3394:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f5bec1ad",
									"id": 1247,
									"mutability": "mutable",
									"name": "ARCHIVING_MIN_REP_DataValidation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3415:66:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3415:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 1246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1241,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3466:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3472:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3478:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "3472:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000_by_1",
														"typeString": "int_const 1000000000000000"
													}
												}
											],
											"id": 1245,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3471:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000_by_1",
												"typeString": "int_const 1000000000000000"
											}
										},
										"src": "3466:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1249,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3520:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1248,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3520:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83cc6ef2",
									"id": 1251,
									"mutability": "mutable",
									"name": "StakeManager",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3547:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1250,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3547:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9904ed8d",
									"id": 1253,
									"mutability": "mutable",
									"name": "Reputation",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3581:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1252,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3581:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "29a47bc7",
									"id": 1255,
									"mutability": "mutable",
									"name": "RepManager",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3613:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3613:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "51912f29",
									"id": 1257,
									"mutability": "mutable",
									"name": "RewardManager",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3645:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1256,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3645:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a34da67",
									"id": 1259,
									"mutability": "mutable",
									"name": "AddressManager",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3684:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1258,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3684:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab43e78d",
									"id": 1261,
									"mutability": "mutable",
									"name": "sFuel",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3720:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1260,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3720:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8645d37",
									"id": 1263,
									"mutability": "mutable",
									"name": "SpottingSystem",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3749:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1262,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3749:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06606d67",
									"id": 1265,
									"mutability": "mutable",
									"name": "ComplianceSystem",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3785:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1264,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3785:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbf14851",
									"id": 1267,
									"mutability": "mutable",
									"name": "IndexingSystem",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3823:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3823:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b6c6ec02",
									"id": 1269,
									"mutability": "mutable",
									"name": "ArchivingSystem",
									"nodeType": "VariableDeclaration",
									"scope": 2366,
									"src": "3859:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3859:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "9017:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1277,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "9049:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9049:7:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9041:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1275,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9041:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9041:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1274,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "9028:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "9028:30:5"
											}
										]
									},
									"functionSelector": "092a5cce",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1272,
											"modifierName": {
												"id": 1271,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9007:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "9007:9:5"
										}
									],
									"name": "destroyContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8997:2:5"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9017:0:5"
									},
									"scope": 2366,
									"src": "8973:93:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "9171:383:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1292,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "9193:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9211:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9193:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "9190:79:5",
												"trueBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "9213:56:5",
													"statements": [
														{
															"expression": {
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1295,
																	"name": "MAX_TOTAL_WORKERS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "9228:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1296,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "9248:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9228:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1298,
															"nodeType": "ExpressionStatement",
															"src": "9228:29:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1301,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "9282:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9300:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9282:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "9279:74:5",
												"trueBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "9302:51:5",
													"statements": [
														{
															"expression": {
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1304,
																	"name": "VOTE_QUORUM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "9317:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1305,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "9332:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9317:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1307,
															"nodeType": "ExpressionStatement",
															"src": "9317:24:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "9366:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9384:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "9366:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "9363:84:5",
												"trueBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "9386:61:5",
													"statements": [
														{
															"expression": {
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1313,
																	"name": "MAX_UPDATE_ITERATIONS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "9401:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1314,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "9426:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9401:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "9401:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "9460:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9478:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "9460:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "9457:90:5",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "9480:67:5",
													"statements": [
														{
															"expression": {
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1322,
																	"name": "MAX_CONTRACT_STORED_BATCHES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "9495:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1323,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "9526:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9495:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1325,
															"nodeType": "ExpressionStatement",
															"src": "9495:40:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "61879075",
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"modifierName": {
												"id": 1289,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9161:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "9161:9:5"
										}
									],
									"name": "updateGeneralParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "9111:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "9135:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9110:43:5"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9171:0:5"
									},
									"scope": 2366,
									"src": "9078:476:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "9941:1052:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1356,
														"name": "StakeManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "9955:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9980:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9972:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9972:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9972:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9955:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "9952:86:5",
												"trueBody": {
													"id": 1366,
													"nodeType": "Block",
													"src": "9983:55:5",
													"statements": [
														{
															"expression": {
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1362,
																	"name": "StakeManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "9998:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1363,
																	"name": "StakeManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "10013:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9998:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1365,
															"nodeType": "ExpressionStatement",
															"src": "9998:28:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1368,
														"name": "RepManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "10051:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10074:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10066:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1369,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10066:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10066:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10051:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "10048:80:5",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "10077:51:5",
													"statements": [
														{
															"expression": {
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1374,
																	"name": "RepManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "10092:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1375,
																	"name": "RepManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "10105:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10092:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "10092:24:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1380,
														"name": "Reputation_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "10141:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10164:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1381,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10156:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10156:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10141:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1391,
												"nodeType": "IfStatement",
												"src": "10138:80:5",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "10167:51:5",
													"statements": [
														{
															"expression": {
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1386,
																	"name": "Reputation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "10182:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1387,
																	"name": "Reputation_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "10195:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10182:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "10182:24:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1392,
														"name": "RewardManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "10231:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10257:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10249:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10249:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10249:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10231:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"nodeType": "IfStatement",
												"src": "10228:89:5",
												"trueBody": {
													"id": 1402,
													"nodeType": "Block",
													"src": "10260:57:5",
													"statements": [
														{
															"expression": {
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1398,
																	"name": "RewardManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "10275:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1399,
																	"name": "RewardManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "10291:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10275:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "10275:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1404,
														"name": "AddressManager_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "10330:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10357:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10349:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1405,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10349:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10349:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10330:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "10327:92:5",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "10360:59:5",
													"statements": [
														{
															"expression": {
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1410,
																	"name": "AddressManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "10375:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1411,
																	"name": "AddressManager_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1339,
																	"src": "10392:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10375:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1413,
															"nodeType": "ExpressionStatement",
															"src": "10375:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1416,
														"name": "ComplianceSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "10432:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10461:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1417,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10453:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10453:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10432:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1427,
												"nodeType": "IfStatement",
												"src": "10429:98:5",
												"trueBody": {
													"id": 1426,
													"nodeType": "Block",
													"src": "10464:63:5",
													"statements": [
														{
															"expression": {
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1422,
																	"name": "ComplianceSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "10479:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1423,
																	"name": "ComplianceSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1343,
																	"src": "10498:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10479:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1425,
															"nodeType": "ExpressionStatement",
															"src": "10479:36:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1428,
														"name": "SpottingSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "10540:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10567:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10559:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1429,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10559:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10559:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10540:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "10537:92:5",
												"trueBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "10570:59:5",
													"statements": [
														{
															"expression": {
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1434,
																	"name": "SpottingSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "10585:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1435,
																	"name": "SpottingSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "10602:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10585:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "10585:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1440,
														"name": "IndexingSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "10642:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10669:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10661:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1441,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10661:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10661:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10642:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1451,
												"nodeType": "IfStatement",
												"src": "10639:92:5",
												"trueBody": {
													"id": 1450,
													"nodeType": "Block",
													"src": "10672:59:5",
													"statements": [
														{
															"expression": {
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1446,
																	"name": "IndexingSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "10687:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1447,
																	"name": "IndexingSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "10704:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10687:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "10687:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1452,
														"name": "ArchivingSystem_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "10744:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10772:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10764:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1453,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10764:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10764:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10744:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1463,
												"nodeType": "IfStatement",
												"src": "10741:95:5",
												"trueBody": {
													"id": 1462,
													"nodeType": "Block",
													"src": "10775:61:5",
													"statements": [
														{
															"expression": {
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1458,
																	"name": "ArchivingSystem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "10790:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1459,
																	"name": "ArchivingSystem_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "10808:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10790:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1461,
															"nodeType": "ExpressionStatement",
															"src": "10790:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1464,
														"name": "sFuel_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "10849:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10867:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10859:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10859:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10859:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10849:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "10846:65:5",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "10870:41:5",
													"statements": [
														{
															"expression": {
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1470,
																	"name": "sFuel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "10885:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1471,
																	"name": "sFuel_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "10893:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10885:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "10885:14:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1476,
														"name": "token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "10924:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10942:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10934:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1477,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10934:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10934:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10924:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1487,
												"nodeType": "IfStatement",
												"src": "10921:65:5",
												"trueBody": {
													"id": 1486,
													"nodeType": "Block",
													"src": "10945:41:5",
													"statements": [
														{
															"expression": {
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1482,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "10960:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1483,
																	"name": "token_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "10968:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10960:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1485,
															"nodeType": "ExpressionStatement",
															"src": "10960:14:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2d09a8e3",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1354,
											"modifierName": {
												"id": 1353,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "9931:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "9931:9:5"
										}
									],
									"name": "updateContractsAddresses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "StakeManager_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "RepManager_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9619:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "Reputation_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9640:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9640:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "RewardManager_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9661:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9661:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "AddressManager_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9685:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9685:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "SpottingSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9749:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9749:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "ComplianceSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9774:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9774:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "IndexingSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9801:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9801:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "ArchivingSystem_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "sFuel_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9891:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "token_",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "9907:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9907:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9595:327:5"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9941:0:5"
									},
									"scope": 2366,
									"src": "9562:1431:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "11123:1839:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1500,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11145:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11163:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11145:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1508,
												"nodeType": "IfStatement",
												"src": "11142:83:5",
												"trueBody": {
													"id": 1507,
													"nodeType": "Block",
													"src": "11165:60:5",
													"statements": [
														{
															"expression": {
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1503,
																	"name": "SPOT_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "11180:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1504,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11204:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11180:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "11180:33:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1509,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11238:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11256:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "11238:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "IfStatement",
												"src": "11235:77:5",
												"trueBody": {
													"id": 1516,
													"nodeType": "Block",
													"src": "11258:54:5",
													"statements": [
														{
															"expression": {
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1512,
																	"name": "SPOT_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "11273:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1513,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11291:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11273:27:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "11273:27:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1518,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11325:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11343:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "11325:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1526,
												"nodeType": "IfStatement",
												"src": "11322:94:5",
												"trueBody": {
													"id": 1525,
													"nodeType": "Block",
													"src": "11345:71:5",
													"statements": [
														{
															"expression": {
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1521,
																	"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "11360:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1522,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11395:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11360:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1524,
															"nodeType": "ExpressionStatement",
															"src": "11360:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1527,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11429:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11447:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "11429:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1535,
												"nodeType": "IfStatement",
												"src": "11426:94:5",
												"trueBody": {
													"id": 1534,
													"nodeType": "Block",
													"src": "11449:71:5",
													"statements": [
														{
															"expression": {
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1530,
																	"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "11464:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1531,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11499:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11464:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1533,
															"nodeType": "ExpressionStatement",
															"src": "11464:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1536,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11533:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "11533:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1544,
												"nodeType": "IfStatement",
												"src": "11530:89:5",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "11553:66:5",
													"statements": [
														{
															"expression": {
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1539,
																	"name": "SPOT_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "11568:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1540,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11598:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11568:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1542,
															"nodeType": "ExpressionStatement",
															"src": "11568:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1545,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11632:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11650:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "11632:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "11629:89:5",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "11652:66:5",
													"statements": [
														{
															"expression": {
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1548,
																	"name": "SPOT_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "11667:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1549,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11697:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11667:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "11667:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1554,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11731:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11749:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "11731:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "11728:87:5",
												"trueBody": {
													"id": 1561,
													"nodeType": "Block",
													"src": "11751:64:5",
													"statements": [
														{
															"expression": {
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1557,
																	"name": "SPOT_MIN_REWARD_SpotData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "11766:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1558,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11794:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11766:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1560,
															"nodeType": "ExpressionStatement",
															"src": "11766:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11828:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11846:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "11828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "11825:84:5",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "11848:61:5",
													"statements": [
														{
															"expression": {
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1566,
																	"name": "SPOT_MIN_REP_SpotData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "11863:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1567,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11888:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11863:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1569,
															"nodeType": "ExpressionStatement",
															"src": "11863:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1572,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "11922:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "39",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11940:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_9_by_1",
															"typeString": "int_const 9"
														},
														"value": "9"
													},
													"src": "11922:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "IfStatement",
												"src": "11919:93:5",
												"trueBody": {
													"id": 1579,
													"nodeType": "Block",
													"src": "11942:70:5",
													"statements": [
														{
															"expression": {
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1575,
																	"name": "SPOT_MIN_REWARD_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "11957:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1576,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "11991:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11957:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"nodeType": "ExpressionStatement",
															"src": "11957:43:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1581,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12025:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12043:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "12025:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "12022:91:5",
												"trueBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "12046:67:5",
													"statements": [
														{
															"expression": {
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1584,
																	"name": "SPOT_MIN_REP_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "12061:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1585,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12092:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12061:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "12061:40:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1590,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12175:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3131",
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12193:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "12175:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "IfStatement",
												"src": "12172:93:5",
												"trueBody": {
													"id": 1597,
													"nodeType": "Block",
													"src": "12196:69:5",
													"statements": [
														{
															"expression": {
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1593,
																	"name": "SPOT_INTER_ALLOCATION_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "12211:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1594,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12244:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12211:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1596,
															"nodeType": "ExpressionStatement",
															"src": "12211:42:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1599,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12278:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3132",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12296:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "12278:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "12275:82:5",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "12299:58:5",
													"statements": [
														{
															"expression": {
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1602,
																	"name": "SPOT_TOGGLE_ENABLED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "12314:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1603,
																	"name": "boolValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "12336:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12314:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1605,
															"nodeType": "ExpressionStatement",
															"src": "12314:31:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1608,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12370:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3133",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12388:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_13_by_1",
															"typeString": "int_const 13"
														},
														"value": "13"
													},
													"src": "12370:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1616,
												"nodeType": "IfStatement",
												"src": "12367:86:5",
												"trueBody": {
													"id": 1615,
													"nodeType": "Block",
													"src": "12391:62:5",
													"statements": [
														{
															"expression": {
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1611,
																	"name": "SPOT_TIMEFRAME_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "12406:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1612,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12432:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12406:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "12406:35:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1617,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12466:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3134",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12484:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_14_by_1",
															"typeString": "int_const 14"
														},
														"value": "14"
													},
													"src": "12466:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "IfStatement",
												"src": "12463:94:5",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "12487:70:5",
													"statements": [
														{
															"expression": {
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1620,
																	"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "12502:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1621,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12536:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12502:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "12502:43:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12570:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12588:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "12570:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "12567:96:5",
												"trueBody": {
													"id": 1633,
													"nodeType": "Block",
													"src": "12591:72:5",
													"statements": [
														{
															"expression": {
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1629,
																	"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "12606:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1630,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12642:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12606:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1632,
															"nodeType": "ExpressionStatement",
															"src": "12606:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1635,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12676:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3136",
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12694:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "16"
													},
													"src": "12676:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1643,
												"nodeType": "IfStatement",
												"src": "12673:81:5",
												"trueBody": {
													"id": 1642,
													"nodeType": "Block",
													"src": "12697:57:5",
													"statements": [
														{
															"expression": {
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1638,
																	"name": "SPOT_NB_TIMEFRAMES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "12712:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1639,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12733:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12712:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "12712:30:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1644,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12767:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3137",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12785:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_17_by_1",
															"typeString": "int_const 17"
														},
														"value": "17"
													},
													"src": "12767:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "12764:85:5",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "12788:61:5",
													"statements": [
														{
															"expression": {
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1647,
																	"name": "MAX_SUCCEEDING_NOVOTES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "12803:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1648,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12828:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12803:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1650,
															"nodeType": "ExpressionStatement",
															"src": "12803:34:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "12862:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3138",
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12880:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "12862:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "12859:96:5",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "12883:72:5",
													"statements": [
														{
															"expression": {
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1656,
																	"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "12898:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1657,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "12934:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12898:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1659,
															"nodeType": "ExpressionStatement",
															"src": "12898:45:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ee37f4a6",
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1498,
											"modifierName": {
												"id": 1497,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "11113:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "11113:9:5"
										}
									],
									"name": "updateSpottingParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "11047:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11047:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "11071:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11071:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "boolValue",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "11090:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11090:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11046:59:5"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11123:0:5"
									},
									"scope": 2366,
									"src": "11013:1949:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "13068:852:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1672,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13090:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13108:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "13090:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "IfStatement",
												"src": "13087:88:5",
												"trueBody": {
													"id": 1679,
													"nodeType": "Block",
													"src": "13110:65:5",
													"statements": [
														{
															"expression": {
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1675,
																	"name": "COMPLIANCE_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "13125:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1676,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13154:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13125:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1678,
															"nodeType": "ExpressionStatement",
															"src": "13125:38:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1681,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13188:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "13188:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "13185:83:5",
												"trueBody": {
													"id": 1688,
													"nodeType": "Block",
													"src": "13208:60:5",
													"statements": [
														{
															"expression": {
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1684,
																	"name": "COMPLIANCE_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "13223:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1685,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13247:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13223:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1687,
															"nodeType": "ExpressionStatement",
															"src": "13223:33:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1690,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13281:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13299:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "13281:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "13278:100:5",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "13301:77:5",
													"statements": [
														{
															"expression": {
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1693,
																	"name": "COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "13316:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1694,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13357:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13316:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1696,
															"nodeType": "ExpressionStatement",
															"src": "13316:50:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1699,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13391:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13409:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "13391:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1707,
												"nodeType": "IfStatement",
												"src": "13388:100:5",
												"trueBody": {
													"id": 1706,
													"nodeType": "Block",
													"src": "13411:77:5",
													"statements": [
														{
															"expression": {
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1702,
																	"name": "COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "13426:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1703,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13467:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13426:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1705,
															"nodeType": "ExpressionStatement",
															"src": "13426:50:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1708,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13501:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13519:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "13501:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "13498:95:5",
												"trueBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "13521:72:5",
													"statements": [
														{
															"expression": {
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1711,
																	"name": "COMPLIANCE_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "13536:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1712,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13572:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13536:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1714,
															"nodeType": "ExpressionStatement",
															"src": "13536:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13606:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "13606:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "13603:95:5",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "13626:72:5",
													"statements": [
														{
															"expression": {
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1720,
																	"name": "COMPLIANCE_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "13641:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1721,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13677:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13641:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "13641:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1726,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13711:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13729:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "13711:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1734,
												"nodeType": "IfStatement",
												"src": "13708:96:5",
												"trueBody": {
													"id": 1733,
													"nodeType": "Block",
													"src": "13731:73:5",
													"statements": [
														{
															"expression": {
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1729,
																	"name": "COMPLIANCE_MIN_REP_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "13746:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1730,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13783:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13746:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1732,
															"nodeType": "ExpressionStatement",
															"src": "13746:46:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "13817:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13835:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "13817:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "IfStatement",
												"src": "13814:99:5",
												"trueBody": {
													"id": 1742,
													"nodeType": "Block",
													"src": "13837:76:5",
													"statements": [
														{
															"expression": {
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1738,
																	"name": "COMPLIANCE_MIN_REWARD_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "13852:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1739,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "13892:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13852:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1741,
															"nodeType": "ExpressionStatement",
															"src": "13852:49:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e168063c",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1670,
											"modifierName": {
												"id": 1669,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "13058:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "13058:9:5"
										}
									],
									"name": "updateComplianceParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "13008:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "13032:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13007:43:5"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13068:0:5"
									},
									"scope": 2366,
									"src": "12972:948:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1826,
										"nodeType": "Block",
										"src": "14024:836:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1754,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14046:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14064:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "14046:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1762,
												"nodeType": "IfStatement",
												"src": "14043:86:5",
												"trueBody": {
													"id": 1761,
													"nodeType": "Block",
													"src": "14066:63:5",
													"statements": [
														{
															"expression": {
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1757,
																	"name": "INDEXING_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "14081:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1758,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14108:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14081:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "14081:36:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1763,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14142:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14160:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "14142:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1771,
												"nodeType": "IfStatement",
												"src": "14139:81:5",
												"trueBody": {
													"id": 1770,
													"nodeType": "Block",
													"src": "14162:58:5",
													"statements": [
														{
															"expression": {
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1766,
																	"name": "INDEXING_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "14177:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1767,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14199:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14177:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1769,
															"nodeType": "ExpressionStatement",
															"src": "14177:31:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1772,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14233:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14251:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "14233:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "14230:98:5",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "14253:75:5",
													"statements": [
														{
															"expression": {
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1775,
																	"name": "INDEXING_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "14268:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1776,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14268:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1778,
															"nodeType": "ExpressionStatement",
															"src": "14268:48:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1781,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14341:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "14341:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1789,
												"nodeType": "IfStatement",
												"src": "14338:98:5",
												"trueBody": {
													"id": 1788,
													"nodeType": "Block",
													"src": "14361:75:5",
													"statements": [
														{
															"expression": {
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1784,
																	"name": "INDEXING_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "14376:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1785,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14415:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14376:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1787,
															"nodeType": "ExpressionStatement",
															"src": "14376:48:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1790,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14449:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14467:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "14449:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1798,
												"nodeType": "IfStatement",
												"src": "14446:93:5",
												"trueBody": {
													"id": 1797,
													"nodeType": "Block",
													"src": "14469:70:5",
													"statements": [
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1793,
																	"name": "INDEXING_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "14484:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1794,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14518:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14484:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "14484:43:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1799,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14552:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14570:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "14552:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1807,
												"nodeType": "IfStatement",
												"src": "14549:93:5",
												"trueBody": {
													"id": 1806,
													"nodeType": "Block",
													"src": "14572:70:5",
													"statements": [
														{
															"expression": {
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1802,
																	"name": "INDEXING_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "14587:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1803,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14621:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14587:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1805,
															"nodeType": "ExpressionStatement",
															"src": "14587:43:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1808,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14655:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14673:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "14655:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1816,
												"nodeType": "IfStatement",
												"src": "14652:94:5",
												"trueBody": {
													"id": 1815,
													"nodeType": "Block",
													"src": "14675:71:5",
													"statements": [
														{
															"expression": {
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1811,
																	"name": "INDEXING_MIN_REP_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "14690:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1812,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14725:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14690:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1814,
															"nodeType": "ExpressionStatement",
															"src": "14690:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1817,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "14759:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14777:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "14759:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1825,
												"nodeType": "IfStatement",
												"src": "14756:97:5",
												"trueBody": {
													"id": 1824,
													"nodeType": "Block",
													"src": "14779:74:5",
													"statements": [
														{
															"expression": {
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1820,
																	"name": "INDEXING_MIN_REWARD_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "14794:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1821,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "14832:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14794:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1823,
															"nodeType": "ExpressionStatement",
															"src": "14794:47:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "75dc6130",
									"id": 1827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1752,
											"modifierName": {
												"id": 1751,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "14014:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "14014:9:5"
										}
									],
									"name": "updateIndexingParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "13964:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13964:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1827,
												"src": "13988:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13988:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13963:43:5"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14024:0:5"
									},
									"scope": 2366,
									"src": "13930:930:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "14965:844:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1836,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "14987:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15005:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "14987:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "14984:87:5",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "15007:64:5",
													"statements": [
														{
															"expression": {
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1839,
																	"name": "ARCHIVING_DATA_BATCH_SIZE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "15022:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1840,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15050:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15022:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1842,
															"nodeType": "ExpressionStatement",
															"src": "15022:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1845,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15084:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15102:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "15084:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1853,
												"nodeType": "IfStatement",
												"src": "15081:82:5",
												"trueBody": {
													"id": 1852,
													"nodeType": "Block",
													"src": "15104:59:5",
													"statements": [
														{
															"expression": {
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1848,
																	"name": "ARCHIVING_MIN_STAKE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "15119:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1849,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15142:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15119:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1851,
															"nodeType": "ExpressionStatement",
															"src": "15119:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15176:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15194:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "15176:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1862,
												"nodeType": "IfStatement",
												"src": "15173:99:5",
												"trueBody": {
													"id": 1861,
													"nodeType": "Block",
													"src": "15196:76:5",
													"statements": [
														{
															"expression": {
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1857,
																	"name": "ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "15211:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1858,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15251:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15211:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "15211:49:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1863,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15285:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15303:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "15285:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1871,
												"nodeType": "IfStatement",
												"src": "15282:99:5",
												"trueBody": {
													"id": 1870,
													"nodeType": "Block",
													"src": "15305:76:5",
													"statements": [
														{
															"expression": {
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1866,
																	"name": "ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "15320:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1867,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15360:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15320:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1869,
															"nodeType": "ExpressionStatement",
															"src": "15320:49:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1872,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15394:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "35",
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15412:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "15394:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1880,
												"nodeType": "IfStatement",
												"src": "15391:94:5",
												"trueBody": {
													"id": 1879,
													"nodeType": "Block",
													"src": "15414:71:5",
													"statements": [
														{
															"expression": {
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1875,
																	"name": "ARCHIVING_COMMIT_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "15429:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1876,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15464:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15429:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1878,
															"nodeType": "ExpressionStatement",
															"src": "15429:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1881,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15498:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "36",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15516:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "15498:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1889,
												"nodeType": "IfStatement",
												"src": "15495:94:5",
												"trueBody": {
													"id": 1888,
													"nodeType": "Block",
													"src": "15518:71:5",
													"statements": [
														{
															"expression": {
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1884,
																	"name": "ARCHIVING_REVEAL_ROUND_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "15533:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1885,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15568:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15533:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1887,
															"nodeType": "ExpressionStatement",
															"src": "15533:44:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1890,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15602:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15620:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "15602:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "15599:95:5",
												"trueBody": {
													"id": 1897,
													"nodeType": "Block",
													"src": "15622:72:5",
													"statements": [
														{
															"expression": {
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1893,
																	"name": "ARCHIVING_MIN_REP_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "15637:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1894,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15673:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15637:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1896,
															"nodeType": "ExpressionStatement",
															"src": "15637:45:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1899,
														"name": "ParameterIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "15707:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "38",
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15725:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "15707:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1907,
												"nodeType": "IfStatement",
												"src": "15704:98:5",
												"trueBody": {
													"id": 1906,
													"nodeType": "Block",
													"src": "15727:75:5",
													"statements": [
														{
															"expression": {
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1902,
																	"name": "ARCHIVING_MIN_REWARD_DataValidation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "15742:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1903,
																	"name": "uintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "15781:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15742:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1905,
															"nodeType": "ExpressionStatement",
															"src": "15742:48:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "55a35f5c",
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1834,
											"modifierName": {
												"id": 1833,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "14955:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "14955:9:5"
										}
									],
									"name": "updateArchivingParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "ParameterIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "14905:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14905:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "uintValue",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "14929:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14929:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14904:43:5"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14965:0:5"
									},
									"scope": 2366,
									"src": "14870:939:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "15939:43:5",
										"statements": [
											{
												"expression": {
													"id": 1914,
													"name": "MAX_TOTAL_WORKERS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1040,
													"src": "15957:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1913,
												"id": 1915,
												"nodeType": "Return",
												"src": "15950:24:5"
											}
										]
									},
									"functionSelector": "98a54e2b",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxTotalWorkers",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15908:2:5"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "15931:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15930:9:5"
									},
									"scope": 2366,
									"src": "15881:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "16041:37:5",
										"statements": [
											{
												"expression": {
													"id": 1922,
													"name": "VOTE_QUORUM",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1043,
													"src": "16059:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1921,
												"id": 1923,
												"nodeType": "Return",
												"src": "16052:18:5"
											}
										]
									},
									"functionSelector": "ea19733c",
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVoteQuorum",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16010:2:5"
									},
									"returnParameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "16033:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16032:9:5"
									},
									"scope": 2366,
									"src": "15988:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "16149:47:5",
										"statements": [
											{
												"expression": {
													"id": 1930,
													"name": "MAX_UPDATE_ITERATIONS",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1046,
													"src": "16167:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1929,
												"id": 1931,
												"nodeType": "Return",
												"src": "16160:28:5"
											}
										]
									},
									"functionSelector": "7d630cb0",
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_UPDATE_ITERATIONS",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16118:2:5"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "16141:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16141:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16140:9:5"
									},
									"scope": 2366,
									"src": "16084:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "16273:53:5",
										"statements": [
											{
												"expression": {
													"id": 1938,
													"name": "MAX_CONTRACT_STORED_BATCHES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1049,
													"src": "16291:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1939,
												"nodeType": "Return",
												"src": "16284:34:5"
											}
										]
									},
									"functionSelector": "e3115d3c",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_CONTRACT_STORED_BATCHES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16242:2:5"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "16265:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16264:9:5"
									},
									"scope": 2366,
									"src": "16202:124:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "16457:38:5",
										"statements": [
											{
												"expression": {
													"id": 1946,
													"name": "StakeManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1251,
													"src": "16475:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1945,
												"id": 1947,
												"nodeType": "Return",
												"src": "16468:19:5"
											}
										]
									},
									"functionSelector": "ca64f9e7",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakeManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16426:2:5"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "16449:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16449:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16448:9:5"
									},
									"scope": 2366,
									"src": "16402:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "16554:36:5",
										"statements": [
											{
												"expression": {
													"id": 1954,
													"name": "RepManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1255,
													"src": "16572:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1953,
												"id": 1955,
												"nodeType": "Return",
												"src": "16565:17:5"
											}
										]
									},
									"functionSelector": "0855d151",
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRepManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16523:2:5"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "16546:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16546:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16545:9:5"
									},
									"scope": 2366,
									"src": "16501:89:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "16655:36:5",
										"statements": [
											{
												"expression": {
													"id": 1962,
													"name": "Reputation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1253,
													"src": "16673:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1963,
												"nodeType": "Return",
												"src": "16666:17:5"
											}
										]
									},
									"functionSelector": "e992dca7",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReputationSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16624:2:5"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "16647:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16647:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16646:9:5"
									},
									"scope": 2366,
									"src": "16596:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "16754:40:5",
										"statements": [
											{
												"expression": {
													"id": 1970,
													"name": "AddressManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "16772:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1971,
												"nodeType": "Return",
												"src": "16765:21:5"
											}
										]
									},
									"functionSelector": "5492f302",
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16723:2:5"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1973,
												"src": "16746:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16745:9:5"
									},
									"scope": 2366,
									"src": "16697:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "16856:39:5",
										"statements": [
											{
												"expression": {
													"id": 1978,
													"name": "RewardManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1257,
													"src": "16874:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1979,
												"nodeType": "Return",
												"src": "16867:20:5"
											}
										]
									},
									"functionSelector": "04e76c8f",
									"id": 1981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardManager",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16825:2:5"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "16848:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16847:9:5"
									},
									"scope": 2366,
									"src": "16800:95:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "16962:40:5",
										"statements": [
											{
												"expression": {
													"id": 1986,
													"name": "SpottingSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1263,
													"src": "16980:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1985,
												"id": 1987,
												"nodeType": "Return",
												"src": "16973:21:5"
											}
										]
									},
									"functionSelector": "b45d9d8d",
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSpottingSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16931:2:5"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "16954:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16953:9:5"
									},
									"scope": 2366,
									"src": "16905:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "17067:42:5",
										"statements": [
											{
												"expression": {
													"id": 1994,
													"name": "ComplianceSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "17085:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1993,
												"id": 1995,
												"nodeType": "Return",
												"src": "17078:23:5"
											}
										]
									},
									"functionSelector": "f67362fe",
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getComplianceSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17036:2:5"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "17059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17059:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17058:9:5"
									},
									"scope": 2366,
									"src": "17008:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "17172:40:5",
										"statements": [
											{
												"expression": {
													"id": 2002,
													"name": "IndexingSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "17190:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2003,
												"nodeType": "Return",
												"src": "17183:21:5"
											}
										]
									},
									"functionSelector": "7a0ec25b",
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndexingSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17141:2:5"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "17164:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17164:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17163:9:5"
									},
									"scope": 2366,
									"src": "17115:97:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "17276:41:5",
										"statements": [
											{
												"expression": {
													"id": 2010,
													"name": "ArchivingSystem",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1269,
													"src": "17294:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2011,
												"nodeType": "Return",
												"src": "17287:22:5"
											}
										]
									},
									"functionSelector": "463444b7",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getArchivingSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17245:2:5"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "17268:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17268:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17267:9:5"
									},
									"scope": 2366,
									"src": "17218:99:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "17377:31:5",
										"statements": [
											{
												"expression": {
													"id": 2018,
													"name": "sFuel",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1261,
													"src": "17395:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2017,
												"id": 2019,
												"nodeType": "Return",
												"src": "17388:12:5"
											}
										]
									},
									"functionSelector": "557c1abe",
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getsFuelSystem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17346:2:5"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "17369:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17368:9:5"
									},
									"scope": 2366,
									"src": "17323:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "17468:31:5",
										"statements": [
											{
												"expression": {
													"id": 2026,
													"name": "token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1249,
													"src": "17486:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2027,
												"nodeType": "Return",
												"src": "17479:12:5"
											}
										]
									},
									"functionSelector": "2e2f93f3",
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExordeToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17437:2:5"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "17460:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17459:9:5"
									},
									"scope": 2366,
									"src": "17414:85:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "17634:46:5",
										"statements": [
											{
												"expression": {
													"id": 2034,
													"name": "SPOT_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1052,
													"src": "17652:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2033,
												"id": 2035,
												"nodeType": "Return",
												"src": "17645:27:5"
											}
										]
									},
									"functionSelector": "9d1f2ada",
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17603:2:5"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "17626:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17625:9:5"
									},
									"scope": 2366,
									"src": "17570:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "17744:40:5",
										"statements": [
											{
												"expression": {
													"id": 2042,
													"name": "SPOT_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "17762:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2041,
												"id": 2043,
												"nodeType": "Return",
												"src": "17755:21:5"
											}
										]
									},
									"functionSelector": "ff622dda",
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17713:2:5"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "17736:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17735:9:5"
									},
									"scope": 2366,
									"src": "17686:98:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "17865:57:5",
										"statements": [
											{
												"expression": {
													"id": 2050,
													"name": "SPOT_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1063,
													"src": "17883:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2051,
												"nodeType": "Return",
												"src": "17876:38:5"
											}
										]
									},
									"functionSelector": "bd40ef4c",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17834:2:5"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "17857:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17857:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17856:9:5"
									},
									"scope": 2366,
									"src": "17790:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "18003:57:5",
										"statements": [
											{
												"expression": {
													"id": 2058,
													"name": "SPOT_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1066,
													"src": "18021:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2057,
												"id": 2059,
												"nodeType": "Return",
												"src": "18014:38:5"
											}
										]
									},
									"functionSelector": "dfeceed7",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17972:2:5"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "17995:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17995:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17994:9:5"
									},
									"scope": 2366,
									"src": "17928:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "18136:52:5",
										"statements": [
											{
												"expression": {
													"id": 2066,
													"name": "SPOT_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1069,
													"src": "18154:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2067,
												"nodeType": "Return",
												"src": "18147:33:5"
											}
										]
									},
									"functionSelector": "3692616a",
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18105:2:5"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "18128:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:5"
									},
									"scope": 2366,
									"src": "18066:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "18264:52:5",
										"statements": [
											{
												"expression": {
													"id": 2074,
													"name": "SPOT_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1072,
													"src": "18282:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2075,
												"nodeType": "Return",
												"src": "18275:33:5"
											}
										]
									},
									"functionSelector": "72e54030",
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18233:2:5"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "18256:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18256:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18255:9:5"
									},
									"scope": 2366,
									"src": "18194:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "18387:47:5",
										"statements": [
											{
												"expression": {
													"id": 2082,
													"name": "SPOT_MIN_REP_SpotData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1088,
													"src": "18405:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2081,
												"id": 2083,
												"nodeType": "Return",
												"src": "18398:28:5"
											}
										]
									},
									"functionSelector": "abb10b9b",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REP_SpotData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18356:2:5"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "18379:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18379:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18378:9:5"
									},
									"scope": 2366,
									"src": "18322:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "18508:50:5",
										"statements": [
											{
												"expression": {
													"id": 2090,
													"name": "SPOT_MIN_REWARD_SpotData",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "18526:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2089,
												"id": 2091,
												"nodeType": "Return",
												"src": "18519:31:5"
											}
										]
									},
									"functionSelector": "30c0bb79",
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REWARD_SpotData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18477:2:5"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "18500:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18499:9:5"
									},
									"scope": 2366,
									"src": "18440:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "18635:53:5",
										"statements": [
											{
												"expression": {
													"id": 2098,
													"name": "SPOT_MIN_REP_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "18653:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2097,
												"id": 2099,
												"nodeType": "Return",
												"src": "18646:34:5"
											}
										]
									},
									"functionSelector": "0b08bfd9",
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REP_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18604:2:5"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "18627:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18627:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18626:9:5"
									},
									"scope": 2366,
									"src": "18564:124:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "18768:56:5",
										"statements": [
											{
												"expression": {
													"id": 2106,
													"name": "SPOT_MIN_REWARD_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1096,
													"src": "18786:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2107,
												"nodeType": "Return",
												"src": "18779:37:5"
											}
										]
									},
									"functionSelector": "f80de0a0",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MIN_REWARD_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18737:2:5"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "18760:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18760:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18759:9:5"
									},
									"scope": 2366,
									"src": "18694:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "18904:56:5",
										"statements": [
											{
												"expression": {
													"id": 2114,
													"name": "SPOT_INTER_ALLOCATION_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1107,
													"src": "18922:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2113,
												"id": 2115,
												"nodeType": "Return",
												"src": "18915:37:5"
											}
										]
									},
									"functionSelector": "c4a306f8",
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_INTER_ALLOCATION_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18873:2:5"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "18896:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18896:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18895:9:5"
									},
									"scope": 2366,
									"src": "18830:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2124,
										"nodeType": "Block",
										"src": "19026:45:5",
										"statements": [
											{
												"expression": {
													"id": 2122,
													"name": "SPOT_TOGGLE_ENABLED",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "19044:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2121,
												"id": 2123,
												"nodeType": "Return",
												"src": "19037:26:5"
											}
										]
									},
									"functionSelector": "4e87c5a8",
									"id": 2125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_TOGGLE_ENABLED",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18998:2:5"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "19021:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19021:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19020:6:5"
									},
									"scope": 2366,
									"src": "18966:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "19148:49:5",
										"statements": [
											{
												"expression": {
													"id": 2130,
													"name": "SPOT_TIMEFRAME_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1115,
													"src": "19166:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2129,
												"id": 2131,
												"nodeType": "Return",
												"src": "19159:30:5"
											}
										]
									},
									"functionSelector": "0f78cc76",
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_TIMEFRAME_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19117:2:5"
									},
									"returnParameters": {
										"id": 2129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "19140:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19139:9:5"
									},
									"scope": 2366,
									"src": "19081:116:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "19282:57:5",
										"statements": [
											{
												"expression": {
													"id": 2138,
													"name": "SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1118,
													"src": "19300:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2137,
												"id": 2139,
												"nodeType": "Return",
												"src": "19293:38:5"
											}
										]
									},
									"functionSelector": "b38e885e",
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_GLOBAL_MAX_SPOT_PER_PERIOD",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19251:2:5"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "19274:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19274:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19273:9:5"
									},
									"scope": 2366,
									"src": "19207:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2148,
										"nodeType": "Block",
										"src": "19426:59:5",
										"statements": [
											{
												"expression": {
													"id": 2146,
													"name": "SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1121,
													"src": "19444:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2145,
												"id": 2147,
												"nodeType": "Return",
												"src": "19437:40:5"
											}
										]
									},
									"functionSelector": "be250988",
									"id": 2149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_MAX_SPOT_PER_USER_PER_PERIOD",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19395:2:5"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "19418:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19418:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19417:9:5"
									},
									"scope": 2366,
									"src": "19349:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "19553:44:5",
										"statements": [
											{
												"expression": {
													"id": 2154,
													"name": "SPOT_NB_TIMEFRAMES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1124,
													"src": "19571:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2153,
												"id": 2155,
												"nodeType": "Return",
												"src": "19564:25:5"
											}
										]
									},
									"functionSelector": "e66d543a",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_SPOT_NB_TIMEFRAMES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19522:2:5"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "19545:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19544:9:5"
									},
									"scope": 2366,
									"src": "19491:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "19669:48:5",
										"statements": [
											{
												"expression": {
													"id": 2162,
													"name": "MAX_SUCCEEDING_NOVOTES",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1127,
													"src": "19687:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2161,
												"id": 2163,
												"nodeType": "Return",
												"src": "19680:29:5"
											}
										]
									},
									"functionSelector": "9fb491f6",
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_MAX_SUCCEEDING_NOVOTES",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19638:2:5"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "19661:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19661:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19660:9:5"
									},
									"scope": 2366,
									"src": "19603:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "19800:59:5",
										"statements": [
											{
												"expression": {
													"id": 2170,
													"name": "NOVOTE_REGISTRATION_WAIT_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1130,
													"src": "19818:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2169,
												"id": 2171,
												"nodeType": "Return",
												"src": "19811:40:5"
											}
										]
									},
									"functionSelector": "0f1f0ffe",
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_NOVOTE_REGISTRATION_WAIT_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19769:2:5"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "19792:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19791:9:5"
									},
									"scope": 2366,
									"src": "19723:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "20002:52:5",
										"statements": [
											{
												"expression": {
													"id": 2178,
													"name": "COMPLIANCE_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1133,
													"src": "20020:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2177,
												"id": 2179,
												"nodeType": "Return",
												"src": "20013:33:5"
											}
										]
									},
									"functionSelector": "d1a89a46",
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19971:2:5"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "19994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19993:9:5"
									},
									"scope": 2366,
									"src": "19932:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "20124:46:5",
										"statements": [
											{
												"expression": {
													"id": 2186,
													"name": "COMPLIANCE_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1147,
													"src": "20142:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2187,
												"nodeType": "Return",
												"src": "20135:27:5"
											}
										]
									},
									"functionSelector": "e3dfc0b2",
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20093:2:5"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "20116:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20115:9:5"
									},
									"scope": 2366,
									"src": "20060:110:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "20257:63:5",
										"statements": [
											{
												"expression": {
													"id": 2194,
													"name": "COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1136,
													"src": "20275:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2195,
												"nodeType": "Return",
												"src": "20268:44:5"
											}
										]
									},
									"functionSelector": "fff5f946",
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20226:2:5"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "20249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20248:9:5"
									},
									"scope": 2366,
									"src": "20176:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2204,
										"nodeType": "Block",
										"src": "20407:63:5",
										"statements": [
											{
												"expression": {
													"id": 2202,
													"name": "COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "20425:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2201,
												"id": 2203,
												"nodeType": "Return",
												"src": "20418:44:5"
											}
										]
									},
									"functionSelector": "dc7048c1",
									"id": 2205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20376:2:5"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "20399:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20399:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20398:9:5"
									},
									"scope": 2366,
									"src": "20326:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "20552:58:5",
										"statements": [
											{
												"expression": {
													"id": 2210,
													"name": "COMPLIANCE_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1150,
													"src": "20570:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2211,
												"nodeType": "Return",
												"src": "20563:39:5"
											}
										]
									},
									"functionSelector": "484df80a",
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20521:2:5"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "20544:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20544:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20543:9:5"
									},
									"scope": 2366,
									"src": "20476:134:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "20692:58:5",
										"statements": [
											{
												"expression": {
													"id": 2218,
													"name": "COMPLIANCE_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1153,
													"src": "20710:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2219,
												"nodeType": "Return",
												"src": "20703:39:5"
											}
										]
									},
									"functionSelector": "2b0afab3",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20661:2:5"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "20684:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20683:9:5"
									},
									"scope": 2366,
									"src": "20616:134:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "20836:62:5",
										"statements": [
											{
												"expression": {
													"id": 2226,
													"name": "COMPLIANCE_MIN_REWARD_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1161,
													"src": "20854:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2225,
												"id": 2227,
												"nodeType": "Return",
												"src": "20847:43:5"
											}
										]
									},
									"functionSelector": "f116c4e0",
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_MIN_REWARD_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20805:2:5"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "20828:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20828:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20827:9:5"
									},
									"scope": 2366,
									"src": "20756:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2236,
										"nodeType": "Block",
										"src": "20981:59:5",
										"statements": [
											{
												"expression": {
													"id": 2234,
													"name": "COMPLIANCE_MIN_REP_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1169,
													"src": "20999:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2233,
												"id": 2235,
												"nodeType": "Return",
												"src": "20992:40:5"
											}
										]
									},
									"functionSelector": "89b212d3",
									"id": 2237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_COMPLIANCE_MIN_REP_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20950:2:5"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "20973:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20973:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20972:9:5"
									},
									"scope": 2366,
									"src": "20904:136:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "21181:50:5",
										"statements": [
											{
												"expression": {
													"id": 2242,
													"name": "INDEXING_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "21199:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2243,
												"nodeType": "Return",
												"src": "21192:31:5"
											}
										]
									},
									"functionSelector": "cb3a2a88",
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21150:2:5"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "21173:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21173:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21172:9:5"
									},
									"scope": 2366,
									"src": "21113:118:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "21299:44:5",
										"statements": [
											{
												"expression": {
													"id": 2250,
													"name": "INDEXING_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1186,
													"src": "21317:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2249,
												"id": 2251,
												"nodeType": "Return",
												"src": "21310:25:5"
											}
										]
									},
									"functionSelector": "bf34f749",
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21268:2:5"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "21291:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21291:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21290:9:5"
									},
									"scope": 2366,
									"src": "21237:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "21428:61:5",
										"statements": [
											{
												"expression": {
													"id": 2258,
													"name": "INDEXING_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1175,
													"src": "21446:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2259,
												"nodeType": "Return",
												"src": "21439:42:5"
											}
										]
									},
									"functionSelector": "a1a4575a",
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21397:2:5"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "21420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21419:9:5"
									},
									"scope": 2366,
									"src": "21349:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "21574:61:5",
										"statements": [
											{
												"expression": {
													"id": 2266,
													"name": "INDEXING_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1178,
													"src": "21592:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2267,
												"nodeType": "Return",
												"src": "21585:42:5"
											}
										]
									},
									"functionSelector": "e68c9c30",
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21543:2:5"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "21566:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21565:9:5"
									},
									"scope": 2366,
									"src": "21495:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "21715:56:5",
										"statements": [
											{
												"expression": {
													"id": 2274,
													"name": "INDEXING_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1189,
													"src": "21733:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2275,
												"nodeType": "Return",
												"src": "21726:37:5"
											}
										]
									},
									"functionSelector": "90cc59eb",
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21684:2:5"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "21707:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21706:9:5"
									},
									"scope": 2366,
									"src": "21641:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2284,
										"nodeType": "Block",
										"src": "21851:56:5",
										"statements": [
											{
												"expression": {
													"id": 2282,
													"name": "INDEXING_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "21869:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2281,
												"id": 2283,
												"nodeType": "Return",
												"src": "21862:37:5"
											}
										]
									},
									"functionSelector": "8a13725d",
									"id": 2285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21820:2:5"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2285,
												"src": "21843:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21843:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21842:9:5"
									},
									"scope": 2366,
									"src": "21777:130:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "21991:60:5",
										"statements": [
											{
												"expression": {
													"id": 2290,
													"name": "INDEXING_MIN_REWARD_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1200,
													"src": "22009:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2289,
												"id": 2291,
												"nodeType": "Return",
												"src": "22002:41:5"
											}
										]
									},
									"functionSelector": "386d0976",
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_MIN_REWARD_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21960:2:5"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "21983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21982:9:5"
									},
									"scope": 2366,
									"src": "21913:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2300,
										"nodeType": "Block",
										"src": "22132:57:5",
										"statements": [
											{
												"expression": {
													"id": 2298,
													"name": "INDEXING_MIN_REP_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "22150:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2299,
												"nodeType": "Return",
												"src": "22143:38:5"
											}
										]
									},
									"functionSelector": "849f9f0a",
									"id": 2301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_INDEXING_MIN_REP_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22101:2:5"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "22124:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22124:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22123:9:5"
									},
									"scope": 2366,
									"src": "22057:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2308,
										"nodeType": "Block",
										"src": "22332:51:5",
										"statements": [
											{
												"expression": {
													"id": 2306,
													"name": "ARCHIVING_DATA_BATCH_SIZE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1211,
													"src": "22350:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2305,
												"id": 2307,
												"nodeType": "Return",
												"src": "22343:32:5"
											}
										]
									},
									"functionSelector": "0363a1bf",
									"id": 2309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_DATA_BATCH_SIZE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22301:2:5"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "22324:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22324:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22323:9:5"
									},
									"scope": 2366,
									"src": "22263:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "22452:45:5",
										"statements": [
											{
												"expression": {
													"id": 2314,
													"name": "ARCHIVING_MIN_STAKE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1225,
													"src": "22470:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2313,
												"id": 2315,
												"nodeType": "Return",
												"src": "22463:26:5"
											}
										]
									},
									"functionSelector": "b1562f67",
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_MIN_STAKE",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22421:2:5"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "22444:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22444:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22443:9:5"
									},
									"scope": 2366,
									"src": "22389:108:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "22583:62:5",
										"statements": [
											{
												"expression": {
													"id": 2322,
													"name": "ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1214,
													"src": "22601:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2323,
												"nodeType": "Return",
												"src": "22594:43:5"
											}
										]
									},
									"functionSelector": "995adbdd",
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_MIN_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22552:2:5"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "22575:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22575:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22574:9:5"
									},
									"scope": 2366,
									"src": "22503:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "22731:62:5",
										"statements": [
											{
												"expression": {
													"id": 2330,
													"name": "ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "22749:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2329,
												"id": 2331,
												"nodeType": "Return",
												"src": "22742:43:5"
											}
										]
									},
									"functionSelector": "3968ec84",
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_MAX_CONSENSUS_WORKER_COUNT",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22700:2:5"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "22723:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22722:9:5"
									},
									"scope": 2366,
									"src": "22651:142:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "22874:57:5",
										"statements": [
											{
												"expression": {
													"id": 2338,
													"name": "ARCHIVING_COMMIT_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "22892:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2337,
												"id": 2339,
												"nodeType": "Return",
												"src": "22885:38:5"
											}
										]
									},
									"functionSelector": "9279e9d4",
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_COMMIT_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22843:2:5"
									},
									"returnParameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "22866:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22866:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22865:9:5"
									},
									"scope": 2366,
									"src": "22799:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "23012:57:5",
										"statements": [
											{
												"expression": {
													"id": 2346,
													"name": "ARCHIVING_REVEAL_ROUND_DURATION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "23030:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2345,
												"id": 2347,
												"nodeType": "Return",
												"src": "23023:38:5"
											}
										]
									},
									"functionSelector": "29e3dd1f",
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_REVEAL_ROUND_DURATION",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22981:2:5"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "23004:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23004:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23003:9:5"
									},
									"scope": 2366,
									"src": "22937:132:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2356,
										"nodeType": "Block",
										"src": "23154:61:5",
										"statements": [
											{
												"expression": {
													"id": 2354,
													"name": "ARCHIVING_MIN_REWARD_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1239,
													"src": "23172:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2353,
												"id": 2355,
												"nodeType": "Return",
												"src": "23165:42:5"
											}
										]
									},
									"functionSelector": "893b2a76",
									"id": 2357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_MIN_REWARD_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23123:2:5"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "23146:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23145:9:5"
									},
									"scope": 2366,
									"src": "23075:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "23297:58:5",
										"statements": [
											{
												"expression": {
													"id": 2362,
													"name": "ARCHIVING_MIN_REP_DataValidation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1247,
													"src": "23315:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2361,
												"id": 2363,
												"nodeType": "Return",
												"src": "23308:39:5"
											}
										]
									},
									"functionSelector": "49b46787",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_ARCHIVING_MIN_REP_DataValidation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23266:2:5"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "23289:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23289:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23288:9:5"
									},
									"scope": 2366,
									"src": "23221:134:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2367,
							"src": "351:23009:5"
						}
					],
					"src": "39:23321:5"
				},
				"id": 5
			}
		}
	}
}